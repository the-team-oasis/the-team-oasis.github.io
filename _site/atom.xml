<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="//assets/xslt/atom.xslt" ?>
<?xml-stylesheet type="text/css" href="//assets/css/atom.css" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<id>http://localhost:4000//</id>
	<title>OASIS&apos;s Technical Blog</title>
	<updated>2023-01-07T17:45:58+09:00</updated>

	<subtitle>»Feeling Responsive« is a responsive theme for Jekyll based on the fabulous foundation framework with beautiful typography and a bright color palette.</subtitle>

	
		
		<author>
			
				<name>DanKim</name>
			
			
			
				<uri>http://github.com/mangdan</uri>
			
		</author>
	

	<link href="http://localhost:4000//atom.xml" rel="self" type="application/rss+xml" />
	<link href="http://localhost:4000//" rel="alternate" type="text/html" />

	<generator uri="http://jekyllrb.com" version="4.2.2">Jekyll</generator>

	
		<entry>
			<id>http://localhost:4000//cloudnative/oci-certificate-with-lb/</id>
			<title>OCI Certificates - OCI 인증서 서비스에 등록한 인증서를 Application Load Balancer에 적용하기</title>
			<link href="http://localhost:4000//cloudnative/oci-certificate-with-lb/" rel="alternate" type="text/html" title="OCI Certificates - OCI 인증서 서비스에 등록한 인증서를 Application Load Balancer에 적용하기" />
			<updated>2023-01-03T00:00:00+09:00</updated>

			
				
				<author>
					
						<name>Young Hwan</name>
					
					
					
				</author>
			
			<summary>OCI 인증서 서비스에 등록된 인증서를 Application Load Balancer에 적용하는 방법에 대해 알아봅니다</summary>
			<content type="html" xml:base="http://localhost:4000//cloudnative/oci-certificate-with-lb/">&lt;div class=&quot;panel radius&quot;&gt;
  &lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#oci-certificates-소개&quot; id=&quot;markdown-toc-oci-certificates-소개&quot;&gt;OCI Certificates 소개&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#lets-encrypt-인증서-발급-안내&quot; id=&quot;markdown-toc-lets-encrypt-인증서-발급-안내&quot;&gt;Let’s Encrypt 인증서 발급 안내&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#oci-인증서를-oci-load-balancerapplication에-적용-실습-안내&quot; id=&quot;markdown-toc-oci-인증서를-oci-load-balancerapplication에-적용-실습-안내&quot;&gt;OCI 인증서를 OCI Load Balancer(Application)에 적용 실습 안내&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#사전-준비-사항&quot; id=&quot;markdown-toc-사전-준비-사항&quot;&gt;사전 준비 사항&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#실습-순서&quot; id=&quot;markdown-toc-실습-순서&quot;&gt;실습 순서&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#1-실습-compartment-생성&quot; id=&quot;markdown-toc-1-실습-compartment-생성&quot;&gt;1. 실습 Compartment 생성&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-실습-virtual-cloud-networkvcn-생성&quot; id=&quot;markdown-toc-2-실습-virtual-cloud-networkvcn-생성&quot;&gt;2. 실습 Virtual Cloud Network(VCN) 생성&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-compute-instance-생성-및-웹서버-설치&quot; id=&quot;markdown-toc-3-compute-instance-생성-및-웹서버-설치&quot;&gt;3. Compute Instance 생성 및 웹서버 설치&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#task-1-compute-instance-생성&quot; id=&quot;markdown-toc-task-1-compute-instance-생성&quot;&gt;Task 1: Compute Instance 생성&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#task-2-compute-instance-접속&quot; id=&quot;markdown-toc-task-2-compute-instance-접속&quot;&gt;Task 2: Compute Instance 접속&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#task-3-oci-보안목록-security-list-설정&quot; id=&quot;markdown-toc-task-3-oci-보안목록-security-list-설정&quot;&gt;Task 3: OCI 보안목록 (Security List) 설정&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#task-4-apache-httpd-서버-설치-및-접속-확인&quot; id=&quot;markdown-toc-task-4-apache-httpd-서버-설치-및-접속-확인&quot;&gt;Task 4: Apache httpd 서버 설치 및 접속 확인&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4-application-load-balancer-생성-및-설정하기&quot; id=&quot;markdown-toc-4-application-load-balancer-생성-및-설정하기&quot;&gt;4. Application Load Balancer 생성 및 설정하기&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#5-oci-dns-서비스에서-record-생성하기&quot; id=&quot;markdown-toc-5-oci-dns-서비스에서-record-생성하기&quot;&gt;5. OCI DNS 서비스에서 Record 생성하기&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#6-도메인을-접속-및-인증서-적용-확인&quot; id=&quot;markdown-toc-6-도메인을-접속-및-인증서-적용-확인&quot;&gt;6. 도메인을 접속 및 인증서 적용 확인&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#7-oci-로드밸런서에서-http---https-리다이렉트-구성하기&quot; id=&quot;markdown-toc-7-oci-로드밸런서에서-http---https-리다이렉트-구성하기&quot;&gt;7. OCI 로드밸런서에서 http - https 리다이렉트 구성하기&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#task-1-oci-로드밸런서-http-리스너-생성-및-접속-테스트&quot; id=&quot;markdown-toc-task-1-oci-로드밸런서-http-리스너-생성-및-접속-테스트&quot;&gt;Task 1: OCI 로드밸런서 http 리스너 생성 및 접속 테스트&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#task-2-oci-로드밸런서-https-리다이렉트-규칙-집합-생성하기-url-재지정&quot; id=&quot;markdown-toc-task-2-oci-로드밸런서-https-리다이렉트-규칙-집합-생성하기-url-재지정&quot;&gt;Task 2: OCI 로드밸런서 https 리다이렉트 규칙 집합 생성하기 (URL 재지정)&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#task-3-oci-로드밸런서-https-리다이렉트-규칙-적용-및-접속-테스트&quot; id=&quot;markdown-toc-task-3-oci-로드밸런서-https-리다이렉트-규칙-적용-및-접속-테스트&quot;&gt;Task 3: OCI 로드밸런서 https 리다이렉트 규칙 적용 및 접속 테스트&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#마무리-하며&quot; id=&quot;markdown-toc-마무리-하며&quot;&gt;마무리 하며…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#참고-자료&quot; id=&quot;markdown-toc-참고-자료&quot;&gt;참고 자료&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#참고-블로그&quot; id=&quot;markdown-toc-참고-블로그&quot;&gt;참고 블로그&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#oracle-공식-문서&quot; id=&quot;markdown-toc-oracle-공식-문서&quot;&gt;Oracle 공식 문서&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#인증서-서비스관련-포스팅&quot; id=&quot;markdown-toc-인증서-서비스관련-포스팅&quot;&gt;인증서 서비스관련 포스팅&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h3 id=&quot;oci-certificates-소개&quot;&gt;OCI Certificates 소개&lt;/h3&gt;
&lt;p&gt;OCI Certificates 서비스를 처음 접하시거나 자세한 내용이 궁금하신 경우 아래 포스팅을 통해 서비스 내용을 확인해보세요.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;/cloudnative/oci-certificate-overview/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OCI Certificates 서비스 살펴보기&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;lets-encrypt-인증서-발급-안내&quot;&gt;Let’s Encrypt 인증서 발급 안내&lt;/h3&gt;
&lt;p&gt;Let’s Encrypt 인증서 발급 방법 및 OCI 인증서 서비스에 등록하기 위한 자세한 내용이 궁금하신 경우 아래 포스팅을 통해 서비스 내용을 확인해보세요.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;/cloudnative/oci-certificate-import-letsencrypt-cert/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OCI Certificates - Let’s Encrypt로 생성한 인증서를 OCI 인증서 서비스에 Import 하기&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;oci-인증서를-oci-load-balancerapplication에-적용-실습-안내&quot;&gt;OCI 인증서를 OCI Load Balancer(Application)에 적용 실습 안내&lt;/h3&gt;
&lt;p&gt;이전 포스팅 (Let’s Encrypt)의 내용을 성공적으로 진행하셨다면, 등록한 인증서를 OCI 서비스중 LB에 연결하기 위한 과정을 소개하기 위한 내용을 준비하였습니다.
일반적인 VM위에 웹서버를 설치하고 간단한 페이지를 생성한 후 LB를 생성하여 SSL 도메인 인증서를 적용하는 실습을 진행합니다.
마지막으로 http로 호출한 요청을 https로 리다이렉트하는 설정 방법을 소개 드릴 예정입니다.&lt;/p&gt;

&lt;h4 id=&quot;사전-준비-사항&quot;&gt;사전 준비 사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Public Domain 구입&lt;/li&gt;
  &lt;li&gt;Let’s Encrypt 인증서 발급&lt;/li&gt;
  &lt;li&gt;OCI 인증서 서비스에 인증서 등록&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;실습-순서&quot;&gt;실습 순서&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;실습 Compartment 생성&lt;/li&gt;
  &lt;li&gt;실습 Virtual Cloud Network(VCN) 생성&lt;/li&gt;
  &lt;li&gt;Compute Instance 생성 및 웹서버 설치&lt;/li&gt;
  &lt;li&gt;Application Load Balancer 생성 및 설정하기&lt;/li&gt;
  &lt;li&gt;OCI DNS 서비스에서 Record 생성하기&lt;/li&gt;
  &lt;li&gt;도메인을 접속 및 인증서 적용 확인&lt;/li&gt;
  &lt;li&gt;OCI 로드밸런서에서 http - https 리다이렉트 구성하기&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;1-실습-compartment-생성&quot;&gt;1. 실습 Compartment 생성&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;좌측 상단의 &lt;strong&gt;햄버거 아이콘&lt;/strong&gt;을 클릭하고, &lt;strong&gt;ID &amp;amp; 보안(Identity &amp;amp; Security)&lt;/strong&gt;을 선택한 후 &lt;strong&gt;구획(Compartments)&lt;/strong&gt;을 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-compartment.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;이동한 화면에서 “구획 생성” 버튼을 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-compartment-create-1.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;다음과 같이 입력하여 실습 구획을 생성합니다.
    &lt;ul&gt;
      &lt;li&gt;Name: Enter &lt;strong&gt;oci-demo&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Description: &lt;strong&gt;OCI 실습 진행을 위한 구획입니다.&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Parent Compartment: &lt;strong&gt;루트 구획 또는 특정 구획 선택&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;구획 생성(Create Compartment)&lt;/strong&gt; 클릭&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-compartment-create-2.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2-실습-virtual-cloud-networkvcn-생성&quot;&gt;2. 실습 Virtual Cloud Network(VCN) 생성&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;전체 메뉴를 클릭하여 &lt;strong&gt;“네트워킹”&lt;/strong&gt; -&amp;gt; &lt;strong&gt;“가상 클라우드 네트워크”&lt;/strong&gt; 를 클릭하여 가상 클라우드 네트워크 메뉴로 이동합니다.
&lt;img src=&quot;/assets/img/cloudnative/2022/opensearch/opensearch-3.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;“VCN 마법사 시작”&lt;/strong&gt; 버튼을 클릭하여 &lt;strong&gt;“인터넷 접속을 통한 VCN 생성”&lt;/strong&gt; 을 선택 후 &lt;strong&gt;“VCN 마법사 시작”&lt;/strong&gt; 버튼을 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2022/opensearch/opensearch-4.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;
&lt;img src=&quot;/assets/img/cloudnative/2022/opensearch/opensearch-5.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;다음과 같이 입력하여 VCN을 생성합니다.
    &lt;ul&gt;
      &lt;li&gt;VCN 이름 : &lt;strong&gt;my-vcn&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;구획 : 1단계에서 생성한 구획으로 지정합니다. oci-demo&lt;/li&gt;
      &lt;li&gt;“다음” 버튼 클릭하여 내용 확인 후 “생성” 버튼 클릭하여 VCN 생성&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/cloudnative/2022/opensearch/opensearch-6.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;
&lt;img src=&quot;/assets/img/cloudnative/2022/opensearch/opensearch-7.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;3-compute-instance-생성-및-웹서버-설치&quot;&gt;3. Compute Instance 생성 및 웹서버 설치&lt;/h4&gt;
&lt;h5 id=&quot;task-1-compute-instance-생성&quot;&gt;Task 1: Compute Instance 생성&lt;/h5&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;좌측 상단의 &lt;strong&gt;햄버거 아이콘&lt;/strong&gt;을 클릭하고, &lt;strong&gt;컴퓨트(Compute)&lt;/strong&gt;을 선택한 후 &lt;strong&gt;인스턴스(Instances)&lt;/strong&gt;를 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-compute-instance.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;왼쪽 하단에 구획을 확인하고 &lt;strong&gt;인스턴스 생성(Create instance)&lt;/strong&gt;버튼을 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-compute-instance-create-1.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;인스턴스 이름과 구획을 선택 합니다
    &lt;ul&gt;
      &lt;li&gt;이름: Enter &lt;strong&gt;demoWebserver&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;구획에 생성: &lt;strong&gt;oci-demo&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;가용성 도메인 : &lt;strong&gt;AP-SEOUL-1-AD-1 (Seoul 리전 기준)&lt;/strong&gt;
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-compute-instance-create-2.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;설치할 이미지와 Instance의 Shape을 선택 합니다.
    &lt;ul&gt;
      &lt;li&gt;Image : &lt;strong&gt;Oracle Linux8 - 2022.12.15-0&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Shape : &lt;strong&gt;VM.Standard.E4.Flex (1 OCPU, 16 GB Memory)&lt;/strong&gt;
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-compute-instance-create-3.png&quot; alt=&quot;Compute Create #2&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;네트워크 관련 옵션을 선택 합니다
    &lt;ul&gt;
      &lt;li&gt;Virtual cloud network : &lt;strong&gt;my-vcn&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Subnet : &lt;strong&gt;공용 서브넷-my-vcn&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Public IP address : &lt;strong&gt;공용 IPv4 주소 지정&lt;/strong&gt;
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-compute-instance-create-4.png&quot; alt=&quot;Compute Create #3&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;VM에 접속할때 사용할 SSH Keys 추가 합니다.
    &lt;ul&gt;
      &lt;li&gt;이번 실습에서는 &lt;strong&gt;자동으로 키 쌍 생성&lt;/strong&gt; 를 선택 후 전용 키, 공용 키를 다운받아 잘 보관 합니다.&lt;/li&gt;
      &lt;li&gt;Boot volume 관련 옵션은 기본 설정을 유지 합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-compute-instance-create-5.png&quot; alt=&quot;Compute Create #4&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; 버튼을 클릭 후 생성
    &lt;ul&gt;
      &lt;li&gt;생성 후 Running 상태를 확인 합니다
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-compute-instance-create-6.png&quot; alt=&quot;Compute Create #6&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;task-2-compute-instance-접속&quot;&gt;Task 2: Compute Instance 접속&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;Windows 사용자 (PuttyGen , Putty 사용)
    &lt;ul&gt;
      &lt;li&gt;PuTTYgen을 실행합니다&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Load&lt;/strong&gt; 를 클릭 하고 인스턴스를 생성할 때 생성된 프라이빗 키를 선택합니다. 키 파일의 확장자는 &lt;strong&gt;.key&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Save Private Key&lt;/strong&gt; 를 클릭 합니다.&lt;/li&gt;
      &lt;li&gt;키파일의 이름을 지정 합니다. (개인 키의 확장자는 &lt;strong&gt;.ppk&lt;/strong&gt;로 저장합니다)&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Save&lt;/strong&gt; 를 클릭합니다.&lt;/li&gt;
      &lt;li&gt;새로운 키 파일을 이용하여 인스턴스에 접속 합니다.&lt;/li&gt;
      &lt;li&gt;상세내용은 링크를 통해 확인 가능 합니다. &lt;a href=&quot;https://docs.oracle.com/en-us/iaas/Content/Compute/Tasks/accessinginstance.htm#linux__putty&quot;&gt;접속 가이드 링크&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;MacOS 사용자
    &lt;ul&gt;
      &lt;li&gt;다운로드 받은 키파일의 권한을 조정합니다.
        &lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   chmod 400 &amp;lt;private_key_file&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#엑세스 하려는 키 파일의 전체 경로 와 이름을 입력합니다.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;다음 명령어를 입력하여 인스턴스에 접속합니다.
        &lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   ssh -i &amp;lt;private_key_file&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;opc@&amp;lt;public-ip-address&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;task-3-oci-보안목록-security-list-설정&quot;&gt;Task 3: OCI 보안목록 (Security List) 설정&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;VCN 목록에서 생성한 &lt;strong&gt;my-vcn&lt;/strong&gt;을 클릭 상세보기 창으로 이동합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-vcn-security-list-create-1.png&quot; alt=&quot;VCN Screen&quot; title=&quot; &quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;VCN 상세보기 화면에서 하단 Subnet 목록중 &lt;strong&gt;공용 서브넷-my-vcn&lt;/strong&gt;을 클릭 합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-vcn-security-list-create-2.png&quot; alt=&quot;VCN Screen&quot; title=&quot; &quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Subnet 상세보기 화면에서 하단 Security Lists 목록중 &lt;strong&gt;Default Security List for my-vcn&lt;/strong&gt;을 클릭 합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-vcn-security-list-create-3.png&quot; alt=&quot;VCN Screen&quot; title=&quot; &quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;수신 규칙 추가&lt;/strong&gt; 버튼을 클릭 합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-vcn-security-list-create-4.png&quot; alt=&quot;VCN Screen&quot; title=&quot; &quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다음과 같이 입력:&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Source Type : &lt;strong&gt;CIDR&lt;/strong&gt; (기본값)&lt;/li&gt;
      &lt;li&gt;Source CIDR : Enter &lt;strong&gt;0.0.0.0/0&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;IP Protocol : &lt;strong&gt;TCP&lt;/strong&gt; (기본값)&lt;/li&gt;
      &lt;li&gt;Destination Port Range : &lt;strong&gt;80, 443&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Description : &lt;strong&gt;httpd 실습을 위한 http, https 서비스 Port 허용 정책&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;수신 규칙 추가&lt;/strong&gt; 클릭
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-vcn-security-list-create-5.png&quot; alt=&quot;VCN Screen&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;task-4-apache-httpd-서버-설치-및-접속-확인&quot;&gt;Task 4: Apache httpd 서버 설치 및 접속 확인&lt;/h5&gt;
&lt;ol&gt;
  &lt;li&gt;Install Apache httpd 서버
    &lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;      sudo yum install httpd -y
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Apache 서버 시작 및 재부팅시 자동으로 서비스가 활성화 되도록 설정 합니다.
    &lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;      sudo apachectl start
      sudo systemctl enable httpd
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Apache 설정 테스트 명령을 실행합니다.
    &lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;      sudo apachectl configtest
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;아래 명령어를 입력하여 웹 브라우저에서 확인할 index.html 파일을 생성합니다.
    &lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;      sudo bash -c &apos;echo This is my Web-Server running on Oracle Cloud Infrastructure &amp;gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /var/www/html/index.html&lt;span class=&quot;s1&quot;&gt;&apos;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-compute-install-httpd.png&quot; alt=&quot;install Apache httpd server&quot; title=&quot; &quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;OS 방화벽 사용 해제
기본으로 OS에 적용되어 있는 방화벽을 중지 시키기 위해 아래 명령어를 순차적으로 입력 합니다.
    &lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;   sudo systemctl disable firewalld
   sudo systemctl stop firewalld
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;웹서버 접속 및 응답 확인
인스턴스의 공용 IP로 접속하여 생성한 index.html파일의 내용을 브라우저에서 확인합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-compute-install-httpd-2.png&quot; alt=&quot;install Apache httpd server&quot; title=&quot; &quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;4-application-load-balancer-생성-및-설정하기&quot;&gt;4. Application Load Balancer 생성 및 설정하기&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;좌측 상단의 &lt;strong&gt;햄버거 아이콘&lt;/strong&gt;을 클릭하고, &lt;strong&gt;네트워킹(Networking)&lt;/strong&gt;을 선택한 후 &lt;strong&gt;로드 밸런서(Load Balancer)&lt;/strong&gt;를 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-loadbalancer-1.png&quot; alt=&quot;Load Balancer Menu&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;이동한 화면에서 현재 구획을 확인 후 &lt;strong&gt;로드 밸런서 생성&lt;/strong&gt; 버튼을 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-loadbalancer-2.png&quot; alt=&quot;Load Balancer Create - 1&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;로드 밸런서 유형 선택 화면에서 상단의 Layer-7 &lt;strong&gt;로드 밸런서&lt;/strong&gt;를 선택 후 &lt;strong&gt;로드 밸런서 생성&lt;/strong&gt; 버튼을 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-loadbalancer-3.png&quot; alt=&quot;Load Balancer Create - 2&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;로드 밸런서 생성 화면에서 아래와 같이 입력 및 선택 합니다.
    &lt;ul&gt;
      &lt;li&gt;로드 밸런서 이름: &lt;strong&gt;lb_demo&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;가시성 유형 선택: &lt;strong&gt;공용&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;공용 IP 주소 지정 : &lt;strong&gt;임시 IP 주소&lt;/strong&gt; / 예약된 IP 주소를 사용하려면 사전에 예약된 IP 생성 필요
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-loadbalancer-4.png&quot; alt=&quot;Load Balancer Create - 3&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;대역폭 구성은 기본값으로 구성합니다.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;최소/최대 10Mbps&lt;/strong&gt;)&lt;/li&gt;
      &lt;li&gt;가상 클라우드 네트워크: &lt;strong&gt;vcn-oci-basic&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;가시성 유형 선택: &lt;strong&gt;공용 서브넷-vcn-oci-basic&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;다음&lt;/strong&gt; 버튼을 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-loadbalancer-5.png&quot; alt=&quot;Load Balancer Create - 1&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;백엔드 선택 단계에서 아래와 같이 선택합니다.
    &lt;ul&gt;
      &lt;li&gt;로드 밸런싱 정책 지정: &lt;strong&gt;라운드 로빈(가중치 사용)&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;백엔드 추가&lt;/strong&gt; 버튼을 클릭하여 전단계에서 생성한 인스턴스를 선택합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-loadbalancer-6.png&quot; alt=&quot;Load Balancer Create - 1&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;건정성 검사 정책 지정 단계에서는 기본값을 그대로 사용 합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-loadbalancer-7.png&quot; alt=&quot;Load Balancer Create - 1&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;리스너 구성 화면에서 아래와 같이 입력 및 선택 합니다.
    &lt;ul&gt;
      &lt;li&gt;리스너 이름: &lt;strong&gt;기본값 사용&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;리스너가 처리하는 트래픽의 유형 지정: &lt;strong&gt;HTTPS&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;수신 트래픽에 대해 리스너가 모니터하는 포트 지정: &lt;strong&gt;443&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;SSL 인증서 섹션
        &lt;ul&gt;
          &lt;li&gt;인증서 리소스 : 인증서 서비스 관리 인증서&lt;/li&gt;
          &lt;li&gt;[구획]의 인증서 : Let’s Encrypt로 생성하고 등록한 인증서 선택&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;다음&lt;/strong&gt; 버튼을 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-loadbalancer-8.png&quot; alt=&quot;Load Balancer Create - 1&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;로깅 관리 설정 단계에서 아래와 같이 오류 &amp;amp; 엑세스 로그를 모두 사용함으로 설정하고 &lt;strong&gt;제출&lt;/strong&gt; 버튼을 클릭하여 Load Balancer를 생성합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-loadbalancer-9.png&quot; alt=&quot;Load Balancer Create - 1&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;확인한 공용 IP로 웹브라우저를 통해 접속을 확인합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-loadbalancer-10.png&quot; alt=&quot;Load Balancer Create - 1&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;5-oci-dns-서비스에서-record-생성하기&quot;&gt;5. OCI DNS 서비스에서 Record 생성하기&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;좌측 상단의 &lt;strong&gt;햄버거 아이콘&lt;/strong&gt;을 클릭하고, &lt;strong&gt;네트워킹(Networking)&lt;/strong&gt;을 선택한 후 &lt;strong&gt;DNS관리&lt;/strong&gt;를 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-certificate-dns.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;DNS관리에서 기존에 생성한 영역을 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-certificate-dns-1.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;“레코드 추가”&lt;/strong&gt; 버튼을 클릭합니다
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-certificate-dns-2.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;아래와 같이 선택 및 입력 하여 레코드를 추가합니다.
    &lt;ul&gt;
      &lt;li&gt;레코드 유형 : &lt;strong&gt;A - IPv4 주소&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;이름 : demosite&lt;/li&gt;
      &lt;li&gt;TTL : 30 , 단위 : 초&lt;/li&gt;
      &lt;li&gt;Rdata 모드 : 기본&lt;/li&gt;
      &lt;li&gt;Address(주소) : &lt;mark&gt;로드 밸런서의 Public IP 주소를 등록합니다.&lt;/mark&gt; // 129.154.205.69
  &lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-certificate-dns-3.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;“변경사항 게시”&lt;/strong&gt; 버튼을 클릭하여 생성한 레코드를 게시합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-certificate-dns-4.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;6-도메인을-접속-및-인증서-적용-확인&quot;&gt;6. 도메인을 접속 및 인증서 적용 확인&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;생성한 레코드가 적용되기 위해 1~2분을 기다려 줍니다.&lt;/li&gt;
  &lt;li&gt;생성한 도메인을 브라우저에서 입력하여 접속합니다.&lt;/li&gt;
  &lt;li&gt;정상적으로 접속됨을 확인합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-certificate-dns-5.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;인증서도 정상적으로 적용된것을 확인할 수 있습니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-certificate-dns-6.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;7-oci-로드밸런서에서-http---https-리다이렉트-구성하기&quot;&gt;7. OCI 로드밸런서에서 http - https 리다이렉트 구성하기&lt;/h4&gt;

&lt;h5 id=&quot;task-1-oci-로드밸런서-http-리스너-생성-및-접속-테스트&quot;&gt;Task 1: OCI 로드밸런서 http 리스너 생성 및 접속 테스트&lt;/h5&gt;
&lt;ol&gt;
  &lt;li&gt;http 리스너를 추가로 생성하기 위해 (4) 단계에서 생성한 로드밸런서 세부정보 화면으로 이동합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-lb-redirect-1.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;좌측 하단 리소스 패널에서 “리스너”를 클릭하고 “리스너 생성” 버튼을 클릭하여 아래와 같이 입력 및 선택하여 리스너를 생성합니다.
    &lt;ul&gt;
      &lt;li&gt;이름 : &lt;strong&gt;listener_http&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;프로토콜 : &lt;strong&gt;HTTP&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;포트 : &lt;strong&gt;80&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;백엔드 집합 : &lt;strong&gt;기존에 생성되어 있는 백엔드 집합 선택&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;mark&gt;나머지 옵션을 입력하지 않습니다.&lt;/mark&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;“리스너 생성”&lt;/strong&gt; 버튼 클릭하여 리스너를 생성합니다.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-lb-redirect-2.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;생성한 http 리스너로 접속하여 정상 접속 여부를 확인합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-lb-redirect-3.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;task-2-oci-로드밸런서-https-리다이렉트-규칙-집합-생성하기-url-재지정&quot;&gt;Task 2: OCI 로드밸런서 https 리다이렉트 규칙 집합 생성하기 (URL 재지정)&lt;/h5&gt;
&lt;ol&gt;
  &lt;li&gt;로드밸런서 세부 화면에서 좌측 하단 리소스 패널에서 “규칙 집합”를 클릭하고 “규칙 집합 생성” 버튼을 클릭하여 아래와 같이 입력 및 선택하여 규칙 집합을 생성합니다
    &lt;ul&gt;
      &lt;li&gt;이름 : &lt;strong&gt;httpTohttps&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;URL 재지정 규칙 지정&lt;/strong&gt; 체크박스 선택&lt;/li&gt;
      &lt;li&gt;소스 경로 : &lt;strong&gt;/&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;일치 유형 : &lt;strong&gt;강제로 가장 긴 접두어 일치&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;재지정 대상
        &lt;ul&gt;
          &lt;li&gt;프로토콜 : &lt;strong&gt;HTTPS&lt;/strong&gt;&lt;/li&gt;
          &lt;li&gt;포트 : &lt;strong&gt;443&lt;/strong&gt;&lt;/li&gt;
          &lt;li&gt;&lt;mark&gt;다른 설정은 기본 값을 유지합니다.&lt;/mark&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;“생성” 버튼을 클릭하여 규칙 집합을 생성합니다.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-lb-redirect-4.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;task-3-oci-로드밸런서-https-리다이렉트-규칙-적용-및-접속-테스트&quot;&gt;Task 3: OCI 로드밸런서 https 리다이렉트 규칙 적용 및 접속 테스트&lt;/h5&gt;
&lt;ol&gt;
  &lt;li&gt;http 리스너를 수정하기 위해 로드밸런서 세부정보 화면으로 이동합니다.&lt;/li&gt;
  &lt;li&gt;좌측 하단 리소스 패널에서 “리스너”를 클릭하고 “listener_http” 리스너 우측의 “Action 버튼”을 클릭 후 “편집” 메뉴를 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-lb-redirect-5.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;하단 규칙 집합 섹션에서 “추가 규칙 집합” 버튼을 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-lb-redirect-6.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;생성한 “httpTohttps” 규칙 집합을 선택 후 “변경사항 저장” 버튼을 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-lb-redirect-7.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;설정이 적용된 후 브라우저에서 실제 redirect 과정을 확인합니다.
    &lt;ul&gt;
      &lt;li&gt;http 도메인으로 접속 후 개발자 도구에서 http 요청이 상태코드 &lt;mark&gt;[302 Moned Temporarily]&lt;/mark&gt;로 리턴 받음을 확인합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-lb-redirect-8.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
      &lt;li&gt;OCI 로드밸런서 리스너에 지정한 규칙 집합에 의해 https로 redirect 되었고 &lt;mark&gt;[302 OK]&lt;/mark&gt;로 리턴 받음을 확인합니다.
&lt;img src=&quot;/assets/img/cloudnative/2023/certificate-lb/oci-lb-redirect-9.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;마무리-하며&quot;&gt;마무리 하며…&lt;/h3&gt;
&lt;p&gt;이번 포스팅에서는 OCI 인증서 서비스에 등록된 인증서를 OCI 로드밸런서에 연결하는 실습을 진행했습니다.
OCI 인증서 서비스를 사용하면 OCI 로드밸런서, API Gateway 서비스와 인증서를 손쉽게 통합할 수 있으며 인증서의 버전관리, 갱신을 편리하게 처리할 수 있습니다.
다음에는 OCI 인증서 서비스를 OCI API Gateway 서비스에 통합하는 과정도 살펴볼 예정입니다.
아래 인증서 서비스관련 포스팅의 링크를 참조하세요.&lt;/p&gt;

&lt;h3 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h3&gt;

&lt;h4 id=&quot;참고-블로그&quot;&gt;참고 블로그&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blogs.oracle.com/cloud-infrastructure/post/http-url-redirect-on-oracle-cloud-infrastructure&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blogs.oracle.com/cloud-infrastructure/post/http-url-redirect-on-oracle-cloud-infrastructure&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;oracle-공식-문서&quot;&gt;Oracle 공식 문서&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/en-us/iaas/Content/certificates/home.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.oracle.com/en-us/iaas/Content/certificates/home.htm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.oracle.com/security/cloud-security/ssl-tls-certificates/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.oracle.com/security/cloud-security/ssl-tls-certificates/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.oracle.com/security/cloud-security/ssl-tls-certificates/faq/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.oracle.com/security/cloud-security/ssl-tls-certificates/faq/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;인증서-서비스관련-포스팅&quot;&gt;인증서 서비스관련 포스팅&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/cloudnative/oci-certificate-import-letsencrypt-cert/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OCI Certificates - Let’s Encrypt로 생성한 인증서를 OCI 인증서 서비스에 Import 하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;OCI 인증서를 API Gateway에 적용하기&lt;/li&gt;
  &lt;li&gt;OCI 인증서 서비스의 인증기관 생성 및 Load Balancer 적용하기&lt;/li&gt;
&lt;/ul&gt;
</content>

			
				<category term="cloudnative" />
			
			
				<category term="oci" />
			
				<category term="certificates" />
			
				<category term="load balancer" />
			
				<category term="lb" />
			
				<category term="application load balancer" />
			
				<category term="ssl" />
			
				<category term="l7" />
			
				<category term="oci certificate" />
			
				<category term="oci loadbalancer" />
			
				<category term="loadbalancer" />
			

			<published>2023-01-03T00:00:00+09:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//infrastructure/oci-ipsec-to-libreswan-with-bgp/</id>
			<title>OCI VPN IPSec Connection을 활용하여 Libreswan(BGP Routing)과 VCN 연결하기</title>
			<link href="http://localhost:4000//infrastructure/oci-ipsec-to-libreswan-with-bgp/" rel="alternate" type="text/html" title="OCI VPN IPSec Connection을 활용하여 Libreswan(BGP Routing)과 VCN 연결하기" />
			<updated>2022-12-25T00:00:00+09:00</updated>

			
				
				<author>
					
						<name>DanKim</name>
					
					
					
						<uri>http://github.com/mangdan</uri>
					
				</author>
			
			<summary>OCI VPN IPSec Connection을 활용하여 Libreswan(BGP Routing)과 OCI VCN을 연결하는 방법에 대해서 설명합니다.</summary>
			<content type="html" xml:base="http://localhost:4000//infrastructure/oci-ipsec-to-libreswan-with-bgp/">&lt;div class=&quot;panel radius&quot;&gt;
  &lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#사전-준비사항&quot; id=&quot;markdown-toc-사전-준비사항&quot;&gt;사전 준비사항&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#drg-dynamic-routing-gateway-생성-및-서울-리전-vcn-연결&quot; id=&quot;markdown-toc-drg-dynamic-routing-gateway-생성-및-서울-리전-vcn-연결&quot;&gt;DRG (Dynamic Routing Gateway) 생성 및 서울 리전 VCN 연결&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ipsec-접속-생성&quot; id=&quot;markdown-toc-ipsec-접속-생성&quot;&gt;IPSec 접속 생성&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ipsec-접속-생성---기본-정보&quot; id=&quot;markdown-toc-ipsec-접속-생성---기본-정보&quot;&gt;IPSec 접속 생성 - 기본 정보&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ipsec-접속-생성---서브넷-및-보안&quot; id=&quot;markdown-toc-ipsec-접속-생성---서브넷-및-보안&quot;&gt;IPSec 접속 생성 - 서브넷 및 보안&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ipsec-접속-생성---사이트-간-vpn&quot; id=&quot;markdown-toc-ipsec-접속-생성---사이트-간-vpn&quot;&gt;IPSec 접속 생성 - 사이트 간 VPN&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ipsec-접속-생성---고객-구내-장비cpe&quot; id=&quot;markdown-toc-ipsec-접속-생성---고객-구내-장비cpe&quot;&gt;IPSec 접속 생성 - 고객 구내 장비(CPE)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ipsec-접속-생성---상세&quot; id=&quot;markdown-toc-ipsec-접속-생성---상세&quot;&gt;IPSec 접속 생성 - 상세&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cpe-구성-libreswan-설치-및-구성&quot; id=&quot;markdown-toc-cpe-구성-libreswan-설치-및-구성&quot;&gt;CPE 구성 (Libreswan 설치 및 구성)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#bgp-구성&quot; id=&quot;markdown-toc-bgp-구성&quot;&gt;BGP 구성&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#춘천-리전온프레미스-경로-테이블-구성&quot; id=&quot;markdown-toc-춘천-리전온프레미스-경로-테이블-구성&quot;&gt;춘천 리전(온프레미스) 경로 테이블 구성&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#연결-테스트&quot; id=&quot;markdown-toc-연결-테스트&quot;&gt;연결 테스트&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h3 id=&quot;사전-준비사항&quot;&gt;사전 준비사항&lt;/h3&gt;
&lt;p&gt;사전에 다음과 같이 서로 다른 두 리전에 VCN과 VM 인스턴스가 필요합니다. 
VCN 생성은 아래 블로그 포스트를 참고합니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://the-team-oasis.github.io/getting-started/create-vcn/&quot;&gt;OCI에서 VCN Wizard를 활용하여 빠르게 VCN 생성하기&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;여기서는 온프레미스용으로 춘천 리전, OCI로 서울 리전을 사용하고, 다음과 같이 VCN을 생성해보겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;춘천 리전 VCN (온프레미스)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Name: OnPremise-Libreswan&lt;/li&gt;
  &lt;li&gt;CIDR Block: 10.0.0.0/16&lt;/li&gt;
  &lt;li&gt;Subnet: 10.0.0.0/16 (Public)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;서울 리전 VCN (OCI)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Name: VCN-SEOUL-HUB&lt;/li&gt;
  &lt;li&gt;CIDR Block: 172.16.0.0/16&lt;/li&gt;
  &lt;li&gt;Subnet: 172.16.0.0/24 (Public), 172.16.1.0/24 (Private)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;SSH 접속을 쉽게 할 수 있도록 Public Subnet에 구성하여 테스트를 합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;추가적으로 춘천 리전에 Libreswan 설치를 위한 인스턴스(Libreswan)와 테스트를 위한 인스턴스 (OnPremise VM Instance-1)를 준비하고, 서울 리전(OCI)에도 테스트를 위한 인스턴스(OCI VM Instance-1)]를 준비합니다. 리눅스 인스턴스 생성은 아래 블로그 포스트를 참고합니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://the-team-oasis.github.io/getting-started/launching-linux-instance/&quot;&gt;OCI에서 리눅스 인스턴스 생성 튜토리얼&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;춘천 리전 VM 인스턴스&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Name: Libreswan(CPE)&lt;/li&gt;
  &lt;li&gt;Public IP: 144.24.84.145&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Private IP: 10.0.236.153&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Name: OnPremise VM Instance-1&lt;/li&gt;
  &lt;li&gt;Public IP: 129.154.61.29&lt;/li&gt;
  &lt;li&gt;Private IP: 10.0.85.10&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Libreswan을 설치하는 인스턴스의 경우 인스턴스 생성 시 &lt;strong&gt;부트 볼륨&lt;/strong&gt; 옵션 중에서 &lt;strong&gt;전송 암호화 사용(Use in-transit encryption)&lt;/strong&gt; 옵션을 체크해제 하여야 합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;서울 리전 VM 인스턴스&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Name: OCI VM Instance-1&lt;/li&gt;
  &lt;li&gt;Public IP: 146.56.156.213&lt;/li&gt;
  &lt;li&gt;Private IP: 172.16.0.93&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;구성도&lt;/strong&gt;
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;drg-dynamic-routing-gateway-생성-및-서울-리전-vcn-연결&quot;&gt;DRG (Dynamic Routing Gateway) 생성 및 서울 리전 VCN 연결&lt;/h3&gt;
&lt;p&gt;Dynamic Routing Gateway (이하 DRG)는 OCI의 특정 VCN에서 동일 리전의 VCN이나 다른 리전의 VCN, 혹은 온프레미스 네트워크와의 연결을 지원하기 위한 가상 라우터입니다. OCI VPN IPSec Connection을 생성하기 위해서는 이 DRG를 미리 준비하여야 합니다. DRG는 서울리전 (OCI)에 생성합니다.&lt;/p&gt;

&lt;p&gt;DRG를 생성하기 위해서는 다음과 같이 서울 리전에서 &lt;strong&gt;메뉴 &amp;gt; 네트워킹(Networking) &amp;gt; 고객 접속(Customer Connectivity)&lt;/strong&gt;으로 이동 후 &lt;strong&gt;동적 경로 지정 게이트웨이(Dynamic Routing Gateway)&lt;/strong&gt;를 선택합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;동적 경로 지정 게이트웨이 생성(Create Dynamic Routing Gateway)&lt;/strong&gt; 생성 버튼을 클릭하고 다음과 같이 DRG를 생성합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Name: DRG-SEOUL-1
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-3.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;생성한 DRG를 서울 리전 VCN에 연결합니다. &lt;strong&gt;가상 클라우드 네트워크 연결(Virtual Cloud Networks Attachments)&lt;/strong&gt; 메뉴를 클릭하고 &lt;strong&gt;가상 클라우드 네트워크 연결 생성(Create Virtual Cloud Network Attachment)&lt;/strong&gt; 버튼을 클릭한 후 다음과 같이 입력하여 생성합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;첨부 파일 이름(Attachment name):&lt;/strong&gt; VCN-SEOUL-HUB-DRG-ATT&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;가상 클라우드 네트워크(Virtual Cloud Network):&lt;/strong&gt; VCN-SEOUL-HUB&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-3-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ipsec-접속-생성&quot;&gt;IPSec 접속 생성&lt;/h3&gt;
&lt;p&gt;IPSec 접속 생성을 위해 서울 리전에서 &lt;strong&gt;메뉴 &amp;gt; 네트워킹(Networking) &amp;gt; 고객 접속(Customer Connectivity)&lt;/strong&gt;으로 이동 후 &lt;strong&gt;사이트 간 VPN(Site-to-Site VPN)&lt;/strong&gt;을 선택합니다. 
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;두 개의 버튼이 있는데, Security List나 Route Table 구성등을 자동으로 해주는 &lt;strong&gt;VPN 마법사&lt;/strong&gt;를 사용하겠습니다. &lt;strong&gt;VPN 마법사 시작(Start VPN Wizard)&lt;/strong&gt; 버튼을 클릭합니다.
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;ipsec-접속-생성---기본-정보&quot;&gt;IPSec 접속 생성 - 기본 정보&lt;/h4&gt;
&lt;p&gt;기본 정보에서는 구획, 앞서 생성한 DRG, Internet Gateway를 선택합니다.
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;ipsec-접속-생성---서브넷-및-보안&quot;&gt;IPSec 접속 생성 - 서브넷 및 보안&lt;/h4&gt;
&lt;p&gt;서브넷 및 보안에서는 연결하기 위한 서브넷과 Security List를 선택합니다. 여기서는 테스트를 위해서 쉽게 SSH 접속을 하기 위해 Public Subnet과 연결하도록 합니다.
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;ipsec-접속-생성---사이트-간-vpn&quot;&gt;IPSec 접속 생성 - 사이트 간 VPN&lt;/h4&gt;
&lt;p&gt;사이트 간 VPN 설정에서는 다음과 같이 설정합니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;VPN 이름(VPN Name):&lt;/strong&gt; IPSec-OnPremise-1-SeoulHubVCN&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;경로 지정 유형(Routing Type):&lt;/strong&gt; BGP 동적 경로 지정&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;온프레미스 네트워크에 대한 경로(Routes To Your On-Premises Network):&lt;/strong&gt; 10.0.0.0/16 (춘천 리전 VCN CIDR)
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;터널 1&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;터널 이름(Tunnel Name):&lt;/strong&gt; Tunnel-1&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;IKE 버전(IKE Version):&lt;/strong&gt; IKEv1&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;내 BGP ASN(Your BGP ASN):&lt;/strong&gt; 65000&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;IPv4 내부 터널 인터페이스 - CPE(IPv4 Inside Tunnel Interface - CPE):&lt;/strong&gt; 10.10.10.1/30&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;IPv4 내부 터널 인터페이스 - Oracle(IPv4 Inside Tunnel Interface - Oracle):&lt;/strong&gt; 10.10.10.2/30
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-9.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;터널 2&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;터널 이름(Tunnel Name):&lt;/strong&gt; Tunnel-2&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;IKE 버전(IKE Version):&lt;/strong&gt; IKEv1&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;내 BGP ASN(Your BGP ASN):&lt;/strong&gt; 65000&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;IPv4 내부 터널 인터페이스 - CPE(IPv4 Inside Tunnel Interface - CPE):&lt;/strong&gt; 10.10.10.5/30&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;IPv4 내부 터널 인터페이스 - Oracle(IPv4 Inside Tunnel Interface - Oracle):&lt;/strong&gt; 10.10.10.6/30
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-10.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;ipsec-접속-생성---고객-구내-장비cpe&quot;&gt;IPSec 접속 생성 - 고객 구내 장비(CPE)&lt;/h4&gt;
&lt;p&gt;마지막으로 CPE(Customer Premises Equipment)를 생성합니다. CPE는 온프레미스 네트워크 엣지에 있는 라우터로 Site-to-Site VPN이 접속하기 위한 장비입니다. 여기서는 Libreswan이 CPE역할을 하므로 Libreswan이 설치된 인스턴스로 등록합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;CPE 이름(Name):&lt;/strong&gt; CPE-OnPremise-Libreswan&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;IP 주소(IP Address):&lt;/strong&gt; 144.24.84.145 (Libreswan이 설치되는 인스턴스의 Public IP)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;CPE 공급업체 정보(CPE Vendor Information)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;공급업체(Vendor):&lt;/strong&gt; Libreswan&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Platform/Version:&lt;/strong&gt; 3.18 or later&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;마지막으로 설정한 내용을 최종 검토하고 &lt;strong&gt;VPN 솔루션 생성(Create VPN Solution)&lt;/strong&gt; 버튼을 클릭하여 IPSec Connection을 생성합니다.
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;ipsec-접속-생성---상세&quot;&gt;IPSec 접속 생성 - 상세&lt;/h4&gt;
&lt;p&gt;생성된 IPSec 접속 상세화면을 다음과 같이 볼 수 있습니다. 이제 IPSec 상태와 IPv4 BGP 상태가 모두 작동(Up) 상태가 되어야 합니다. 
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;우선 CPE 구성 헬퍼 열기(Open CPE Configuration Helper)를 클릭하면 CPE를 구성하기 위한 Helper를 볼 수 있습니다. **콘텐츠 생성(Create Content)를 클릭한 후
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;클립보드로 구성 복사(Copy Configuration To Clipboard) 혹은 구성 다운로드(Download Configuration)를 클릭하여 CPE 구성 정보를 저장합니다. 추후 이 정보를 참고하여 CPE를 구성합니다.
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;cpe-구성-libreswan-설치-및-구성&quot;&gt;CPE 구성 (Libreswan 설치 및 구성)&lt;/h3&gt;
&lt;p&gt;CPE 구성을 위해 Libreswan을 설치하도록 합니다. 앞서 Libreswan을 위해 생성한 인스턴스로 접속합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ssh key&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; opc@144.24.84.145
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;root로 변경합니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo su -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 클라이언트가 Libreswan을 통해 트래픽을 보내고 받을 수 있도록 네트워크 인터페이스에서 IP forwarding을 활성화해야 합니다. 먼저 인터페이스 이름을 확인합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[root@onpremise-cpe-libreswan ~]#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ifconfig
&lt;span class=&quot;gp&quot;&gt;ens3: flags=4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;mtu 9000
&lt;span class=&quot;go&quot;&gt;        inet 10.0.236.153  netmask 255.255.0.0  broadcast 10.0.255.255
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;        inet6 fe80::17ff:fe00:4885  prefixlen 64  scopeid 0x20&amp;lt;link&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;        ether 02:00:17:00:48:85  txqueuelen 1000  (Ethernet)
        RX packets 116024  bytes 419262758 (399.8 MiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 106189  bytes 89958361 (85.7 MiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;lo: flags=73&amp;lt;UP,LOOPBACK,RUNNING&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;mtu 65536
&lt;span class=&quot;go&quot;&gt;        inet 127.0.0.1  netmask 255.0.0.0
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;        inet6 ::1  prefixlen 128  scopeid 0x10&amp;lt;host&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;        loop  txqueuelen 1000  (Local Loopback)
        RX packets 13348  bytes 745742 (728.2 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 13348  bytes 745742 (728.2 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;인터페이스 이름은 ens3 입니다. 다음과 같이 sysctl.conf 파일을 오픈하여 다음과 같이 내용을 추가합니다.&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;vi /etc/sysctl.conf
&lt;span class=&quot;go&quot;&gt;
Kernel.unknown_nmi_panic = 1
net.ipv4.ip_forward = 1
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.ens3.send_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.ens3.accept_redirects = 0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;적용을 위해 다음 명령어를 실행합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[root@onpremise-cpe-libreswan ~]#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;sysctl &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;net.ipv4.ip_forward = 1
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.ens3.send_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.ens3.accept_redirects = 0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;CPE(Libreswan)와 통신을 위해서는 OS에서 udp 500, udp 4500 포트를 오픈해야 합니다. 다음 명령어로 포트를 오픈합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;500/udp
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--add-port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4500/udp
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;firewall-cmd &lt;span class=&quot;nt&quot;&gt;--runtime-to-permanent&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;CPE(Libreswan)가 위치한 Subnet의 Security List의 Ingress Rule도 다음과 같이 추가해줍니다.
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Libreswan을 설치합니다. Libreswan은 다음 명령어로 설치합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;libreswan &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Libreswan이 설치되면, 이전에 다운로드한 CPE 구성 정보를 토대로 ipsec 구성파일을 생성해야 합니다. 다음과 같이 파일을 생성하여 오픈합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;vi /etc/ipsec.d/oci-ipsec.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음과 같이 입력합니다. left는 CPE 정보입니다. left는 CPE(Libreswan)의 Private IP이고, leftid는 CPE(Libreswan)의 Public IP입니다. right는 Oracle VPN IP 주소로, CPE 구성 정보 혹은 앞서 생성한 IPSec Connection 정보에서 확인할 수 있습니다. Tunnle-1과 Tunnel-2의 Oracle VPN IP를 정확히 확인하여 입력합니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;conn Tunnel-1
     left=10.0.236.153
     # leftid=${cpePublicIpAddress} # See preceding note about 1-1 NAT device
     leftid=144.24.84.145
     right=193.122.99.212
     authby=secret
     leftsubnet=0.0.0.0/0
     rightsubnet=0.0.0.0/0
     auto=start
     mark=5/0xffffffff # Needs to be unique across all tunnels
     vti-interface=vti1
     vti-routing=no
     leftvti=10.10.10.1/30
     ikev2=no # To use IKEv2, change to ikev2=insist
     ike=aes_cbc256-sha2_384;modp1536
     phase2alg=aes_gcm256;modp1536
     encapsulation=yes
     ikelifetime=28800s
     salifetime=3600s
conn Tunnel-2
     left=10.0.236.153
     # leftid=${cpePublicIpAddress} # See preceding note about 1-1 NAT device
     leftid=144.24.84.145
     right=146.56.44.93
     authby=secret
     leftsubnet=0.0.0.0/0
     rightsubnet=0.0.0.0/0
     auto=start
     mark=6/0xffffffff # Needs to be unique across all tunnels
     vti-interface=vti2
     vti-routing=no
     leftvti=10.10.10.5/30
     ikev2=no # To use IKEv2, change to ikev2=insist
     ike=aes_cbc256-sha2_384;modp1536
     phase2alg=aes_gcm256;modp1536
     encapsulation=yes
     ikelifetime=28800s
     salifetime=3600s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ipsec을 위한 secret을 생성하여 오픈합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;vi /etc/ipsec.d/oci-ipsec.secret
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음과 같은 형식으로 입력합니다. 앞의 IP는 CPE(Libreswan)의 Public IP, 뒤의 IP는 Oracle VPN IP, PSK 이후는 공유 암호(Shared Secret)로 CPE 구성 정보 혹은 앞서 생성한 IPSec Connection 정보에서 확인할 수 있습니다&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;144.24.84.145 193.122.99.212: PSK &quot;7jBhG3jmgdB3LH2LUtgt2EvOTpy6AFJ4jfiJsd6OFOfXBizpHs3XpQSfMuM6jHvL&quot;
144.24.84.145 146.56.44.93: PSK &quot;t3cm2yGc3QIwHEF3bDRmzUrVxQUSwgGUWeNQyryow6Jl0rD8cdxWzBVjVAX5yUzi&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음 명령어로 ipsec 서비스를 시작합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;systemctl start ipsec
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ipsec status와 ipsec verify로 상태를 확인합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[root@onpremise-cpe-libreswan ~]#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ipsec verify
&lt;span class=&quot;go&quot;&gt;Verifying installed system and configuration files

Version check and ipsec on-path                   	[OK]
Libreswan 4.5 (XFRM) on 5.4.17-2136.314.6.2.el8uek.x86_64
Checking for IPsec support in kernel              	[OK]
 NETKEY: Testing XFRM related proc values
         ICMP default/send_redirects              	[OK]
         ICMP default/accept_redirects            	[OK]
         XFRM larval drop                         	[OK]
Pluto ipsec.conf syntax                           	[OK]
Checking rp_filter                                	[ENABLED]
 /proc/sys/net/ipv4/conf/all/rp_filter            	[ENABLED]
  rp_filter is not fully aware of IPsec and should be disabled
Checking that pluto is running                    	[OK]
 Pluto listening for IKE on udp 500               	[OK]
 Pluto listening for IKE/NAT-T on udp 4500        	[OK]
 Pluto ipsec.secret syntax                        	[OK]
Checking &apos;ip&apos; command                             	[OK]
Checking &apos;iptables&apos; command                       	[OK]
Checking &apos;prelink&apos; command does not interfere with FIPS	[OK]
Checking for obsolete ipsec.conf options          	[OK]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;IPSec 접속 상세 화면에서 각 터널의 IPSec 상태가 작동 중(Up) 상태인 것을 확인합니다.
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;OCI쪽의 터널 인터페이스와 연결이 되었는지 확인합니다.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[root@libreswancpe ipsec.d]# ping 10.10.10.2
PING 10.10.10.2 (10.10.10.2) 56(84) bytes of data.
64 bytes from 10.10.10.2: icmp_seq=1 ttl=64 time=2.45 ms
64 bytes from 10.10.10.2: icmp_seq=2 ttl=64 time=2.48 ms
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;터널 인터페이스도 추가된 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[root@libreswancpe ipsec.d]#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ifconfig
&lt;span class=&quot;gp&quot;&gt;ens3: flags=4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;mtu 9000
&lt;span class=&quot;go&quot;&gt;        inet 10.0.236.153  netmask 255.255.0.0  broadcast 10.0.255.255
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;        inet6 fe80::17ff:fe01:e041  prefixlen 64  scopeid 0x20&amp;lt;link&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;        ether 02:00:17:01:e0:41  txqueuelen 1000  (Ethernet)
        RX packets 54401  bytes 247528326 (236.0 MiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 44163  bytes 19875040 (18.9 MiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;lo: flags=73&amp;lt;UP,LOOPBACK,RUNNING&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;mtu 65536
&lt;span class=&quot;go&quot;&gt;        inet 127.0.0.1  netmask 255.0.0.0
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;        inet6 ::1  prefixlen 128  scopeid 0x10&amp;lt;host&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;        loop  txqueuelen 1000  (Local Loopback)
        RX packets 3350  bytes 252387 (246.4 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 3350  bytes 252387 (246.4 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;vti1: flags=209&amp;lt;UP,POINTOPOINT,RUNNING,NOARP&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;mtu 8980
&lt;span class=&quot;go&quot;&gt;        inet 10.10.10.1  netmask 255.255.255.252  destination 10.10.10.1
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;        inet6 fe80::5efe:a00:ec99  prefixlen 64  scopeid 0x20&amp;lt;link&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;        tunnel   txqueuelen 1000  (IPIP Tunnel)
        RX packets 4794  bytes 300855 (293.8 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 4800  bytes 301144 (294.0 KiB)
        TX errors 387  dropped 0 overruns 0  carrier 387  collisions 0

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;vti2: flags=209&amp;lt;UP,POINTOPOINT,RUNNING,NOARP&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;mtu 8980
&lt;span class=&quot;go&quot;&gt;        inet 10.10.10.5  netmask 255.255.255.252  destination 10.10.10.5
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;        inet6 fe80::5efe:a00:ec99  prefixlen 64  scopeid 0x20&amp;lt;link&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;        tunnel   txqueuelen 1000  (IPIP Tunnel)
        RX packets 5411  bytes 332939 (325.1 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 4782  bytes 300208 (293.1 KiB)
        TX errors 387  dropped 0 overruns 0  carrier 387  collisions 0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;bgp-구성&quot;&gt;BGP 구성&lt;/h3&gt;
&lt;p&gt;BGP(Boarder Gateway Protocol)은 다른 AS(Autonomous System) 사이의 경로 지정(라우팅)을 위해 사용되는 프로토콜입니다. BGP에 대한 자세한 설명은 아래 링크를 참고하세요.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cloudflare.com/ko-kr/learning/security/glossary/what-is-bgp/&quot;&gt;BGP 라우팅 설명 (cloudflare.com)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;이제 BGP를 실행하기 위해 FRRouting(FRR)을 인스톨합니다. FRR은 Linux 및 Unix 플랫폼용 IP 라우팅 프로토콜 오픈소스 솔루션으로 BGP, RIP, OSPF, IS-IS등과 같은 모든 표준 라우팅 프로토콜을 확장하여 구현하고 있습니다. FRR에 대한 내용은 아래 링크 참고합니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.frrouting.org/en/latest/overview.html&quot;&gt;FRR Overview&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;다음 명령어로 FRR을 설치합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;frr &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;FRR을 설치한 후 &lt;strong&gt;bgpd.conf&lt;/strong&gt;라는 파일을 생성해야 합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;vi /etc/frr/bgpd.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음 내용을 bgpd.conf에 추가합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;hostname libreswancpe
log file //bgpd.log
log stdout
router bgp 65000
 bgp router-id 10.10.10.1
 timers bgp 6 18
 neighbor 10.10.10.2 remote-as 31898
 neighbor 10.10.10.2 ebgp-multihop 255
 neighbor 10.10.10.2 timers 6 18
 neighbor 10.10.10.6 remote-as 31898
 neighbor 10.10.10.6 ebgp-multihop 255
 neighbor 10.10.10.6 timers 6 18
 address-family ipv4 unicast
  network 10.0.0.0/16
  neighbor 10.10.10.2 next-hop-self
  neighbor 10.10.10.2 soft-reconfiguration inbound
  neighbor 10.10.10.2 route-map ALLOW-ALL in
  neighbor 10.10.10.2 route-map BGP-ADVERTISE-OUT out
  neighbor 10.10.10.6 next-hop-self
  neighbor 10.10.10.6 soft-reconfiguration inbound
  neighbor 10.10.10.6 route-map ALLOW-ALL in
  neighbor 10.10.10.6 route-map BGP-ADVERTISE-OUT out
 exit-address-family
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 내용에서 아래 부분은 온프레미스 서브넷(춘천 리전)을 모든 neighbor에 알리기 위한 부분으로, 온프레미스 CIDR를 입력합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt; address-family ipv4 unicast
  network 10.0.0.0/16
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;여기까지 작성하면 온프레미스와 OCI간의 BGP 세션이 설정됩니다. 추가로 피어간 접두사를 주고받는 설정이 필요한데, 이를 위해 온프레미스 서브넷을 허용하는 접두사 목록(prefix-list)을 생성하고, 해당 Prefix-list(BGP-OUT)가 Route-Map BGP-ADVERTISE-OUT에서 참조되도록 다음 내용을 추가합니다. 또한 모든 경로를 허용하기 위해 route-map ALLOW-ALL도 추가하였습니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;ip prefix-list BGP-OUT seq 10 permit 10.0.0.0/16
route-map BGP-ADVERTISE-OUT permit 10
 match ip address prefix-list BGP-OUT
route-map ALLOW-ALL permit 100
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;전체 내용은 다음과 같습니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;hostname libreswancpe
log file //bgpd.log
log stdout
router bgp 65000
 bgp router-id 10.10.10.1
 timers bgp 6 18
 neighbor 10.10.10.2 remote-as 31898
 neighbor 10.10.10.2 ebgp-multihop 255
 neighbor 10.10.10.2 timers 6 18
 neighbor 10.10.10.6 remote-as 31898
 neighbor 10.10.10.6 ebgp-multihop 255
 neighbor 10.10.10.6 timers 6 18
 address-family ipv4 unicast
  network 10.0.0.0/16
  neighbor 10.10.10.2 next-hop-self
  neighbor 10.10.10.2 soft-reconfiguration inbound
  neighbor 10.10.10.2 route-map ALLOW-ALL in
  neighbor 10.10.10.2 route-map BGP-ADVERTISE-OUT out
  neighbor 10.10.10.6 next-hop-self
  neighbor 10.10.10.6 soft-reconfiguration inbound
  neighbor 10.10.10.6 route-map ALLOW-ALL in
  neighbor 10.10.10.6 route-map BGP-ADVERTISE-OUT out
 exit-address-family
ip prefix-list BGP-OUT seq 10 permit 10.0.0.0/16
route-map BGP-ADVERTISE-OUT permit 10
 match ip address prefix-list BGP-OUT
route-map ALLOW-ALL permit 100
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;BGP가 자동으로 실행되도록 BGP Daemon을 활성화합니다. &lt;strong&gt;bgpd=yes&lt;/strong&gt;로 변경합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;vi /etc/frr/daemons
&lt;span class=&quot;go&quot;&gt;
bgpd=yes
ospfd=no
ospf6d=no
ripd=no
ripngd=no
isisd=no
pimd=no
nhrpd=no
eigrpd=no
sharpd=no
pbrd=no
bfdd=no
fabricd=no
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;FRR을 실행합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;frr.service
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;systemctl start frr.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 BGP neighbor의 상태를 확인해보겠습니다.&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[root@libreswancpe ~]#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;vtysh
&lt;span class=&quot;go&quot;&gt;
Hello, this is FRRouting (version 7.5.1).
Copyright 1996-2005 Kunihiro Ishiguro, et al.

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;libreswancpe#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;sh bgp &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
IPv4 Unicast Summary:
BGP router identifier 10.10.10.1, local AS number 65000 vrf-id 0
BGP table version 3
RIB entries 5, using 960 bytes of memory
Peers 2, using 43 KiB of memory

Neighbor        V         AS   MsgRcvd   MsgSent   TblVer  InQ OutQ  Up/Down State/PfxRcd   PfxSnt
10.10.10.2      4      31898       296       296        0    0    0 00:29:22            2        1
10.10.10.6      4      31898       296       296        0    0    0 00:29:22            2        1

Total number of neighbors 2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위에서 볼 수 있듯이 접두사를 보내고 받는 것을 확인할 수 있습니다. 이제 OCI Console에서 IPSec Tunnel의 수신된 BGP 경로(BGP Routes Received)와 보급된 BGP 경로(BGP Route Advertised)를 확인합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-18.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-19.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 그림에서 보는바와 같이 온프레미스(춘천 리전, Libreswan)와 OCI 사이에 서로 경로를 송수신 하는 것을 확인할 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;춘천-리전온프레미스-경로-테이블-구성&quot;&gt;춘천 리전(온프레미스) 경로 테이블 구성&lt;/h3&gt;
&lt;p&gt;춘천 리전의 인스턴스에서 CPE(Libreswan)를 거치도록 경로 규칙을 추가해야 합니다. CPE(Libreswan)의 Private IP로 Target을 설정해야 하는데, 이를 위해서는 Libreswan이 설치된 인스턴스의 VNIC 설정에서 &lt;strong&gt;소스/대상 검사 건너뛰기(Skip source/destination check)&lt;/strong&gt;를 체크해야 합니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;기본적으로 모든 VNIC은 각 네트워크 패킷의 헤더에 나열된 소스와 대상을 확인합니다. VNIC이 소스 또는 대상이 아니면 패킷이 삭제됩니다. 경로 테이블의 타겟으로 설정하는 것은 소스와 대상의 중간에 위치에 있다는 의미이므로, 소스/대상 검사 건너뛰기를 체크해야 합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;CPE(Libreswan) 인스턴스의 소스/대상 검사 건너뛰기(Skip source/destination check) 체크&lt;/strong&gt;
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-20.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 CPE(Libreswan)이 있는 서브넷의 경로 규칙을 다음과 같이 추가합니다.
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-ipsec-to-libreswan-with-bgp-21.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;연결-테스트&quot;&gt;연결 테스트&lt;/h3&gt;
&lt;p&gt;먼저 춘천 리전(온프레미스)에 생성한 테스트용 인스턴스(OnPremise VM Instance-1)에 접속합니다.&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ssh key&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; opc@129.154.61.29
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음과 같이 서울 리전(OCI)에 준비한 인스턴스(OCI VM Instance-1)의 Private IP로 연결 테스트를 해보고 정상적으로 통신이 되는지 확인합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[opc@onpremise-vm-instance-1 ~]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ping 172.16.0.93
&lt;span class=&quot;go&quot;&gt;PING 172.16.0.93 (172.16.0.93) 56(84) bytes of data.
64 bytes from 172.16.0.93: icmp_seq=1 ttl=60 time=3.24 ms
64 bytes from 172.16.0.93: icmp_seq=2 ttl=60 time=2.99 ms
64 bytes from 172.16.0.93: icmp_seq=3 ttl=60 time=3.02 ms
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이번에는 서울 리전(OCI)에 생성한 테스트용 인스턴스(OCI VM Instance-1)에 접속합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ssh key&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; opc@146.56.156.213
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음과 같이 춘천 리전(온프레미스)에 준비한 인스턴스(OnPremise VM Instance-1)의 Private IP로 연결 테스트를 해보고 정상적으로 통신이 되는지 확인합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;[opc@oci-vm-instance-1 ~]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ping 10.0.85.10
&lt;span class=&quot;go&quot;&gt;PING 10.0.85.10 (10.0.85.10) 56(84) bytes of data.
64 bytes from 10.0.85.10: icmp_seq=1 ttl=61 time=2.93 ms
64 bytes from 10.0.85.10: icmp_seq=2 ttl=61 time=2.98 ms
64 bytes from 10.0.85.10: icmp_seq=3 ttl=61 time=2.97 ms
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>

			
				<category term="infrastructure" />
			
			
				<category term="oci" />
			
				<category term="networking" />
			
				<category term="vpn" />
			
				<category term="ipsec" />
			
				<category term="libreswan" />
			

			<published>2022-12-25T00:00:00+09:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//dataplatform/oci-database-migration-service-hands-on/</id>
			<title>OCI Database Migration Service Hands-On</title>
			<link href="http://localhost:4000//dataplatform/oci-database-migration-service-hands-on/" rel="alternate" type="text/html" title="OCI Database Migration Service Hands-On" />
			<updated>2022-12-20T00:00:00+09:00</updated>

			
				
				<author>
					
						<name>Phillsoo Lim</name>
					
					
					
				</author>
			
			<summary>On-Premise 혹은 타 Cloud 에서 운영 중인 Oracle Database 를 무중단으로 OCI 로 이전할 수 있는 OCI Database Migration Service 에 대한 Hands-On 실습 가이드입니다.</summary>
			<content type="html" xml:base="http://localhost:4000//dataplatform/oci-database-migration-service-hands-on/">&lt;div class=&quot;panel radius&quot;&gt;
  &lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#서비스-소개&quot; id=&quot;markdown-toc-서비스-소개&quot;&gt;서비스 소개&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#사전-준비-사항&quot; id=&quot;markdown-toc-사전-준비-사항&quot;&gt;사전 준비 사항&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-1--윈도우-서버-준비---sql-developer-연결&quot; id=&quot;markdown-toc-step-1--윈도우-서버-준비---sql-developer-연결&quot;&gt;STEP 1 : 윈도우 서버 준비 - SQL Developer 연결&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-2--ssh-key-open-ssh-로-변환&quot; id=&quot;markdown-toc-step-2--ssh-key-open-ssh-로-변환&quot;&gt;STEP 2 : SSH Key Open SSH 로 변환&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-3--vault-생성-및-object-storage-생성&quot; id=&quot;markdown-toc-step-3--vault-생성-및-object-storage-생성&quot;&gt;STEP 3 : Vault 생성 및 Object Storage 생성&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#3-1-vault-생성&quot; id=&quot;markdown-toc-3-1-vault-생성&quot;&gt;3-1. Vault 생성&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-2-object-storage-생성&quot; id=&quot;markdown-toc-3-2-object-storage-생성&quot;&gt;3-2. Object Storage 생성&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-4--source-db-준비&quot; id=&quot;markdown-toc-step-4--source-db-준비&quot;&gt;STEP 4 : SOURCE DB 준비&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#source-db에-seed-data-생성&quot; id=&quot;markdown-toc-source-db에-seed-data-생성&quot;&gt;SOURCE DB에 SEED Data 생성&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-5--source-db-및-target-db-에-대한-migration-을-위한-설정&quot; id=&quot;markdown-toc-step-5--source-db-및-target-db-에-대한-migration-을-위한-설정&quot;&gt;STEP 5 : SOURCE DB 및 TARGET DB 에 대한 Migration 을 위한 설정&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-6--goldengate-migration-서비스-deploy&quot; id=&quot;markdown-toc-step-6--goldengate-migration-서비스-deploy&quot;&gt;STEP 6 : GoldenGate Migration 서비스 Deploy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-7--dms-서비스-register-database-에-source-db-target-db-등록&quot; id=&quot;markdown-toc-step-7--dms-서비스-register-database-에-source-db-target-db-등록&quot;&gt;STEP 7 : DMS 서비스 Register Database 에 SOURCE DB, TARGET DB 등록&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-8--migration-생성&quot; id=&quot;markdown-toc-step-8--migration-생성&quot;&gt;STEP 8 : Migration 생성&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-9--migration-검증-validate&quot; id=&quot;markdown-toc-step-9--migration-검증-validate&quot;&gt;STEP 9 : Migration 검증 (Validate)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-10--migration-수행-및-결과-확인&quot; id=&quot;markdown-toc-step-10--migration-수행-및-결과-확인&quot;&gt;STEP 10 : Migration 수행 및 결과 확인&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-11--migration-결과-확인-및-복제-현황-조회&quot; id=&quot;markdown-toc-step-11--migration-결과-확인-및-복제-현황-조회&quot;&gt;STEP 11 : Migration 결과 확인 및 복제 현황 조회&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#step-12--switchover-및-cleanup&quot; id=&quot;markdown-toc-step-12--switchover-및-cleanup&quot;&gt;STEP 12 : Switchover 및 Cleanup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h3 id=&quot;서비스-소개&quot;&gt;서비스 소개&lt;/h3&gt;

&lt;p&gt;이번 글에서는 On-premise 혹은 타 Cloud 에서 운영 중인 Oracle Database 를 서비스 중단없이 가장 간단한 방법으로 OCI DB System, Exadata Cloud Service 혹은 Autonomouse Database 로 Migration 을 수행할 수 있는 OCI Database Migration Service 에 대해서 알아보고 간편하게 Migration 하는 방법을 직접 Hands-On 을 통해 실습해 보도록 합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/01.oracle_database_migration_methods.png&quot; alt=&quot;OCI Migration Method&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Oracle Database 를 Migration 할 수 있는 방법은 전통적인 Offline 기반의 Data Pump, RMAN Backup &amp;amp; Recovery 방법 등이 있고 무중단 Migration 을 위해서는 Online 기반의 Zero Downtime Migration (ZDM) 과 Data Guard 를 통한 Physical Migration 그외에 최근 OCI 에 추가된 OCI Database Migration Service (DMS) 등 여러 방법이 있습니다. 이중에서 최근에 나온 OCI Database Migration Service 는 GoldenGate 기술을 사용하여 Migration 을 수행함과 동시에 Source 단에서 일어나는 변경 사항들을 실시간으로 Target 에 반영할 수 있기 때문에 Near Zero Downtime 기반으로 기존 사용하는 Oracle Database 를 손쉽게 이전할 수 있는 마이그레이션 방법입니다.  &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/02.oci_database_migration_overview.png&quot; alt=&quot;OCI Migration&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;OCI DMS 서비스는 사용자의 테넌시 및 리소스와 별도로 관리되는 클라우드 서비스로 실행됩니다. 이 서비스는 DMS 서비스 테넌시에서 다중 테넌트 서비스로 작동하며 PE(Private Endpoint)를 사용하여 사용자의 리소스와 통신합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;사전-준비-사항&quot;&gt;사전 준비 사항&lt;/h3&gt;
&lt;p&gt;OCI Database Migration 서비스를 이용하려면 먼저 아래와 같은 사항들이 준비되어야 합니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Virtual Cloud Network (VCN) 구성 및 Security List 에 1521, 443, 3389 port 오픈&lt;/li&gt;
  &lt;li&gt;Source Oracle DB (On-Premise DB, 타 Cloud DB, OCI DBCS) - (Oracle DB 11.2.0.4 버전 이상) - DBCS 생성 시  &lt;a href=&quot;/dataplatform/oracle-database-cloud-service-quickstart/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;DBCS 생성 퀵스타트 가이드 참고&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Target Oracle DB (OCI DBCS, ExaCS 혹은 ADB) - (Oracle DB 11.2.0.4 버전 이상)&lt;/li&gt;
  &lt;li&gt;DB 연결을 위한 Windows Instance (선택 사항)&lt;/li&gt;
  &lt;li&gt;Windows Instance 에 SQLDeveloper, Putty Software install&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/04.oci-dms-dbcs-preparation.png&quot; alt=&quot;DBCS Preparation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;상기 그림과 같이 OCI DMS 핸즈온을 위해 SOURCE 와 TARGET 을 OCI의 DBCS 를 미리 구성해 놓았고 SOURCE DBCS 에서 TARGET DBCS 로 Migration을 실습하게 됩니다.
SOURCE DBCS 는 On-Premise Oracle DB 나 타 Cloud 에서 사용 중인 Oracle DB 로 생각하시고 실습하면 됩니다.
DBCS 를 일반적으로 Private Subnet 안에 구성되기 때문에 Public Subnet 을 통해 DB 접근이 가능하도록 SQL Developer 실행을 위한 Windows 서버를 추가로 구성합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/goldengate/02.oci-goldengate-windows-preparation.png&quot; alt=&quot;Windows Preparation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-1--윈도우-서버-준비---sql-developer-연결&quot;&gt;STEP 1 : 윈도우 서버 준비 - SQL Developer 연결&lt;/h3&gt;

&lt;p&gt;DB 서버 접속을 위해 상기 Provisioning 한 윈도우 서버에 원격 데스크탑 을 통해 접속합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/goldengate/03.oci-goldengate-windows-preparation-2.png&quot; alt=&quot;Windows Preparation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;접속된 윈도우 서버에서 Oracle SQL Developer (https://www.oracle.com/database/sqldeveloper/technologies/download/) 를 다운로드 받아 설치합니다. 다운받은 zip 파일을 압축만 해제하면 됩니다. 압축해제된 파일 폴더에서 sqldeveloper.exe 를 실행합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/goldengate/04.oci-goldengate-windows-sql-developer.png&quot; alt=&quot;SQL Developer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;SQL Developer 를 실행하면 아래와 같은 화면이 나타나며 상단의 새로운 DB Connection 을 생성할 수 있는 버튼을 클릭합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/goldengate/05.oci-goldengate-windows-sql-developer-2.png&quot; alt=&quot;SQL Developer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;생성된 DB 의 Connection 정보는 DBCS 의 상세화면에서 DB Connection 정보를 획득할 수 있습니다. 아래 그림과 같이 DB Connection 정보를 복사합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/05.oci-dms-dbcs-connection-string-1.png&quot; alt=&quot;SQL Developer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/06.oci-dms-dbcs-connection-string-2.png&quot; alt=&quot;SQL Developer&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* DB Connection 정보  : migsrcdb.sub12150803481.pslimvcnmigrati.oraclevcn.com:1521/MIGSRCDB_MIGSRCDB.sub12150803481.pslimvcnmigrati.oraclevcn.com

상기 Connection 정보에서 SQL Developer 의 Connection 에 입력할 항목들을 추출합니다.
1. 호스트 이름 : migsrcdb.sub12150803481.pslimvcnmigrati.oraclevcn.com
2. 포트 : 1521
3. 서비스 이름 : MIGSRCDB_MIGSRCDB.sub12150803481.pslimvcnmigrati.oraclevcn.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;아래의 화면에 사용자 이름에 DB 생성 시 입력한 sys 사용자의 password 와 호스트 이름, 서비스 이름을 입력하고 테스트 및 저장 버튼을 클릭합니다. 여기서 반드시 사용자의 롤(Role)을 SYSDBA 로 선택해 줍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/07.oci-dms-dbcs-sqldeveloper-connection-1.png&quot; alt=&quot;SQL Developer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Target DB 에 대해서도 동일한 방식으로 sys 사용자에 대해 Connection 을 생성하여 저장해 둡니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/08.oci-dms-dbcs-sqldeveloper-connection-2.png&quot; alt=&quot;SQL Developer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Connection 을 클릭하여 설정한 SOURCE DB 로 연결이 잘 되는지 확인합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/09.oci-dms-dbcs-sqldeveloper-connection-3.png&quot; alt=&quot;SQL Developer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-2--ssh-key-open-ssh-로-변환&quot;&gt;STEP 2 : SSH Key Open SSH 로 변환&lt;/h3&gt;

&lt;p&gt;SSH Key 를 Windows OS 에서 Putty 를 통해 Public Key 와 Private Key 를 생성한 Key 를 가지고 DB 를 생성하고 컴퓨트를 생성했다면 Putty Gen 을 통해 Open SSH Key file 로 변환을 해 주어야 합니다. 만일, Linux 기반의 ssh-keygen 을 통해 생성한 key 를 사용한다면 STEP 2를 수행하지 않으셔도 됩니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;윈도우즈에서 PuttyGen 을 실행 후 “Load” 버튼을 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/10.oci-dms-putty-gen-1.png&quot; alt=&quot;PuttyGen&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Key가 Load 되었으면, 상단의 “Conversions” 메뉴 아래의 “Eport OpenSSH Key” 메뉴를 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/11.oci-dms-putty-gen-2.png&quot; alt=&quot;PuttyGen&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;아래 화면의 예처럼 OpenSSH Key 로 변환되어 저장된 Key 임을 알수 있는 이름으로 Key 를 저장 후 PuttyGen 프로그램을 종료합니다. (※ 추후, GoldenGate Migration 을 Deploy 할때 변환된 OpenSSH Key 를 사용하게 되므로 변환된 Key 를 잘 보관합니다.)&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/12.oci-dms-putty-gen-open-ssh.png&quot; alt=&quot;PuttyGen&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-3--vault-생성-및-object-storage-생성&quot;&gt;STEP 3 : Vault 생성 및 Object Storage 생성&lt;/h3&gt;

&lt;h4 id=&quot;3-1-vault-생성&quot;&gt;3-1. Vault 생성&lt;/h4&gt;

&lt;p&gt;이번 단계는 Vault 및 암호화 Key 를 생성하는 단계입니다. 더불어 Object Storage 용 bucket 을 생성합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;OCI Console 에서 Identity &amp;amp; Security &amp;gt; Vault 메뉴를 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/13.vault-oci-menu.png&quot; alt=&quot;PuttyGen&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Compartment 를 선택 후 Create Vault 버튼을 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/14.oci-menu-vault-create-1.png&quot; alt=&quot;PuttyGen&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create Vault dialog 창이 나타나면 dms_vault 와 같은 이름으로 Vault 를 생성합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/15.oci-menu-vault-create-2.png&quot; alt=&quot;PuttyGen&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;몇분이 지나면 생성한 Vault 가 Active 상태로 전환된 것을 확인합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/16.oci-menu-vault-create-3.png&quot; alt=&quot;PuttyGen&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;생성된 Vault 를 클릭하여 들어간 메뉴에서 새로이 Master Encryption Key 를 생성하기 위해 Create Key 버튼을 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/16.oci-menu-key-create-4.png&quot; alt=&quot;PuttyGen&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Key 생성 화면에서 Key 의 이름을 입력하고 Create 버튼하면 Key 가 생성됩니다. 생성한 Key 가 제대로 생성된 후 Active 상태로 전환되는지 확인합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/16.oci-menu-vault-create-5.png&quot; alt=&quot;PuttyGen&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/16.oci-menu-vault-create-6.png&quot; alt=&quot;PuttyGen&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;3-2-object-storage-생성&quot;&gt;3-2. Object Storage 생성&lt;/h4&gt;

&lt;p&gt;Migration 시 사용이 되는 빈 Object Storage 를 생성해 줍니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;OCI Console 메뉴에서 Storage &amp;gt; Object Storage &amp;amp; Archive Storage 를 클릭합니다.
  &lt;img src=&quot;/assets/img/dataplatform/2022/migration/17.oci-menu-object-storage.png&quot; alt=&quot;PuttyGen&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create Bucket 버튼을 클릭하여 Bucket 생성 화면으로 이동합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/18.oci-menu-object-storage-bucket-create.png&quot; alt=&quot;PuttyGen&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Bucket 생성 화면에서 Bucket Name 을 DMSStorage 로 입력 후, 나머지는 기본값으로 설정 후 Create 버튼을 클릭하면 버킷이 생성됩니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/19.oci-menu-object-storage-bucket-create-2.png&quot; alt=&quot;PuttyGen&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-4--source-db-준비&quot;&gt;STEP 4 : SOURCE DB 준비&lt;/h3&gt;

&lt;p&gt;데이터의 원천 소스 DB에 대해 테이블 스키마 구성 및 테스트용 Seed data 를 입력하여 운영 중인 실시간 복제할 테이블과 데이터를 구성해 주는 단계입니다.&lt;/p&gt;

&lt;h4 id=&quot;source-db에-seed-data-생성&quot;&gt;SOURCE DB에 SEED Data 생성&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;복제를 수행할 Source 데이터베이스를 구성합니다. 먼저, Source DB 의 CDB ROOT 사용자인 sys 사용자로 Connection 을 연결 후, SRC_OCIGGLL 이라는 사용자를 생성해 줍니다. (※ password 항목은 사용할 password 로 대체 필요)&lt;/p&gt;

    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SESSION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTAINER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PDB1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;USER&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;SRC_OCIGGLL&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IDENTIFIED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;&amp;lt;password&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SESSION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;SRC_OCIGGLL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;USER&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;SRC_OCIGGLL&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACCOUNT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNLOCK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CONNECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RESOURCE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;SRC_OCIGGLL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ANY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;SRC_OCIGGLL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIVILEGES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;SRC_OCIGGLL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNLIMITED&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TABLESPACE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;SRC_OCIGGLL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/20.oci-sourcedb-pdb-user-create.png&quot; alt=&quot;SEED User&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;생성한 SRC_OCIGGLL 사용자로 SQLDeveloper 접속을 생성합니다. (※ 생성한 SRC_OCIGGLL 사용자는 PDB 사용자로 반드시 아래의 서비스 이름에 PDB명을 입력해야 합니다. PDB명은 DB 생성 시 입력한 PDB명 입니다.)&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/21.oci-sourcedb-seed-user-connect.png&quot; alt=&quot;SEED User&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;상기 생성한 SRC_OCIGGLL 사용자로 SQL Developer 에 접속 후 SQL 커맨드 창에서 아래의 SEED Data Load Script 를 수행합니다. SEED Data Load Script 는 &lt;a href=&quot;/assets/files/ocigg-sql/SOURCE-SEED-DATA.SQL&quot;&gt;SOURCE-SEED-DATA.SQL&lt;/a&gt; 를 다운받아 생성한 SRC_OCIGGLL 사용자의 Connection 을 이용해 접속 후 SQL 실행창에 복사하여 붙여놓고 SQL 문장들을 실행합니다. (※ 아래 내용은 해당 스크립트의 일부입니다.)&lt;/p&gt;

    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNLIMITED&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TABLESPACE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SRC_OCIGGLL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;--------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;--  File created - @dsgray 3-07-2021   &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;--------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;--------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;--  DDL for Table SRC_CITY&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;--------------------------------------------------------&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;SRC_OCIGGLL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;SRC_CITY&quot;&lt;/span&gt; 
 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;	&lt;span class=&quot;nv&quot;&gt;&quot;CITY_ID&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NUMBER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
  &lt;span class=&quot;nv&quot;&gt;&quot;CITY&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;BYTE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
  &lt;span class=&quot;nv&quot;&gt;&quot;REGION_ID&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NUMBER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
  &lt;span class=&quot;nv&quot;&gt;&quot;POPULATION&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NUMBER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
 &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

 &lt;span class=&quot;p&quot;&gt;.....&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;중략&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;아래 화면은 상기 SEED-DATA.SQL 스크립트를 실행한 결과입니다. SRC_OCIGGLL 스키마에 샘플테이블인 SRC_CITY, SRC_CUSTOMER, SRC_PRODUCT, SRC_REGION 등의 테이블과 데이터가 입력이 되어 있는지 확인합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/22.oci-sourcedb-seed-create.png&quot; alt=&quot;SEED User&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-5--source-db-및-target-db-에-대한-migration-을-위한-설정&quot;&gt;STEP 5 : SOURCE DB 및 TARGET DB 에 대한 Migration 을 위한 설정&lt;/h3&gt;

&lt;p&gt;SOURCE DB 와 TARGET DB 에 Migration 을 수행하기 위한 설정을 수행합니다. Migration 설정을 위해서 GoldenGate Replication 을 위한 Supplement Logging, GoldenGate Admin 사용자 추가, GoldenGate 사용이 가능한 설정 변경등의 DBA 작업들이 있습니다. SOURCE DB 와 TARGET DB 가 Private Subnet 에 Deploy 가 되어 있기 때문에 Windows VM 에 Terminal 로 접속하여 아래 작업들을 수행합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;원격데스크탑 연결을 통한 윈도우 로그인 후 Putty 를 실행시킨 후 DBCS 의 Private IP 정보를 획득하여 연결 설정을 합니다. (※ Putty 설정 시, Private Key를 지정하여 연결 설정)&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/23.oci-sourcedb-private-ip.png&quot; alt=&quot;Putty&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TARGET DB 도 SOURCE DB 와 마찬가지로 동일하게 Putty 의 연결을 설정합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;연결 후 Security Alert 창의 “Accept” 버튼을 클릭하여 DB Host 로 연결을 합니다.&lt;br /&gt;
  &lt;img src=&quot;/assets/img/dataplatform/2022/migration/24.oci-sourcedb-putty-access.png&quot; alt=&quot;Putty&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;연결된 Terminal 에서 oracle 사용자로 전환 후 dba 권한으로 sqlplus 접속을 합니다.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  [opc@migsrcdb ~]$ sudo su - oracle
  [oracle@migsrcdb ~]$ sqlplus / as sysdba
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;아래 그림처럼 TARGET DB Host 에도 Terminal 접속 후 oracle 사용자로 전환 후 dba 권한으로 sqlplus 에 접속합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/25.dbhost-sqlplus.png&quot; alt=&quot;Putty&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;아래의 show pdb SQL 명령으로 PDB 명을 확인합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/26.dbhost-sqlplus-show-pdb.png&quot; alt=&quot;Putty&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;SOURCE DB 와 TARGET DB 의 PDB로 접속하여 앞단계에서 생성한 SRC_OCIGGLL 스키마에 seed data 가 존재하는지 확인합니다.
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  SQL&amp;gt; alter session set container=PDB1;
  SQL&amp;gt; select count(*) from SRC_OCIGGLL.SRC_CITY;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;아래 화면처럼 좌측의 SOURCE DB 쪽은 이전에 단계에서 생성해 놓은 SRC_CITY, SRC_REGION 과 같은 Seed Data 가 있으나, TARGET DB 쪽은 SRC_OCIGGLL 스키마 혹은 SRC_CITY 같은 테이블이 존재하지 않는 것을 확인할 수 있습니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/27.dbhost-sqlplus-schema-check.png&quot; alt=&quot;Putty&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SORCE DB 의 PDB 에 생성해 놓은 SRC_OCIGGLL 스키마 데이터들을 TARGET DB 로 Migration 을 수행해 보도록 하겠습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SOURCE DB 에 접속된 SQLPLUS Command 에서 PDB 에 접속하여 DMS Migration 을 위해 필요한 DB 사용자인 ggadmin 사용자를 아래와 같이 생성하고 권한을 부여해 줍니다. (※ “password” 는 사용할 Password 로 대체 필요)&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  alter session set container=PDB1;
  create tablespace GG_DATA datafile &apos;+DATA&apos; size 100m autoextend on next 100m;
  create user ggadmin identified by &quot;password&quot; container=current; 
  grant create session to ggadmin container=current;
  grant alter any table to ggadmin container=current;
  grant resource to ggadmin container=current;
  grant dba to ggadmin container=current;
  exec dbms_goldengate_auth.grant_admin_privilege(&apos;ggadmin&apos;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/28.dbhost-sqlplus-source-db-setting.png&quot; alt=&quot;Putty&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SOURCE DB 에 접속된 SQLPLUS Command 에서 CDB 에 접속하여 DMS Migration 을 위해 필요한 DB 사용자인 c##ggadmin 사용자를 아래와 같이 생성하고 권한을 부여해 줍니다. 더불어, 제일 마지막 줄의 global_names 파라미터도 false 로 세팅해 줍니다. (※ “password” 는 사용할 Password 로 대체 필요)&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  alter session set container=cdb$root;
  alter system set enable_goldengate_replication=TRUE;
  alter system set streams_pool_size=2G;
  alter database force logging;
  alter database add supplemental log data;
  archive log list;
  create tablespace GG_DATA datafile &apos;+DATA&apos; size 100m autoextend on next 100m;
  create user c##ggadmin identified by &quot;password&quot; container=all default tablespace GG_DATA temporary tablespace temp;
  grant alter system to c##ggadmin container=all;
  grant dba to c##ggadmin container=all;
  grant create session to c##ggadmin container=all;
  grant alter any table to c##ggadmin container=all;
  grant resource to c##ggadmin container=all;
  exec dbms_goldengate_auth.grant_admin_privilege(&apos;c##ggadmin&apos;,container=&amp;gt;&apos;all&apos;);
  alter system set global_names=false;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/29.dbhost-sqlplus-source-db-setting-2.png&quot; alt=&quot;Putty&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TARGET DB 에도 SOURCE DB 와 동일하게 접속된 SQLPLUS Command 에서 PDB 에 접속하여 DMS Migration 을 위해 필요한 DB 사용자인 ggadmin 사용자를 아래와 같이 생성하고 권한을 부여해 줍니다. (※ “password” 는 사용할 Password 로 대체 필요)&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  alter session set container=PDB2;
  create user ggadmin identified by &quot;password&quot; container=current; 
  grant create session to ggadmin container=current;
  grant alter any table to ggadmin container=current;
  grant resource to ggadmin container=current;
  grant dba to ggadmin container=current;
  exec dbms_goldengate_auth.grant_admin_privilege(&apos;ggadmin&apos;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/30.dbhost-sqlplus-target-db-setting-1.png&quot; alt=&quot;Putty&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TARGET DB 에는 추가적으로 Vault 환경에서 GoldenGate 를 구성할 수 있는 권한을 부여해 줍니다.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  grant dv_glodengate_admin, dv_goldengate_redo_access to ggadmin container=current;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/31.dbhost-sqlplus-target-db-setting-2.png&quot; alt=&quot;Putty&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TARGET DB 의 CDB 로 전환하여 global_names 를 SOURCE DB 와 마찬가지로 false 로 변경해 줍니다.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  alter session set container=CDB$ROOT;
  alter system set global_names=false;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/32.dbhost-sqlplus-target-db-setting-3.png&quot; alt=&quot;Putty&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-6--goldengate-migration-서비스-deploy&quot;&gt;STEP 6 : GoldenGate Migration 서비스 Deploy&lt;/h3&gt;

&lt;p&gt;이 단계에서는 무중단 Migration 을 하기 위해 데이터의 복제를 담당해 주는 GoldenGate Migration 서비스를 OCI 에 Deploy 하는 단계입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;GoldenGate Migration 서비스는 Marketplace 를 통해 Deploy 를 하실 수 있습니다. OCI Console Menu 에서 Marketplace &amp;gt; All Applications 를 선택합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/33.oci-marketplace-menu.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Marketplace 검색 창에 “GoldenGate Migration” 이라고 입력을 하면, 아래 목록에 검색 결과가 나타납니다. 목록에서 “Oracle GoldenGate - Database Migrations” 라는 Application 을 선택합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/34.oci-marketplace-search.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Oracle GoldenGate - Database Migrations Applicatoin 을 Deploy 할 Compartment 와 라이센스 정책 동의를 체크 후 “Lanuch Stack” 버튼을 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/35.oci-marketplace-goldengate-launch-stack.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Stack 생성 화면으로 이동됩니다. Stack 의 이름을 입력 후 “Next” 버튼을 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/36.oci-marketplace-goldengate-stack-create.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Stack 생성을 위한 다양한 항목들을 입력합니다. 먼저 Display Name 및 DNS host 명은 기본으로 입력된 것을 활용하실 수도 있고 임의적으로 변경이 가능합니다. 입력 후 아래로 스크롤 다운하여 Network Settings 영역으로 이동합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/37.oci-marketplace-goldengate-stack-create-1.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GoldenGate - Database Migrations 을 Deploy 할 Compartment 와 VCN, Subnet 등 네트워크 설정들을 해 줍니다. 더불어 Subnet 은 GoldenGate Web Console 을 Public IP 를 통해 조회 및 관리할 수 있도록 Public Subnet 을 선택해 주고 아래로 스크롤 다운하여 Instance Settings 영역으로 이동합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/38.oci-marketplace-goldengate-stack-create-2.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Instance 가 Depoly 될 AD 를 선택해 주고 필요시 GoldenGate 가 사용할 컴퓨트 Shape 을 변경해 주고 Create OGG Deployment 영역으로 스크롤 다운합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/39.oci-marketplace-goldengate-stack-create-3.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;OGG Depolyment 이름과 SSH Access Key 를 입력 후 Next 버튼을 클릭합니다. Deployment 이름은 추후 DMS 서비스를 생성하고 DMS 서비스를 이용하는데 사용되므로 기억하거나 메모하여 잘 보관해 둡니다. 저는 DMSTEST 라고 입력을 하도록 하겠습니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/40.oci-marketplace-goldengate-stack-create-4.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;앞화면에서 입력했던 모든 사항들을 리뷰한 후 Create 버튼을 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/41.oci-marketplace-goldengate-stack-create-5.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;생성한 Stack 이 Application 생성 Job 을 시작합니다. 아래와 같이 Success 화면으로 전환이 되면 성공적으로 GoldenGate - Database Migrations Application 이 Deploy 됩니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/42.oci-marketplace-goldengate-stack-create-6.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Stack 이 생성한 결과 Log의 맨 하단을 보면 Deploy 한 ogg_public_ip 라는 항목에 Public IP 가 발급된 것을 확인할 수 있습니다. 해당 IP 와 Private Key 를 Putty 에 등록하여 생성된 GoldenGate 서버에 접속합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/44.oci-marketplace-goldengate-server-putty.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;접속된 서버에서 아래의 명령어를 입력하여 GoldenGate 서버의 oggadmin 사용자의 credential 정보를 확보합니다. Credential Password 정보는 추후 DMS 서비스 설정 및 GoldenGate Admin 화면 로그인 시 사용하게 되므로 잘 복사해서 보관해 둡니다.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ ls
  $ cat ogg-credentials.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/45.oci-marketplace-goldengate-credential.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;인터넷 브라우저의 주소창에 “https://GoldenGate-서버-Public-IP” 를 입력하여 GoldenGate 관리자 페이지로 액세스를 합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/46.oci-marketplace-goldengate-public-ip.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“고급” 버튼을 클릭하고 아래 “안전하지 않음” 을 클릭하여 GoldenGate Admin 웹화면으로 접근합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/47.oci-marketplace-goldengate-admin-web-1.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/48.oci-marketplace-goldengate-admin-web-2.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“고급” 버튼을 클릭하고 아래 “안전하지 않음” 을 클릭하여 GoldenGate Admin 웹화면으로 접근합니다. GoldenGate 서비스 관리자 로그인 창에 앞단계에서 확보한 ogg-credentials.json 파일 안의 credential 정보인 username 과 credential 을 로그인 창의 Username 과 Password 항목에 입력 후 로그인합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/49.oci-marketplace-goldengate-admin-web-3.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;아래 그림과 같이 제대로 로그인이 되는지 확인하고 4개의 서비스가 “실행 중” 상태인지 확인합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/50.oci-marketplace-goldengate-admin-web-4.png&quot; alt=&quot;Marketplace&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-7--dms-서비스-register-database-에-source-db-target-db-등록&quot;&gt;STEP 7 : DMS 서비스 Register Database 에 SOURCE DB, TARGET DB 등록&lt;/h3&gt;

&lt;p&gt;다음은 DMS 서비스에서 사용할 SOURCE DB 와 TARGET DB 를 등록하도록 하겠습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;OCI Console Menu 의 Migration &amp;gt; Database Migrations &amp;gt; Registerd Databases 메뉴로 접근합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/51.oci-migration-registered-databases-1.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Registerd Databases 목록 화면에서 선택된 Compartment 를 확인 후 Register Database 버튼을 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/52.oci-migration-registered-databases-2.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Database 등록 화면에서 등록하는 DB 의 이름을 입력 후 선택된 Compartment 및 Vault 와 Encryption Key 를 선택합니다. On-Premise DB 에 대해 Migration 을 위한 DB 라면 “Manual configure database” 를 입력하여 On-Premise DB 의 Host 와 Port 를 입력하여 수동 구성합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/53.oci-migration-registered-databases-3.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;OCI 에 생성되어 있는 DB 를 등록할 경우 “Select database” 를 선택합니다. 저는 SOURCE DB, TARGET DB 모두 OCI 에 등록해 놓은 경우이기 때문에 “Select database” 메뉴를 선택 후 아래 화면과 같이 자동으로 Display 되는 목록에서 SOURCE DB 의 정보들을 선택합니다. Connection String 항목은 CDB 로 선택이 되기 때문에 PDB 의 Connect String 으로 바꿔주어야 하고 host 부분도 IP 로 바꿔 주어야 합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/54.oci-migration-registered-databases-4.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;중요 : Connect String 항목은 기본으로 입력되어 있는 내용을 지우고 아래와 같이 Host 부분을 IP 로 DB 서비스명 부분을 PDB 서비스 명으로 바꾸어 주어야 함 &lt;br /&gt;
(입력 예: 10.0.1.28:1521/PDB1.sub12150803481.pslimvcnmigrati.oraclevcn.com)&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/56.oci-migration-registered-databases-6.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Connection Details 입력 화면이 나타나면 우측과 같이 Database administrator username 과 password 를 입력합니다. Oracle DB 의 super user 계정인 sys 계정은 사용할 수 없도록 되어 있어 저는 동일한 DBA 권한을 가진 system 계정으로 Connection 정보를 입력해 주도록 하겠습니다. 더불어 DB server 의 hostname 에는 DB Node 의 Private IP 정보를 입력하며 ssh private key 영역에는 이전에 Open SSH 포맷으로 변환해 놓은 ssh key 를 선택하여 입력해 줍니다. SSH username 에는 OCI 의 사용자 계정인 opc 를 입력 하고 나머지는 기본 선택 및 optional 영역은 빈칸으로 놓아 둡니다. Register 버튼을 클릭하여 DB 를 등록합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/55.oci-migration-registered-databases-5.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;중요 : ssh private key 는 반드시 Open SSH 포맷으로 변환해 놓은 ssh key 를 사용. putty 포맷의 PPK 파일 사용 시 오류 발생&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TARGET DB 도 SOURCE DB 와 마찬가지로 동일한 절차에 따라 Database 를 등록해 줍니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;마이그레이션 대상 SOURCE 원본 DB 가 PDB 일 경우 SOURCE DB 의 CDB 도 Register Database 에 등록해 주어야 합니다. SOURCE DB 의 CDB 도 동일한 방법으로 DB 를 등록해 줍니다. (※ Connect String 입력 시 CDB 서비스 명 입력)&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/58.oci-migration-registered-databases-8.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;최종적으로 SOURCEDB 가 PDB 일 경우는 아래와 같이 SOURCE CDB, SOURCE PDB, TARGET PDB 이렇게 세가지의 Database 들이 등록되어 있어야 합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/59.oci-migration-registered-databases-9.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;step-8--migration-생성&quot;&gt;STEP 8 : Migration 생성&lt;/h3&gt;

&lt;p&gt;마이그레이션을 Job 을 통해 실제 마이그레이션을 제어할 수 있는 서비스를 생성하는 단계입니다. Migration 에서는 실제 Migration 을 수행하기 전에 Validation 을 수행하여 사전에 발생할 수 있는 오류들을 찾아 낼 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;OCI Console Menu 에서 Migration &amp;gt; Database Migration &amp;gt; Migrations 메뉴를 선택합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/60.oci-migration-migration-menu.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Migration 목록 화면에서 “Create migration” 버튼을 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/61.oci-migration-create-migration-1.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Migration 생성 화면에서 Migration 이름과 source db 로의 direct connection 을 선택 후 Next 버튼을 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/62.oci-migration-create-migration-2.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Source Database 와 Target Database 를 앞서 등록한 Regstered Database 에서 등록한 DB 명들을 Migration 할 Source 와 Target 방향에 알맞게 선택해 줍니다.
SOURCE DB 가 PDB 이기 때문에 “Database is pluggable database (PDB)” 체크 박스를 선택해 줍니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/63.oci-migration-create-migration-3.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;PDB 선택 사항을 체크하면 아래 화면처럼 CDB 를 선택하는 목록이 추가로 나타납니다. 목록이 나오면 이전에 등록한 SOURCE DB 의 CDB 를 아래 그림과 같이 선택 후 “Next” 버튼을 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/64.oci-migration-create-migration-4.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다음은 Migration Option 을 선택해 주는 단계입니다. 초기 데이터 로드 방법을 database link 를 사용하여 직접 전송할 수도 있고, Object Storage 를 통해 로드를 할 수 있습니다. 이번 실습에서는  database link 를 이용해 직접 전송을 해 보도록 하겠습니다. GoldenGate 를 이용하여 Online Replication 을 수행할 것이기 때문에 아래 “Use online replication” 을 선택합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/65.oci-migration-create-migration-5.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Use Online replication 을 선택하면 아래와 같이 GoldenGate 관련 입력 항목들이 나타납니다. 아래 그림을 참고하여 입력 항목들을 입력 후 아래쪽으로 스크롤 다운합니다.
    &lt;ul&gt;
      &lt;li&gt;GoldenGate hub URL : https://146.56.36.222 (GoldenGate Deployment Public IP)&lt;/li&gt;
      &lt;li&gt;GoldenGate administrator username : oggadmin&lt;/li&gt;
      &lt;li&gt;GoldenGate administrator password : “password” (GoldenGate 서버의 ogg-credentials.json 파일 안의 credential 에서 획득한 password 입력)&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/66.oci-migration-create-migration-6.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Source database 영역에 다음과 같이 각 항목마다 입력 항목들을 입력 후 아래로 스크롤 다운합니다.
    &lt;ul&gt;
      &lt;li&gt;GoldenGate deployment name : DMSTEST (GoldenGate Deploy 시 입력한 Name)&lt;/li&gt;
      &lt;li&gt;Database username : ggadmin (STEP 5 에서 생성했던 Source DB 의 PDB 에 만들었던 GoldenGate Admin DB User)&lt;/li&gt;
      &lt;li&gt;Database password : password (STEP 5 에서 생성했던 Source DB 의 PDB 에 만들었던 GoldenGate Admin DB User 의 Password)&lt;/li&gt;
      &lt;li&gt;Container database username : c##ggadmin (STEP 5 에서 생성했던 Source DB 의 CDB 에 만들었던 GoldenGate Admin DB User)&lt;/li&gt;
      &lt;li&gt;Container database password : password (STEP 5 에서 생성했던 Source DB 의 CDB 에 만들었던 GoldenGate Admin DB User 의 Password)&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/67.oci-migration-create-migration-7.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Target database 영역에 다음과 같이 각 항목마다 입력 항목들을 입력 후 “Create” 버튼을 클릭합니다.
    &lt;ul&gt;
      &lt;li&gt;GoldenGate deployment name : DMSTEST (GoldenGate Deploy 시 입력한 Name)&lt;/li&gt;
      &lt;li&gt;Database username : ggadmin (STEP 5 에서 생성했던 Target DB 의 PDB 에 만들었던 GoldenGate Admin DB User)&lt;/li&gt;
      &lt;li&gt;Database password : password (STEP 5 에서 생성했던 Target DB 의 PDB 에 만들었던 GoldenGate Admin DB User 의 Password)&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/68.oci-migration-create-migration-8.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;앞서 입력했던 Migration 이름으로 Migration 이 생성됩니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/69.oci-migration-create-migration-9.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-9--migration-검증-validate&quot;&gt;STEP 9 : Migration 검증 (Validate)&lt;/h3&gt;

&lt;p&gt;실제 이관을 수행하기 전에 Validation 을 체크를 수행하는 단계입니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;생성한 Migration 의 상단 메뉴에서 Validation 을 한번도 수행하지 않은 경우 Validation 이 필요하다는 경고 문구가 나타납니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/70.oci-migration-validation-0.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“Validate” 버튼을 클릭하여 사전 검증 작업을 수행합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/71.oci-migration-validation-1.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/72.oci-migration-validation-2.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“Validate” Job 이 시작되어 진행중으로 나타나며 해당 Job 목록을 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/73.oci-migration-validation-3.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Job 의 상세 화면에서는 각 단계별로 수행 단계들이 나타나며, Validation Job 이 실패한 경우 해당 단계를 클릭하여 상세 에러 내용을 볼 수 있습니다. 에러 내용을 확인하여 조치를 하실 수 있습니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/74.oci-migration-validation-4.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/75.oci-migration-validation-5.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;아래 에러 메시지의 Action 에서 조치 사항처럼 TARGET DB 의 Database Parameter 인 ENABLE_GOLDENGATE_REPLICATION 을 “TRUE” 로 설정합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/76.oci-migration-validation-error_action_6.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TARGET DB Host 에 접속하여 sqlplus 로 로그인하여 CDB 에 Database Parameter 인 ENABLE_GOLDENGATE_REPLICATION 을 “TRUE” 로 설정합니다.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ sqlplus / as sysdba
  SQL&amp;gt; ALTER SYSTEM SET ENABLE_GOLDENGATE_REPLICATION=TRUE SCOPE=BOTH;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/77.oci-migration-validation-error_action_7.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;에러 조치가 수행되었으면 Migration 의 Validate 을 다시 수행합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/78.oci-migration-validation-error_action_8.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;에러가 났던 부분이 해결되게 다음 절차로 진행된 후 Validation 이 성공적으로 진행된 것을 확인할 수 있습니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/79.oci-migration-validation-error_action_9.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/80.oci-migration-validation-success.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-10--migration-수행-및-결과-확인&quot;&gt;STEP 10 : Migration 수행 및 결과 확인&lt;/h3&gt;

&lt;p&gt;앞 단계에서 Validation 절차가 완료되면 Migration 을 수행할 준비가 완료되었습니다. 이제 Migration Details 에서 Start 버튼을 클릭하여 Migration 을 시작할 수 있습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Migration Details 화면에서 “Start” 버튼을 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/81.oci-migration-migration-start.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Migration 수행 시 잠시 멈출 (Pause) 단계를 기본 선택된 “Monitor replication lag” 를 선택 후 “Start” 버튼을 클릭합니다. (※ 필요시 여러 단계들 중 다른 단계로 선택할 수 있음)&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/82.oci-migration-migration-start-pause-option.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/83.oci-migration-migration-start-pause-option-2.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Migration 이 진행되며 Migration Job 이 생성되어 단계별 진행 상황을 조회하실 수 있습니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/84.oci-migration-migration-start-view-details.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/85.oci-migration-migration-job-details.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/86.oci-migration-migration-job-phases.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터 이관이 완료되고 Migration 의 단계 중에서 Job 을 시작할 때 Pause 단계로 선택했던 Monitor replication lag 단계를 완료 후 Job 이 WAITING 되는 것을 확인하실 수 있습니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/87.oci-migration-migration-job-phases-waiting.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-11--migration-결과-확인-및-복제-현황-조회&quot;&gt;STEP 11 : Migration 결과 확인 및 복제 현황 조회&lt;/h3&gt;

&lt;p&gt;Monitor replication lag 단계는 SOURCE DB 로 부터 데이터를 Export 하여 TARGET DB 로 import 를 완료 후 GoldenGate 에 복제 프로세스를 구성하여 복제를 수행 중이어서 SOURCE DB 의 변경이 있어도 실시간으로 TARGET DB 로 반영이 되고 있는 단계로 보면 됩니다. 이 단계에서는 Migration 이 제대로 이루어 졌는지 결과를 확인하고 GoldenGate 의 프로세스 조회를 통해 복제 현황을 살펴보게 됩니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;먼저 TARGET DB 에 SOURCE DB 의 데이터가 Migration 이 잘 되어 있는지 확인합니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SOURCE DB의 PDB 에 있는 SRC_OCIGGLL 스키마의 데이터를 복제했기 때문에 해당 PDB 에 접속하여 스키마의 테이블들의 데이터 건수를 아래의 SQL 쿼리를 실행하여 비교합니다.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  $ sqlplus / as sysdba
  SQL&amp;gt; ALTER SESSION SET CONTAINER=PDB1;
  SQL&amp;gt; SELECT COUNT(*) FROM SRC_OCIGGLL.SRC_CITY;
  SQL&amp;gt; SELECT COUNT(*) FROM SRC_OCIGGLL.SRC_REGION;
  SQL&amp;gt; SELECT COUNT(*) FROM SRC_OCIGGLL.SRC_PRODUCT;
  SQL&amp;gt; SELECT COUNT(*) FROM SRC_OCIGGLL.SRC_CUSTOMER;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;아래 화면과 같이 SOURCE DB(좌측)와 TARGET DB(우측) 의 데이터 건수가 동일하게 일치하는 것을 확인할 수 있습니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/88.oci-migration-migration-result.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;데이터의 실시간 복제를 담당하는 GoldenGate 서버가 잘 구동하고 있는지 확인하기 위해 GoldenGate Admin 화면으로 접근합니다. 브라우저에 GoldenGate 서버의 Public IP 를 입력하고 앞서 GoldenGate 서버 host 내 ogg-credentials.json 파일에서 확보한 사용자와 password 를 입력 후 사인인 버튼을 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/89.oci-migration-goldengate-admin-login.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;배치 목록들 중에서 “성능 측정항목 서비스” 의 포트를 클릭하여 성능 측정항목 서비스로 접근합니다. 팝업 윈도우로 로그인 다이얼로그가 나타나며 앞에서 동일하게 oggadmin 사용자와 password 를 입력하여 로그인합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/90.oci-migration-goldengate-admin-deployment.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;성능 측정항목 서비스에 로그인하면 상단 탭 메뉴 중에서 “관리 서비스” 탭 메뉴를 클릭하면 현재 동작 중인 추출(Extract) 프로세스와 복제(Replicat) 프로세스가 DMS 서비스에 의해 자동 구성되어 동작 중인 것을 확인할 수 있습니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/91.oci-migration-goldengate-admin-performance-svc.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다시 상단 탭 메뉴 중에서 “성능 측정항목 서비스” 탭 메뉴를 클릭하면 현재 동작 중인 추출(Extract) 프로세스와 복제(Replicat) 프로세스들의 목록이 타일 메뉴 형태로 나타나며 “Extract 실행 중” 이라는 타일을 선택합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/92.oci-migration-goldengate-admin-performance-svc-2.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;중간 탭 메뉴 중에서 “데이터베이스 통계” 탭 메뉴를 클릭하고 맨 아래 부분으로 스크롤 다운합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/93.oci-migration-goldengate-admin-performance-svc-database-stastistic-1.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;추출 프로세스가 처리한 테이블과 처리 건수 현황을 나타내게 됩니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/94.oci-migration-goldengate-admin-performance-svc-database-stastistic-2.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SQL Developer 를 통해 SOURCE DB 에 SRC_OCIGGLL 사용자로 PDB 에 접속하여 SQL 실행창에 아래의 Insert 쿼리를 복사 후 붙여넣기를 한 후 SCRIPT 를 실행합니다. (※ INSERT, UPDATE, DELETE 등의 SOURCE DB 변경 후 COMMIT 문 반드시 실행)&lt;/p&gt;

    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    
  &lt;span class=&quot;k&quot;&gt;Insert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SRC_OCIGGLL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRC_REGION&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;REGION_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;REGION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COUNTRY_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COUNTRY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;Central Korea&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;Korea&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;Insert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SRC_OCIGGLL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRC_REGION&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;REGION_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;REGION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COUNTRY_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COUNTRY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;EastSouth Korea&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;Korea&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;Insert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SRC_OCIGGLL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRC_CITY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CITY_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;REGION_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POPULATION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;Seoul&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1992823&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;Insert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SRC_OCIGGLL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRC_CITY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CITY_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;REGION_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POPULATION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;Pusan&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1725821&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/95.oci-migration-sqldeveloper-1.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이전에 열어 놓은 “성능 측정항목 서비스” 의 데이터베이스 통계 부분에서 SOURCE DB  에 변경한 데이터가 추출되어 복제 처리한 건수가 표시됩니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/96.oci-migration-performance-svc-table-statistics.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SOURCE DB 에 대한 변경 내용이 TARGET DB 에 제대로 반영이 되었는지 데이터 건수를 비교하여 확인합니다. 아래 화면처럼 건수가 동일하여 추출 및 복제가 제대로 잘 수행되고 있는 것을 알 수 있습니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/97.oci-migration-performance-svc-replication-result.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-12--switchover-및-cleanup&quot;&gt;STEP 12 : Switchover 및 Cleanup&lt;/h3&gt;

&lt;p&gt;마이그레이션을 완료하고 TARGET DB 쪽으로 Application 전환이 준비되었다면 Switchover 를 수행하여 마이그레이션을 완료합니다. Job 을 Resume 시키면 Switchover 및 마이그레이션 정리 작업을 수행하게 됩니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;OCI Console 의 Migration Job 화면으로 돌아가 Job 의 Resume 버튼을 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/98.oci-migration-job-resume.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/99.oci-migration-job-resume-2.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/100.oci-migration-job-switchover.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Switchover 를 수행하면 GoldenGate 의 Replication 이 멈추게 됨으로써 Switchover 가 완료됩니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/101.oci-migration-goldengate-switchover.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이 상태는 Application 이 TARGET DB 쪽으로 전환된 상태 및 GoldenGate 의 복제가 멈춰있는 상태이기 때문에 SOURCE DB 에 데이터가 추가되어도 TARGET DB 쪽으로 반영되지 않습니다. 아래 쿼리를 SOURCE DB 의 PDB 에 실행하여 신규 데이터를 입력합니다.&lt;/p&gt;

    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SESSION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTAINER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;PDB1&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;Insert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SRC_OCIGGLL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRC_REGION&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;REGION_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;REGION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COUNTRY_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COUNTRY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1002&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;WestSouth Korea&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;Korea&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/102.oci-migration-goldengate-switchover-check.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SOURCE DB 와 TARGET DB 의 건수를 비교하면 SOURCE DB 에 방금 전 생성한 데이터가 TARGET DB 에 반영되지 않는 것을 확인할 수 있습니다.&lt;/p&gt;

    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SRC_OCIGGLL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SRC_REGION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/103.oci-migration-goldengate-switchover-check-2.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;마지막으로 Cleanup 을 수행해서 마이그레이션을 마무리합니다. Migration Job 화면으로 돌아가 Job 의 Resume 버튼을 클릭합니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/104.oci-migration-migration-job-resume-cleanup.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/105.oci-migration-migration-job-resume-cleanup-2.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Migration Job 의 Cleanup 단계가 마무리되면 아래와 같이 Job 의 상태가 SUCCEEDED 상태로 전환이 됩니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/106.oci-migration-migration-job-resume-cleanup-3.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cleanup 을 통해 GoldenGate 의 추출, 복제 프로세스가 정리가 되었는지 확인합니다. GoldenGate 서비스의 “성능 측정항목 서비스” 의 관리 서비스 탭을 선택하면 아래와 같이 추출, 복제 프로세스가 모두 정리된 것을 확인할 수 있습니다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/dataplatform/2022/migration/107.oci-migration-migration-job-resume-cleanup-4.png&quot; alt=&quot;REG DB&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;축하합니다. 이로써 마이그레이션 작업이 모두 완료가 되었습니다. 이렇듯 On-Premise, Clooud 상의 오라클 데이터베이스를 OCI 로 이전할 때 손쉽게 무료로 사용할 수 있는 서비스가 OCI Database Migration 서비스입니다.&lt;/p&gt;

&lt;hr /&gt;

</content>

			
				<category term="dataplatform" />
			
			
				<category term="oci" />
			
				<category term="oracle" />
			
				<category term="migration" />
			
				<category term="zerodowntime" />
			
				<category term="goldengate" />
			
				<category term="dbcs" />
			
				<category term="replication" />
			

			<published>2022-12-20T00:00:00+09:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//infrastructure/oci-networking-drg/</id>
			<title>Dynamic Routing Gateway(DRG) and Transit Routing inside a hub VCN</title>
			<link href="http://localhost:4000//infrastructure/oci-networking-drg/" rel="alternate" type="text/html" title="Dynamic Routing Gateway(DRG) and Transit Routing inside a hub VCN" />
			<updated>2022-12-16T00:00:00+09:00</updated>

			
				
				<author>
					
						<name>DanKim</name>
					
					
					
						<uri>http://github.com/mangdan</uri>
					
				</author>
			
			<summary>OCI Networking의 Dynamic Routing Gateway(DRG)와 Transit Routing 구성을 위한 Route Table들에 대해서 설명합니다.</summary>
			<content type="html" xml:base="http://localhost:4000//infrastructure/oci-networking-drg/">&lt;div class=&quot;panel radius&quot;&gt;
  &lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#이-글을-읽기전에&quot; id=&quot;markdown-toc-이-글을-읽기전에&quot;&gt;이 글을 읽기전에&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#dynamic-routing-gateway-drg&quot; id=&quot;markdown-toc-dynamic-routing-gateway-drg&quot;&gt;Dynamic Routing Gateway (DRG)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#transit-routing&quot; id=&quot;markdown-toc-transit-routing&quot;&gt;Transit Routing&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#subnet-route-table-drg-route-table-and-vcn-route-table&quot; id=&quot;markdown-toc-subnet-route-table-drg-route-table-and-vcn-route-table&quot;&gt;Subnet Route Table, DRG Route Table and VCN Route Table&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#remote-peering-connectionrpc-attachment로-다른-리전의-vcn과-연결&quot; id=&quot;markdown-toc-remote-peering-connectionrpc-attachment로-다른-리전의-vcn과-연결&quot;&gt;Remote Peering Connection(RPC) Attachment로 다른 리전의 VCN과 연결&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#import-route-distribution&quot; id=&quot;markdown-toc-import-route-distribution&quot;&gt;Import Route Distribution&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#import-route-distribution-사용-시-주의할-점&quot; id=&quot;markdown-toc-import-route-distribution-사용-시-주의할-점&quot;&gt;Import Route Distribution 사용 시 주의할 점&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#요약&quot; id=&quot;markdown-toc-요약&quot;&gt;요약&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h3 id=&quot;이-글을-읽기전에&quot;&gt;이 글을 읽기전에&lt;/h3&gt;
&lt;p&gt;이 글을 읽기 전에 OCI Networking과 관련된 용어나 기본 구성에 대한 이해를 위해서 아래 포스팅을 미리 읽어보는 것을 추천드립니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://the-team-oasis.github.io/getting-started/key-concepts/&quot;&gt;OCI 주요 컨셉 및 용어 정리&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://the-team-oasis.github.io/getting-started/create-vcn/&quot;&gt;OCI에서 VCN Wizard를 활용하여 빠르게 VCN 생성하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://the-team-oasis.github.io/infrastructure/oci-local-peering/&quot;&gt;OCI Local Peering - 동일 리전에서 서로 다른 VCN간 연결하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://the-team-oasis.github.io/infrastructure/oci-remote-peering/&quot;&gt;OCI Remote Peering - 서로 다른 리전간의 VCN 연결하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dynamic-routing-gateway-drg&quot;&gt;Dynamic Routing Gateway (DRG)&lt;/h3&gt;
&lt;p&gt;Dynamic Routing Gateway (이하 DRG)는 OCI의 특정 VCN에서 동일 리전의 VCN이나 다른 리전의 VCN, 혹은 온프레미스 네트워크와의 연결을 지원하기 위한 가상 라우터입니다.&lt;/p&gt;

&lt;p&gt;DRG에 연결할 수 있는 유형에는 VCN(Virtual Cloud Network), IPSec Tunnel, FastConnect(전용선 서비스), RPC(Remote Peering Connection)가 있는데, 각 유형별로 Attachment라는 오브젝트를 생성하여 DRG에 붙일 수 있습니다. 예를 들면 특정 VCN을 DRG를 통해 연결하고자 한다면 VCN Attachment를 생성하여 연결하고, IPSec Tunnel을 DRG를 통해 연결하고자 한다면 IPSec Tunnel Attachment를 생성하여 연결할 수 있습니다. DRG에  연결된 각 Attachment는 기본적으로 서로 통신이 가능한 상태가 됩니다. 여기에 각 Attachment에는 DRG를 위한 Route Table을 구성할 수 있습니다. 이 DRG Route Table은 DRG내에 연결된 다른 Attachment로 이동할 수 있는 경로 규칙을 정의할 수 있습니다. 예를 들면 아래 그림에서 트래픽이 VCN A를 나와 IPSec Tunnel(온프렘)으로 이동한다고 가정했을 때, VCN A는 VCN A Attachment를 통해서 DRG로 들어오고, DRG Route Table의 규칙을 통해서 IPSec Attachment로 이동할 수 있게 구성할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/infrastructure/2022/oci-networking-drg-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;transit-routing&quot;&gt;Transit Routing&lt;/h3&gt;
&lt;p&gt;Transit Routing은 중개자 역할을 하는 VCN(보통 Hub VCN이라 부름)을 통해서 다른 VCN(보통 Spoke VCN이라 부름)이나 온프레미스 네트워크로 트래픽을 라우팅하는 개념입니다. 일반적으로 부서별로 각각 자체 VCN을 가지는 큰 조직이 있을 수 있고, 온프레미스 네트워크에서 각 부서의 VCN, 즉 Spoke VCN에 액세스를 할 수 있어야 합니다. 이때 각 Spoke VCN에서 보안과 관련된 부분도 직접 관리할 수 있겠지만, 보안을 담당하는 부서가 따로 있는 경우라면 중앙에서 직접 관리 및 통제하기를 원할 수 있는데 이럴 때 구성하는 방식이 Transit Routing입니다. 여기서 중앙에서 보안을 관리하는 부분을 Hub VCN에서 담당하게 됩니다. 이러한 Transit Routing 구성을 위해 가장 중요하게 사용되는 요소가 바로 DRG입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/infrastructure/2022/oci-networking-drg-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위 그림은 OCI에서 Transit Routing을 구성한 예시입니다. 이 그림에서 &lt;strong&gt;VCN H(172.16.0.0/16)&lt;/strong&gt;가 Hub 역할을 담당하고 보안부서에서 관리한다고 설정해 보겠습니다. 그리고 &lt;strong&gt;VCN S(172.17.0.0/16)&lt;/strong&gt;은 Spoke VCN으로 특정 서비스 개발 부서가 관리한다고 설정하고, 온프레미스 네트워크는 &lt;strong&gt;10.0.0.0/16&lt;/strong&gt; CIDR 블록을 가지고 IPSec VPN Tunnel을 통해 연결하는 것으로 설정합니다. &lt;strong&gt;VCN H&lt;/strong&gt;에서는 보안을 위해 &lt;strong&gt;Network Firewall&lt;/strong&gt;을 구성하고, 온프레미스와 모든 VCN(Hub와 Spoke)간 통신은 이 &lt;strong&gt;Network Firewall&lt;/strong&gt;을 거치도록 구성하여 트래픽을 모니터링하고, 위험을 감지/차단할 수 있도록 설정합니다.&lt;/p&gt;

&lt;p&gt;이러한 구성을 위해 여러 개의 VCN과 온프레미스 네트워크와 연결을 해야 하므로 DRG가 필요하고, 여기에 VCN H Attachment와 VCN S Attachment, IPSec Tunnel Attachment가 포함되어야 합니다. VCN Attachment는 VCN 상세 화면에서 생성이 가능하며, IPSec Tunnel Attachment는 IPSec VPN Connection을 OCI에서 구성하면 자동으로 해당 DRG에 Attachment를 생성합니다. 마찬가지로 다른 리전의 VCN을 연결하기 위해 RPC(Remote Peering Connection)를 생성하면 자동으로 DRG에 RPC Attachment가 생성됩니다. 아래는 VCN Attachment를 생성하는 화면입니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;VCN Attachment 생성 화면&lt;/strong&gt;
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-networking-drg-4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;IPSec Tunnel Attachment를 구성하기 위해서는 사전에 온프레미스 CPE와 IPSec Connection을 구성해야 하는데, 이 부분은 미리 구성되어 있다고 가정하겠습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이 구성에서 나올 수 있는 경로는 다음과 같습니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ON-PREMISE -&amp;gt; VCN H Network Firewall -&amp;gt; VCN H Subnet&lt;/li&gt;
  &lt;li&gt;ON-PREMISE -&amp;gt; VCN H Network Firewall -&amp;gt; VCN S Subnet&lt;/li&gt;
  &lt;li&gt;VCN S Subnet -&amp;gt; VCN H Network Firewall -&amp;gt; ON-PREMISE&lt;/li&gt;
  &lt;li&gt;VCN S Subnet -&amp;gt; VCN H Network Firewall -&amp;gt; VCN H Subnet&lt;/li&gt;
  &lt;li&gt;VCN H Subnet -&amp;gt; VCN H Network Firewall -&amp;gt; ON-PREMISE&lt;/li&gt;
  &lt;li&gt;VCN H Subnet -&amp;gt; VCN H Network Firewall -&amp;gt; VCN S Subnet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위 경로를 만들기 위해서는 앞서 얘기한 DRG로 들어오는 트래픽의 경로를 정의하는 &lt;strong&gt;DRG Route Table&lt;/strong&gt;과 VCN으로 들어오는 경로를 정의하는 &lt;strong&gt;VCN Route Table&lt;/strong&gt;, 서브넷에서 나가는 경로를 정의하는 &lt;strong&gt;Subnet Route Table&lt;/strong&gt;에 대해서 이해해야 합니다.&lt;/p&gt;

&lt;h4 id=&quot;subnet-route-table-drg-route-table-and-vcn-route-table&quot;&gt;Subnet Route Table, DRG Route Table and VCN Route Table&lt;/h4&gt;
&lt;p&gt;Subnet Route Table에서는 Subnet에서 나가는 트래픽의 경로 규칙을 정의합니다. DRG Route Table은 일반적으로 VCN 내의 Subnet에서 다른 네트워크로 이동하기 위해 DRG로 들어가는 경우 관여합니다. 보통 다른 네트워크로 이동하기 위해 Subnet의 Route Table Target으로 DRG를 지정하게 되는데 이때 관여하게 됩니다. 만약에 DRG를 거친 이후 다시 특정 VCN으로 들어가 해당 VCN 내의 특정 Target을 거쳐야 하는 경우가 있을 수 있습니다. 위 시나리오처럼 특정 VCN 내에 Network Firewall이 있고, 모든 트래픽은 이 Firewall을 거치도록 네트워크를 구성해야 하는 경우라고 할 수 있습니다. 이렇게 VCN으로 들어오는(Ingress) 트래픽의 경로 규칙을 정의하는 곳이 VCN Route Table 입니다. Subent Route Table은 VCN 에서 생성하여 Subent에 적용합니다. DRG Route Table은 DRG에서 생성 및 관리하며, VCN Route Table은 VCN에서 생성하여 관리하지만, 둘 모두 관련된 Attachment(일반적으로 VCN Route Table은 VCN Attachment에 설정)에 설정을 하게 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;VCN Route Table 생성 화면&lt;/strong&gt;&lt;br /&gt;
VCN Route Table은 VCN으로 들어오는 트래픽의 경로를 정의하는데, VCN에서 관리하는 Route Table로 생성합니다. 
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-networking-drg-5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DRG Route Table 생성 화면&lt;/strong&gt; &lt;br /&gt;
DRG Route Table은 DRG에서 관리하는 Route Table로 DRG 상세화면에서 생성할 수 있습니다. 다음과 같이 생성할 수 있습니다.
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-networking-drg-6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;생성한 VCN Route Table과 DRG Route Table은 VCN Attachment에 다음과 같이 설정할 수 있습니다.&lt;br /&gt;
&lt;strong&gt;DRG Route Table을 VCN Attachment에 설정&lt;/strong&gt;
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-networking-drg-7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;VCN Route Table을 VCN Attachment에 설정&lt;/strong&gt;
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-networking-drg-8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이제 이 구성에서 나올 수 있는 경로에 DRG, Subent Route Table, DRG Route Table, VCN Route Table을 붙여보겠습니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ON-PREMISE&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; DRG&lt;mark&gt;(DRG Route Table)&lt;/mark&gt; -&amp;gt; VCN H Attachment &lt;mark&gt;(VCN Route Table)&lt;/mark&gt; -&amp;gt; VCN H Network Firewall&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; VCN H Subnet&lt;/li&gt;
  &lt;li&gt;ON-PREMISE&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; DRG&lt;mark&gt;(DRG Route Table)&lt;/mark&gt; -&amp;gt; VCN H Attachment&lt;mark&gt;(VCN Route Table)&lt;/mark&gt; -&amp;gt; VCN H Network Firewall&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; VCN S Subnet&lt;/li&gt;
  &lt;li&gt;VCN S Subnet&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; VCN H Attachment&lt;mark&gt;(VCN Route Table)&lt;/mark&gt; -&amp;gt; VCN H Network Firewall&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; ON-PREMISE&lt;/li&gt;
  &lt;li&gt;VCN S Subnet&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; VCN H Attachment&lt;mark&gt;(VCN Route Table)&lt;/mark&gt; -&amp;gt; VCN H Network Firewall&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; VCN H Subnet&lt;/li&gt;
  &lt;li&gt;VCN H Subnet&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; VCN H Attachment&lt;mark&gt;(VCN Route Table)&lt;/mark&gt; -&amp;gt; VCN H Network Firewall&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; ON-PREMISE&lt;/li&gt;
  &lt;li&gt;VCN H Subnet&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; VCN H Attachment&lt;mark&gt;(VCN Route Table)&lt;/mark&gt; -&amp;gt; VCN H Network Firewall&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; VCN S Subnet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;다음은 위 경로를 포함한 그림입니다.
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-networking-drg-9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그림을 보면 VCN H내의 Network Firewall을 Target으로 구성해야 하므로, VCN으로 들어오는 경로 규칙을 갖는 VCN Route Table은 VCN H에만 있는 것을 알 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;remote-peering-connectionrpc-attachment로-다른-리전의-vcn과-연결&quot;&gt;Remote Peering Connection(RPC) Attachment로 다른 리전의 VCN과 연결&lt;/h3&gt;
&lt;p&gt;다른 리전(e.g. Tokyo)의 VCN과 연결하기 위해서는 DRG가 두 리전에 모두 존재하여야 하며, RPC로 연결되어야 합니다. RPC로 연결되면 기본적으로 RPC Attachment가 양 리전에 자동으로 생성됩니다. 이제 DRG Route Table에서 RPC Attachment로의 경로 규칙을 추가해 주고, 다른 리전의 DRG Route Table에도 동일하게 RPC Attachment로의 경로 규칙을 추가해 줍니다. 그리고 각 서브넷에 목적지로 다른 리전을 추가해 줍니다. 마지막으로 VCH H의 VCN Route Table에는 다른 리전으로 가능 경우도 동일하게 Network Firewall을 거치도록 구성해 줍니다.&lt;/p&gt;

&lt;p&gt;이 구성에서는 다음과 같은 경로가 추가될 수 있습니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Seoul VCN H&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; Seoul Network Firewall&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; Seoul DRG&lt;mark&gt;(DRG Route Table)&lt;/mark&gt; -&amp;gt; Seoul RPC Attachment -&amp;gt; Tokyo DRG&lt;mark&gt;(DRG Route Table)&lt;/mark&gt; -&amp;gt; Tokyo VCN S -&amp;gt; Tokyo VCN S Attachment -&amp;gt; Tokyo VCN S Subnet&lt;/li&gt;
  &lt;li&gt;Tokyo VCN S&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; Tokyo DRG&lt;mark&gt;(DRG Route Table)&lt;/mark&gt; -&amp;gt; Tokyo RPC Attachment -&amp;gt; Seoul DRG&lt;mark&gt;(DRG Route Table)&lt;/mark&gt; -&amp;gt; Seoul VCN H Attachment&lt;mark&gt;(VCN Route Table)&lt;/mark&gt; -&amp;gt; Seoul Network Firewall&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; Seoul VCN H Subnet&lt;/li&gt;
  &lt;li&gt;Tokyo VCN S&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; Tokyo DRG&lt;mark&gt;(DRG Route Table)&lt;/mark&gt; -&amp;gt; Tokyo RPC Attachment -&amp;gt; Seoul DRG&lt;mark&gt;(DRG Route Table)&lt;/mark&gt; -&amp;gt; Seoul VCN H Attachment&lt;mark&gt;(VCN Route Table)&lt;/mark&gt; -&amp;gt; Seoul Network Firewall&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; Seoul DRG&lt;mark&gt;(DRG Route Table)&lt;/mark&gt; -&amp;gt; IPSec Tunnel Attachment -&amp;gt; ON-PREMISE&lt;/li&gt;
  &lt;li&gt;ON-PREMISE -&amp;gt; Seoul DRG&lt;mark&gt;(DRG Route Table)&lt;/mark&gt; -&amp;gt; Seoul VCN H Attachment&lt;mark&gt;(VCN Route Table)&lt;/mark&gt; -&amp;gt; Seoul Network Firewall&lt;mark&gt;(Subnet Route Table)&lt;/mark&gt; -&amp;gt; Seoul DRG&lt;mark&gt;(DRG Route Table)&lt;/mark&gt; -&amp;gt; Seoul RPC Attachment -&amp;gt; Tokyo DRG&lt;mark&gt;(DRG Route Table)&lt;/mark&gt; -&amp;gt; Tokyo VCN S Attachment -&amp;gt;  Tokyo VCN Subnet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;다른 리전과 연결되는 구성도에 경로를 포함한 그림입니다.
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-networking-drg-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;import-route-distribution&quot;&gt;Import Route Distribution&lt;/h3&gt;
&lt;p&gt;지금까지 DRG와 관련된 Route Table에 대해서 알아보았습니다. 이 중에서 DRG Route Table은 DRG 내의 여러 Attachment로 이동하는 경로를 정의합니다. DRG Route Table은 네트워크 구성이 VCN 한두 개 연결하는 구성이라면 간단히 직접 경로 규칙을 추가하여 구성할 수도 있습니다. 하지만 연결되는 Spoke VCN이 점점 많아지거나, 다른 리전에서의 서비스가 늘어나 점점 여러 다른 리전이 계속 추가되는 상황이라면, 당연히 관리해야 하는 DRG Route Table도 늘어날 것이고, 경로 규칙 또한 많아져 관리하기 매우 어려워질 수 있습니다. 자칫 이 부분을 잘 못 구성하여 엉뚱하게 경로를 탈 수 있고, 잘 못된 부분을 찾기도 매우 어려울 수 있습니다.&lt;/p&gt;

&lt;p&gt;이러한 문제를 해결하기 위해서 앞서 직접 추가해주는 규칙 외에도 동적으로 DRG Attachment에 엮여 있는 네트워크의 환경을 참고하여 자동으로 DRG Route Table에 경로 규칙을 가져와(Import) 구성해 줄 수 있는데, 이것이 Import Route Distribution입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/infrastructure/2022/oci-networking-drg-11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Import Route Distribution을 구성할 때에는 기본적으로 어느 Attachment까지의 정보를 참조할지 범위를 지정해 주게 됩니다. Attachment를 지정할 때는 Priority, Match Type, Attachment를 선택할 수 있습니다. Match Type 유형에는 다음과 같은 항목이 있습니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Attachment Type: Attachment 유형만 지정합니다. (e.g. VCN, IPSec, Virtual Circuit, RPC)&lt;/li&gt;
  &lt;li&gt;Attachment: Attachment를 직접 지정합니다. (e.g. Hub A Attachment, Hub B Attachment, RPC-1 Attachment)&lt;/li&gt;
  &lt;li&gt;Match All: DRG에 있는 모든 Attachment를 포함합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Import Route Distribution 생성 화면&lt;/strong&gt;
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-networking-drg-12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Import Route Distribution은 DRG에 생성한 후 다음과 같이 DRG Route Table에 적용합니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/infrastructure/2022/oci-networking-drg-13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Import Route Distribution을 통해서 가져온 경로 규칙은 자동으로 DRG Route Table에 추가됩니다. 추가된 경로 규칙은 DRG Route Table 상세화면의 &lt;strong&gt;모든 경로 규칙 가져오기(Get All Route Rules)&lt;/strong&gt; 버튼을 클릭하여 확인할 수 있으며 Import Route Distribution으로 추가된 규칙은 유형이 &lt;strong&gt;Dynamic(사용자가 직접 추가한 경우에는 Static이라고 표기됨)&lt;/strong&gt;으로 표기됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/infrastructure/2022/oci-networking-drg-14.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/assets/img/infrastructure/2022/oci-networking-drg-15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;import-route-distribution-사용-시-주의할-점&quot;&gt;Import Route Distribution 사용 시 주의할 점&lt;/h3&gt;
&lt;p&gt;Import Route Distribution은 자동으로 DRG에 연결된 Attachment로부터 각 네트워크에 대한 경로를 자동으로 구성해 준다는 점에서 매우 좋은 기능이지만, 잘못 사용하면 원하지 않는 경로가 추가될 수도 있기 때문에 주의해서 사용해야 합니다. 예를 들면 Seoul VCN S에서 ON-PREMISE로 가야 하는 경우가 있습니다. 이때 Seoul VCN S Attachment에 있는 DRG Route Table에 Import Route Distribution을 사용하고 있고, Import Route Distribution Statement에 IPSec이 포함되어 있을 수 있습니다. 이렇게 되면 VCN S는 원래 의도했던 Seoul VCN H의 Network Firewall로 이동하지 않고 바로 IPSec Tunnel Attachment를 통해서 ON-PREMISE로 이동해 버립니다. 물론 이 경우에는 Import Route Distribution Statement에 IPSec을 제외하면 해결되겠지만,  Import Route Distribution을 어쩔 수 없이 사용해야 하고, 또 특정 Attachment를 꼭 포함해야 하는 상황도 있을 수 있습니다. Dynamic 경로 규칙은 Import Route Distribution Statement에서 제외하지 않는 한 제거가 불가능하므로, 이런 경우에는 직접 Static 경로를 추가하여 해결할 수 있습니다. Static 경로는 Dynamic 경로보다 우선하여 동작하며, 목적지가 충돌 나서 우선순위에 밀린 경로는 그림처럼 &lt;strong&gt;Conflict&lt;/strong&gt;로 표기됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/infrastructure/2022/oci-networking-drg-16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;요약&quot;&gt;요약&lt;/h3&gt;
&lt;p&gt;지금까지 DRG와 Transit Routing 구성을 위한 Route Table 들에 대해서 알아보았습니다. OCI에서는 이러한 복잡한 네트워크 구성을 위해서 DRG와 관련 Route Table에 대해서 잘 이해하고 있어야 합니다. 요약하면 DRG Route Table은 DRG 내의 Attachment 이동을 위한 경로 규칙이 포함될 수 있습니다. VCN Route Table은 VCN Attachment를 통해서 VCN으로 들어가는 경로 규칙이 포함됩니다. 보통 Hub VCN에 Network Firewall과 같은 특정 타겟을 지정하는 경우에 사용됩니다. Import Route Distribution은 DRG Route Table 구성을 동적으로 구성하도록 도와줍니다. 이 기능은 자동화라는 장점이 있지만, 세세한 제어가 어렵기 때문에 예상하지 못한 경로가 포함될 수 있으며, 이런 부분을 Static 규칙을 포함하거나, 적절하게 Import Route Distribution Statement를 구성하여 해결할 수 있습니다.&lt;/p&gt;
</content>

			
				<category term="infrastructure" />
			
			
				<category term="oci" />
			
				<category term="networking" />
			
				<category term="dynamic routing gateway" />
			
				<category term="drg" />
			

			<published>2022-12-16T00:00:00+09:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//cloudnative/oci-certificate-import-letsencrypt-cert/</id>
			<title>OCI Certificates - Let’s Encrypt로 생성한 인증서를 OCI 인증서 서비스에 Import 하기</title>
			<link href="http://localhost:4000//cloudnative/oci-certificate-import-letsencrypt-cert/" rel="alternate" type="text/html" title="OCI Certificates - Let’s Encrypt로 생성한 인증서를 OCI 인증서 서비스에 Import 하기" />
			<updated>2022-12-02T00:00:00+09:00</updated>

			
				
				<author>
					
						<name>Young Hwan</name>
					
					
					
				</author>
			
			<summary>무료로 SSL 인증서 생성이 가능한 Let&apos;s Encrypt를 활용하여 인증서를 생성하고 OCI 인증서 서비스에 Import하는 방법을 알아봅니다.</summary>
			<content type="html" xml:base="http://localhost:4000//cloudnative/oci-certificate-import-letsencrypt-cert/">&lt;div class=&quot;panel radius&quot;&gt;
  &lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#oci-certificates-소개&quot; id=&quot;markdown-toc-oci-certificates-소개&quot;&gt;OCI Certificates 소개&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#lets-encrypt-서비스란&quot; id=&quot;markdown-toc-lets-encrypt-서비스란&quot;&gt;Let’s Encrypt 서비스란?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#lets-encrypt-인증서-발급-실습-안내&quot; id=&quot;markdown-toc-lets-encrypt-인증서-발급-실습-안내&quot;&gt;Let’s Encrypt 인증서 발급 실습 안내&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#사전-준비-사항&quot; id=&quot;markdown-toc-사전-준비-사항&quot;&gt;사전 준비 사항&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#실습-순서&quot; id=&quot;markdown-toc-실습-순서&quot;&gt;실습 순서&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#1-도메인-구입&quot; id=&quot;markdown-toc-1-도메인-구입&quot;&gt;1. 도메인 구입&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-oci-dns-영역을-생성하고-도메인의-dns-서버로-설정&quot; id=&quot;markdown-toc-2-oci-dns-영역을-생성하고-도메인의-dns-서버로-설정&quot;&gt;2. OCI DNS 영역을 생성하고 도메인의 DNS 서버로 설정&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-oci-cli-설정-compute-instance-사용&quot; id=&quot;markdown-toc-3-oci-cli-설정-compute-instance-사용&quot;&gt;3. OCI CLI 설정 (Compute Instance 사용)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#4-certbot-패키지-설치&quot; id=&quot;markdown-toc-4-certbot-패키지-설치&quot;&gt;4. Certbot 패키지 설치&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#5-certbot-dns-oci-플러그인-설치&quot; id=&quot;markdown-toc-5-certbot-dns-oci-플러그인-설치&quot;&gt;5. certbot-dns-oci 플러그인 설치&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#6-certbot을-실행하여-인증서-획득&quot; id=&quot;markdown-toc-6-certbot을-실행하여-인증서-획득&quot;&gt;6. certbot을 실행하여 인증서 획득&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#7-oci-인증서-서비스에-인증서-등록&quot; id=&quot;markdown-toc-7-oci-인증서-서비스에-인증서-등록&quot;&gt;7. OCI 인증서 서비스에 인증서 등록&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#마무리-하며&quot; id=&quot;markdown-toc-마무리-하며&quot;&gt;마무리 하며…&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#참고-자료&quot; id=&quot;markdown-toc-참고-자료&quot;&gt;참고 자료&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#references&quot; id=&quot;markdown-toc-references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#oracle-공식-문서&quot; id=&quot;markdown-toc-oracle-공식-문서&quot;&gt;Oracle 공식 문서&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#인증서-서비스관련-포스팅&quot; id=&quot;markdown-toc-인증서-서비스관련-포스팅&quot;&gt;인증서 서비스관련 포스팅&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h3 id=&quot;oci-certificates-소개&quot;&gt;OCI Certificates 소개&lt;/h3&gt;
&lt;p&gt;OCI Certificates 서비스를 처음 접하시거나 자세한 내용이 궁금하신 경우 아래 포스팅을 통해 서비스 내용을 확인해보세요.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;/cloudnative/oci-certificate-overview/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OCI Certificates 서비스 살펴보기&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;lets-encrypt-서비스란&quot;&gt;Let’s Encrypt 서비스란?&lt;/h3&gt;
&lt;p&gt;Let’s Encrypt는 공공의 이익을 위해 ISRG(Internet Security Research Group)에서 제공하는 무료, 자동화된 개방형 CA 서비스 입니다.
Let’s Encrypt에 대해 더 자세히 알고 싶은 경우 &lt;a href=&quot;https://letsencrypt.org/ko/about/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Let’s Encrypt 소개&lt;/a&gt;페이지를 방문하여 확인해보세요.&lt;/p&gt;

&lt;h3 id=&quot;lets-encrypt-인증서-발급-실습-안내&quot;&gt;Let’s Encrypt 인증서 발급 실습 안내&lt;/h3&gt;
&lt;p&gt;이번 포스팅에서는 Certbot 플러그인을 사용하여 인증서를 발급받는 방법에 대해 소개합니다. Certbot 플러그인을 사용하면 DNS 레코드 작업을 브라우저를 통해 직접할 필요 없이 간편하게 인증서를 발급 받을 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;사전-준비-사항&quot;&gt;사전 준비 사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Public 도메인&lt;/li&gt;
  &lt;li&gt;Oracle Cloud Infrastructure 계정&lt;/li&gt;
  &lt;li&gt;OCI Compute VM (Oracle Linux 8.x)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;실습-순서&quot;&gt;실습 순서&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;도메인 이름 구입/획득&lt;/li&gt;
  &lt;li&gt;OCI를 도메인의 DNS 서버로 설정&lt;/li&gt;
  &lt;li&gt;OCI CLI 설정 (Cloud Shell 사용)&lt;/li&gt;
  &lt;li&gt;Certbot 설치&lt;/li&gt;
  &lt;li&gt;certbot-dns-oci 플러그인 설치&lt;/li&gt;
  &lt;li&gt;certbot을 실행하여 인증서 획득&lt;/li&gt;
  &lt;li&gt;OCI Certificates 서비스에 인증서 등록&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;1-도메인-구입&quot;&gt;1. 도메인 구입&lt;/h4&gt;
&lt;p&gt;실습에 사용할 도메인이 없으신 경우 국내/외 도메인 구매 사이트에서 도메인을 구입하셔야 합니다.
필자의 경우 실습용 도메인이기 때문에 저렴하게 구매하기 위해 가비아에서 도메인을 구입하여 실습을 진행했습니다. (약 3,000원 / 1년) 
도메인 구입이 필요한 경우 &lt;a href=&quot;https://domain.gabia.com/regist/today_domain&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;가비아 도메인&lt;/a&gt; 또는 기타 도메인 공급업체에서 구매합니다.
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-1.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;2-oci-dns-영역을-생성하고-도메인의-dns-서버로-설정&quot;&gt;2. OCI DNS 영역을 생성하고 도메인의 DNS 서버로 설정&lt;/h4&gt;
&lt;p&gt;도메인을 구입했다면 OCI DNS 서비스에 영역(Zone)을 생성하고, 도메인을 구입한 사이트에서 DNS 서버 정보를 OCI DNS 서버로 변경합니다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;전체 메뉴에서 &lt;strong&gt;“네트워킹”&lt;/strong&gt; -&amp;gt; &lt;strong&gt;“DNS관리”&lt;/strong&gt; -&amp;gt; &lt;strong&gt;“영역”&lt;/strong&gt; 메뉴를 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-2.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;“영역생성”&lt;/strong&gt; 버튼을 클릭한 후 구매한 도메인과 동일하게 영역을 생성합니다.
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-3.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;영역생성이 완료된 후 영역상세보기 화면에서 Name Server(이름서버) 정보를 확인합니다.
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-4.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;도메인을 구입한 업체의 홈페이지의 도메인 관리 화면에서 DNS 정보를 변경합니다.
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-4-1.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;변경한 DNS 정보가 적용되었는지 dnschecker를 통해 확인합니다.
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://dnschecker.org//&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://dnschecker.org&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-4-2.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;3-oci-cli-설정-compute-instance-사용&quot;&gt;3. OCI CLI 설정 (Compute Instance 사용)&lt;/h4&gt;
&lt;p&gt;이번 실습에서는 OCI에서 아래와 같은 구성으로 Compute Instance를 생성하여 인증서를 발급 받을 예정입니다. 생성한 VM에서 CLI를 사용할 수 있도록 OCI CLI설정을 진행합니다. 
Compute Instance 생성이나 접속, CLI 설정관련 자세한 내용은 아래 포스팅을 통해 확인하실 수 있으며, 이번 포스팅에서는 자세한 내용을 다루지 않습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/getting-started/ocicli-config/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OCI CLI 도구 살펴보기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;/getting-started/launching-linux-instance/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OCI에서 리눅스 인스턴스 생성 튜토리얼&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Compute Instance 생성정보
    &lt;ul&gt;
      &lt;li&gt;OS : &lt;strong&gt;Oracle-Linux-Cloud-Developer 8.0&lt;/strong&gt; (※ 아래 이미지 참고)&lt;/li&gt;
      &lt;li&gt;Shape : &lt;strong&gt;VM.Standard.E4.Flex&lt;/strong&gt; / 1 OCPU, 16GB Memory&lt;/li&gt;
      &lt;li&gt;Network / Subnet : &lt;strong&gt;공용 서브넷&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-20.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;OCI 콘솔의 우측 상단의 프로파일 아이콘을 클릭 후 “내 프로파일” 메뉴를 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-5.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;“API 키”&lt;/strong&gt; 메뉴에서 &lt;strong&gt;“API Key 추가”&lt;/strong&gt; 버튼을 클릭하여 API Key를 등록합니다. (전용키, 공용키 다운로드하여 잘 보관합니다.)
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-6.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;API 키 추가 후 추가된 키의 구성파일을 확인합니다. (복사하기)
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-7.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;OCI 콘솔의 우측 상단 클라우드쉘 버튼을 클릭하여 클라우드쉘을 활성화 합니다.
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-8.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;certbot 실습을 진행할 VM에 접속합니다. &lt;strong&gt;(VM생성 단계에서 적용한 ssh 키파일을 Cloud Shell에 업로드 해야합니다.)&lt;/strong&gt;
    &lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;key_file_path] opc@[public_IP_address]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;홈 디렉토리에서 아래 명령어를 입력하여 디렉토리 &amp;amp; 파일을 생성합니다.
    &lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; ~/.oci
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;vi ~/.oci/oci-api-key.pem
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;vi ~/.oci/oci-api-pub.pem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;oci-api-key.pem, oci-api-pub.pem에 각각 전용키, 공용키 내용을 입력합니다.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;oci-api-key.pem&lt;/strong&gt;
        &lt;div class=&quot;language-config highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-----&lt;span class=&quot;n&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PRIVATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KEY&lt;/span&gt;-----
&lt;span class=&quot;n&quot;&gt;MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCgVVZGDQWv9ljq&lt;/span&gt;
+&lt;span class=&quot;n&quot;&gt;sI5ITtfaBjRn6Ir45OFjGu2O1A&lt;/span&gt;..............
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;oci-api-pub.pem&lt;/strong&gt;
        &lt;div class=&quot;language-config highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-----&lt;span class=&quot;n&quot;&gt;BEGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PUBLIC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KEY&lt;/span&gt;-----
&lt;span class=&quot;n&quot;&gt;MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAoFVWRg0Fr&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;ZY6vrCOSE7&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;X2gY0Z&lt;/span&gt;+&lt;span class=&quot;n&quot;&gt;iK&lt;/span&gt;+&lt;span class=&quot;n&quot;&gt;OThYxrtjtQE7w6vY&lt;/span&gt;..............
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;API 키 화면에서 Action 버튼을 통해 확인했던 구성 정보를 ~/.oci/config 파일로 생성해 줍니다. key_file의 경로는 업로드한 api-key 파일의 위치 및 파일명으로 지정합니다.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd ~/.oci
$ vi config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;div class=&quot;language-config highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[&lt;span class=&quot;n&quot;&gt;DEFAULT&lt;/span&gt;]
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;=&lt;span class=&quot;n&quot;&gt;ocid1&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;oc1&lt;/span&gt;..&lt;span class=&quot;n&quot;&gt;aaaaaaaaeaacd7afudut&lt;/span&gt;..............
&lt;span class=&quot;n&quot;&gt;fingerprint&lt;/span&gt;=&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;:&lt;span class=&quot;n&quot;&gt;fd&lt;/span&gt;:&lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;:&lt;span class=&quot;n&quot;&gt;aa&lt;/span&gt;:&lt;span class=&quot;m&quot;&gt;81&lt;/span&gt;:&lt;span class=&quot;m&quot;&gt;37&lt;/span&gt;:&lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;:..............
&lt;span class=&quot;n&quot;&gt;tenancy&lt;/span&gt;=&lt;span class=&quot;n&quot;&gt;ocid1&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;tenancy&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;oc1&lt;/span&gt;..&lt;span class=&quot;n&quot;&gt;aaaaaaaam3ldu4ndce&lt;/span&gt;..............
&lt;span class=&quot;n&quot;&gt;region&lt;/span&gt;=&lt;span class=&quot;n&quot;&gt;ap&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;seoul&lt;/span&gt;-&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#만약 seoul 리전이 아닌경우 실제 실습할 리전으로 대체합니다.
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_file&lt;/span&gt;=~/.&lt;span class=&quot;n&quot;&gt;oci&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;oci&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;pem&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 실제 저장한 키파일의 위치 및 파일이름으로 지정합니다.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;OCI CLI 설정이 잘 되었는지 확인하기 위해 아래와 같이 tenancy namespace 정보를 조회합니다.
    &lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;oci os ns get
&lt;span class=&quot;go&quot;&gt;results
{
   &quot;data&quot;: &quot;axlpeslmb1ng&quot;
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;4-certbot-패키지-설치&quot;&gt;4. Certbot 패키지 설치&lt;/h4&gt;
&lt;p&gt;클라우드쉘에는 기본적으로 Python3이 설치되어 있기 때문에 별도의 Python 설치 과정없이 바로 Certbot 패키지를 설치할 수 있습니다.
아래 명령어를 이용하여 클라우드쉘에 Certbot 패키지를 설치합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pip3 &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;certbot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;5-certbot-dns-oci-플러그인-설치&quot;&gt;5. certbot-dns-oci 플러그인 설치&lt;/h4&gt;
&lt;p&gt;certbot 프로그램에서 OCI DNS 서비스 접근을 위한 별도의 플러그인 설치가 필요합니다.
아래 명령어를 차례로 입력하여 certbot-dns-oci 플러그인을 설치해주세요. 플러그인 관련하여 자세한 정보가 필요하신 경우 &lt;a href=&quot;https://github.com/therealcmj/certbot-dns-oci&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;플러그인 깃허브 레파지토리&lt;/a&gt; 페이지에서 확인하실 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git clone https://github.com/therealcmj/certbot-dns-oci.git
&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;certbot-dns-oci
&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pip3 &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;6-certbot을-실행하여-인증서-획득&quot;&gt;6. certbot을 실행하여 인증서 획득&lt;/h4&gt;
&lt;p&gt;여기까지 설정이 정상적으로 완료되었다면 이제 마지막으로 아래 certbot 명령어를 입력하여 인증서를 생성합니다.
아래 명령어를 실행하면 cloudshell의 “logs” 디렉토리에 로그를 저장하고 “work”를 작업 디렉토리로 사용하고 “config” 디렉토리에 인증서 및 기타 항목을 저장합니다.
나머지 세가지 옵션과 해당 인수는 certbot에게 챌린지 및 응답에 OCI DNS 플러그인을 사용하고 dns 관련 작업을 검증하기 위한 시간을 120초로 설정, “*.oci-younghwan.xyz”에 대한 인증서 생성을 요청합니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;certbot certonly &lt;span class=&quot;nt&quot;&gt;--logs-dir&lt;/span&gt; logs &lt;span class=&quot;nt&quot;&gt;--work-dir&lt;/span&gt; work &lt;span class=&quot;nt&quot;&gt;--config-dir&lt;/span&gt; config &lt;span class=&quot;nt&quot;&gt;--authenticator&lt;/span&gt; dns-oci &lt;span class=&quot;nt&quot;&gt;--dns-oci-propagation-seconds&lt;/span&gt; 120 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.oci-younghwan.xyz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;위 명령어를 실행하면 아래와 같이 몇 단계 설정을 진행해야 합니다.
    &lt;ol&gt;
      &lt;li&gt;Enter email address (used for urgent renewal and security notices) -&amp;gt; &lt;strong&gt;이메일 주소 입력&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Please read the Terms of Service at https://letsencrypt.org/documents/LE-SA-v1.3-September-21-2022.pdf. You must agree in order to register with the ACME server. Do you agree? -&amp;gt; &lt;strong&gt;“Y” 입력&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Would you be willing, once your first certificate is successfully issued, to share your email address with the Electronic Frontier Foundation, a founding partner of the Let’s Encrypt project and the non-profit organization that develops Certbot? We’d like to send you email about our work encrypting the web, EFF news, campaigns, and ways to support digital freedom. -&amp;gt; &lt;strong&gt;“Y” 입력&lt;/strong&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;설정이 완료되면 아래와 같은 화면을 확인할 수 있습니다.
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-9.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;명령어를 실행한 위치 기준으로 /config/live 경로로 이동하면 아래와 같이 생성된 인증서를 확인할 수 있습니다.
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-10.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;생성된 인증서 파일 설명
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;cert.pem&lt;/strong&gt; : 요청한 도메인에 대한 인증서 파일 (Certificate)&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;chain.pem&lt;/strong&gt; : 인증서 검증을 위한 체인 파일&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;fullchain.pem&lt;/strong&gt; : cert.pem + chain.pem 두 파일을 하나로 합친 파일&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;privkey.pem&lt;/strong&gt; : 생성한 인증서 파일에 대한 개인키 파일&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;7-oci-인증서-서비스에-인증서-등록&quot;&gt;7. OCI 인증서 서비스에 인증서 등록&lt;/h4&gt;
&lt;p&gt;앞서 6번째 단계에서 생성된 인증서를 OCI 인증서 서비스에 등록합니다. 인증서 서비스에 등록할때 필요한 파일은 아래를 참고해주세요&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;cert.pem&lt;/strong&gt; : 요청한 도메인에 대한 인증서 파일 (Certificate)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;chain.pem&lt;/strong&gt; : 인증서 검증을 위한 체인 파일&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;isrgrootx1.txt&lt;/strong&gt; : root_ca Let’s Encrypt의 root ca 파일 &lt;a href=&quot;/assets/files/cloudnative/isrgrootx1.txt&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Root CA 파일 다운로드&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;privkey.pem&lt;/strong&gt; : 생성한 인증서 파일에 대한 개인키 파일
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;전체 메뉴에서 &lt;strong&gt;“ID &amp;amp; 보안”&lt;/strong&gt; -&amp;gt; &lt;strong&gt;“인증서”&lt;/strong&gt; -&amp;gt; &lt;strong&gt;“인증서”&lt;/strong&gt; 메뉴를 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-11.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;“인증서 생성” 버튼을 클릭합니다
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-12.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;인증서 생성화면에서 “임포트됨”을 선택하고 인증서 이름, 설명을 입력합니다. (어떤 도메인에 대한 인증서인지 식별할 수 있는 이름으로 작성합니다.)
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-13.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;주체 정보는 “임포트됨” 유형에서는 해당 없기 때문에 “다음” 버튼을 눌러서 다음단계로 이동합니다.&lt;/li&gt;
  &lt;li&gt;인증서 생성 단계에서는 앞서 생성된 인증서 정보를 입력합니다.
    &lt;ul&gt;
      &lt;li&gt;인증서 : cat 명령어를 통해 cert.pem의 내용을 확인 후 복사 붙여넣기 합니다.&lt;/li&gt;
      &lt;li&gt;인증서 체인 : cat 명령어를 통해 chain.pem의 내용을 확인 후 복사 붙여넣고 바로 다음에 아래 Root CA 파일의 내용을 복사하여 붙여넣기 합니다.
&lt;a href=&quot;/assets/files/cloudnative/isrgrootx1.txt&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Root CA 파일 다운로드&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;전용 키 : cat 명령어를 통해 privkey.pem의 내용을 확인 후 복사 붙여넣기 합니다.&lt;/li&gt;
      &lt;li&gt;전용키 암호 : 입력하지 않음.&lt;/li&gt;
      &lt;li&gt;“다음” 버튼을 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-14.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;규칙 단계는 “임포트됨” 유형에서는 해당 없기 때문에 “다음” 버튼을 눌러서 다음단계로 이동합니다.&lt;/li&gt;
  &lt;li&gt;입력한 내용을 검포 후 “인증서 생성”버튼을 클릭합니다.
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-15.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-16.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
  &lt;li&gt;생성된 인증서 정보를 확인합니다.
&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/letsencrypt-17.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;마무리-하며&quot;&gt;마무리 하며…&lt;/h3&gt;
&lt;p&gt;이번 포스팅에서는 certbot을 이용하여 간편하게 인증서를 발급받고 OCI 인증서 서비스에 등록하는 과정에 대해 살펴보았습니다.
다음에는 OCI 인증서 서비스를 다른 OCI 서비스 (로드밸런서, API Gateway)에 통합하는 과정도 살펴볼 예정입니다.
아래 인증서 서비스관련 포스팅의 링크를 참조하세요.&lt;/p&gt;

&lt;h3 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h3&gt;
&lt;h4 id=&quot;references&quot;&gt;References&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ateam-oracle.com/post/get-certificates-from-lets-encrypt-for-your-oci-services-the-easy-way&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.ateam-oracle.com/post/get-certificates-from-lets-encrypt-for-your-oci-services-the-easy-way&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;oracle-공식-문서&quot;&gt;Oracle 공식 문서&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/en-us/iaas/Content/certificates/home.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.oracle.com/en-us/iaas/Content/certificates/home.htm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.oracle.com/security/cloud-security/ssl-tls-certificates/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.oracle.com/security/cloud-security/ssl-tls-certificates/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.oracle.com/security/cloud-security/ssl-tls-certificates/faq/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.oracle.com/security/cloud-security/ssl-tls-certificates/faq/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;인증서-서비스관련-포스팅&quot;&gt;인증서 서비스관련 포스팅&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/cloudnative/oci-certificate-with-lb/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OCI 인증서를 Load Balancer에 적용하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;OCI 인증서를 API Gateway에 적용하기&lt;/li&gt;
  &lt;li&gt;OCI 인증서 서비스의 인증기관 생성 및 Load Balancer 적용하기&lt;/li&gt;
&lt;/ul&gt;
</content>

			
				<category term="cloudnative" />
			
			
				<category term="oci" />
			
				<category term="certificates" />
			
				<category term="CA" />
			
				<category term="lets encrypt" />
			
				<category term="certbot" />
			

			<published>2022-12-02T00:00:00+09:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//cloudnative/oci-certificate-overview/</id>
			<title>OCI Certificates 서비스 살펴보기</title>
			<link href="http://localhost:4000//cloudnative/oci-certificate-overview/" rel="alternate" type="text/html" title="OCI Certificates 서비스 살펴보기" />
			<updated>2022-12-01T00:00:00+09:00</updated>

			
				
				<author>
					
						<name>Young Hwan</name>
					
					
					
				</author>
			
			<summary>Cloud 서비스 운영에 필요한 인증서를 쉽고 편하게 관리할 수 있는 OCI Certificates 서비스에 대해 알아봅니다</summary>
			<content type="html" xml:base="http://localhost:4000//cloudnative/oci-certificate-overview/">&lt;div class=&quot;panel radius&quot;&gt;
  &lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#oci-certificates-소개&quot; id=&quot;markdown-toc-oci-certificates-소개&quot;&gt;OCI Certificates 소개&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#oci-certificates-서비스란&quot; id=&quot;markdown-toc-oci-certificates-서비스란&quot;&gt;OCI Certificates 서비스란?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#oci-인증서-관리-기능-소개&quot; id=&quot;markdown-toc-oci-인증서-관리-기능-소개&quot;&gt;OCI 인증서 관리 기능 소개&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#oci-인증서-리소스를-통합할-수-있는-oci-서비스&quot; id=&quot;markdown-toc-oci-인증서-리소스를-통합할-수-있는-oci-서비스&quot;&gt;OCI 인증서 리소스를 통합할 수 있는 OCI 서비스&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#oci-인증서-서비스의-제한&quot; id=&quot;markdown-toc-oci-인증서-서비스의-제한&quot;&gt;OCI 인증서 서비스의 제한&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#oci-인증서-서비스-비용&quot; id=&quot;markdown-toc-oci-인증서-서비스-비용&quot;&gt;OCI 인증서 서비스 비용&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#타사-유사-서비스&quot; id=&quot;markdown-toc-타사-유사-서비스&quot;&gt;타사 유사 서비스&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#인증서-서비스-컨셉-및-주요-용어-안내&quot; id=&quot;markdown-toc-인증서-서비스-컨셉-및-주요-용어-안내&quot;&gt;인증서 서비스 컨셉 및 주요 용어 안내&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#certificates-인증서&quot; id=&quot;markdown-toc-certificates-인증서&quot;&gt;CERTIFICATES (인증서)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#certificate-authorities-인증-기관&quot; id=&quot;markdown-toc-certificate-authorities-인증-기관&quot;&gt;CERTIFICATE AUTHORITIES (인증 기관)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ca-bundles-ca-번들&quot; id=&quot;markdown-toc-ca-bundles-ca-번들&quot;&gt;CA BUNDLES (CA 번들)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#certificate-chains-인증체인&quot; id=&quot;markdown-toc-certificate-chains-인증체인&quot;&gt;CERTIFICATE CHAINS (인증체인)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#certificate-revocation-lists-인증서-해지-목록&quot; id=&quot;markdown-toc-certificate-revocation-lists-인증서-해지-목록&quot;&gt;CERTIFICATE REVOCATION LISTS (인증서 해지 목록)&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#참고-자료&quot; id=&quot;markdown-toc-참고-자료&quot;&gt;참고 자료&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#oracle-공식-문서&quot; id=&quot;markdown-toc-oracle-공식-문서&quot;&gt;Oracle 공식 문서&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#인증서-서비스관련-포스팅&quot; id=&quot;markdown-toc-인증서-서비스관련-포스팅&quot;&gt;인증서 서비스관련 포스팅&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h3 id=&quot;oci-certificates-소개&quot;&gt;OCI Certificates 소개&lt;/h3&gt;
&lt;p&gt;OCI Certificates 서비스는 OCI 테넌시에서 SSL/TLS 인증서가 필요한 서비스와 원활하게 연결하기 위한 기능을 제공합니다. 
테넌시에서 사용할 수 있는 자체 인증기관 및 인증서를 생성, 발급할 수 있으며, 이미 사용중인 다른 인증 기관 (CA)의 인증서를 Import 하여 사용할 수도 있습니다. 
OCI Certificates 서비스를 사용하여 고객은 손쉽게 TLS 인증서의 버전 및 배포, 갱신을 관리할 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;oci-certificates-서비스란&quot;&gt;OCI Certificates 서비스란?&lt;/h4&gt;
&lt;p&gt;개인 정보 보호 및 데이터 보안을 강화하기 위해 컴퓨터 시스템(예: 서버, 웹 애플리케이션, 이메일 등)은 TLS를 사용하여 데이터 전송 과정에서 내용을 암호화해야 합니다. 
TLS를 적용하려면 SSL 인증서라고 하는 TLS 인증서를 사용해야 합니다. 물론 이러한 인증서를 관리하는 것은 번거롭고 어려운 일이지만 매우 중요한 작업입니다.&lt;br /&gt;
운영중인 시스템에 인증서를 적용하고 관리해보셨다면 모두 알고 계시겠지만, 기존 인증서 관리와 관련된 가장 큰 문제점들은 &lt;strong&gt;1) 개인 키 및 이를 사용하여 생성된 인증서 관리, 2) 인증서 인벤토리 추적, 3) 서비스 중단을 방지하기 위한 인증서 만료 전 갱신&lt;/strong&gt;입니다.&lt;br /&gt;
특히 서비스 중단을 방지하려면 인증서의 만료 날짜를 모니터링하고 만료되기 전에 갱신해야 합니다. 단순히 인증서 몇 개를 사용하더라도 번거로운 프로세스 때문에 시간이 많이 소요되는데, 수천 개의 인증서를 사용하는 대기업의 경우 이러한 인증서를 관리하는 것은 대규모 작업으로 여러 사람이 필요한 작업이 될 수 있습니다.&lt;br /&gt;
&lt;strong&gt;OCI 인증서 서비스는 클라우드기반으로 설계된 X.509 인증서 서비스로, 이러한 인증서의 관리를 불편함, 어려움을 간소화하고 쉽게 관리할 수 있는 관리 기능을 제공합니다.&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;oci-인증서-관리-기능-소개&quot;&gt;OCI 인증서 관리 기능 소개&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;유연한 개인 Certificate Authority 계증 구현&lt;/strong&gt; - 손쉽게 개인 root CA 와 subordinate CA를 생성 가능
    &lt;ul&gt;
      &lt;li&gt;최대 10개 단계 깊이까지 생성 가능한 CA 계층의 Trust Chain을 통해 유연성과 보안을 확보할 수 있습니다.&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/certificates-1.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;유연한 인증서 생성&lt;/strong&gt; - 인증서 자동 배포 기능
    &lt;ul&gt;
      &lt;li&gt;내부 CA를 사용하여 인증서를 쉽게 생성하고 배포하거나, CSR(인증서 서명 요청)을 인증서 서비스로 가져오거나 기존에 타 기관에서 발급받은 인증서를 업로드하여 통합 서비스에 자동 배포할 수 있습니다.&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/certificates-2.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;손쉬운 OCI 서비스 통합&lt;/strong&gt; - OCI Load balancer 또는 API Gateway와 간편한 서비스 통합 기능
    &lt;ul&gt;
      &lt;li&gt;OCI 인증서를 로드 밸런서 또는 API 게이트웨이와 쉽게 통합할 수 있습니다. Oracle Cloud Infrastructure Certificates는 인증서 모니터링, 배포 및 자동 갱신기능을 제공하기 때문에 만료된 사용자가 인증서 만료를 걱정을 덜 수 있습니다.&lt;/li&gt;
      &lt;li&gt;&lt;img src=&quot;/assets/img/cloudnative/2022/certificates/certificates-3.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;oci-인증서-리소스를-통합할-수-있는-oci-서비스&quot;&gt;OCI 인증서 리소스를 통합할 수 있는 OCI 서비스&lt;/h4&gt;
&lt;p&gt;아래 내용은 2022년 12월을 기준으로 작성되었습니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;OCI Load Balancer&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;백엔드 집합에 SSL 인증서 적용 : OCI 인증서 서비스의 인증기관, CA번들 적용 가능&lt;/li&gt;
      &lt;li&gt;리스너에 SSL 인증서 적용 : OCI 인증서 서비스의 인증서 적용 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;API Gateway&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;API Gateway 인증서 적용 : OCI 인증서 서비스의 인증서 적용 가능&lt;/li&gt;
      &lt;li&gt;API Gateway 인증기관 적용 : OCI 인증서 서비스의 인증기관, CA번들 적용 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;oci-인증서-서비스의-제한&quot;&gt;OCI 인증서 서비스의 제한&lt;/h4&gt;
&lt;table class=&quot;table vl-table-bordered vl-table-divider-col&quot; summary=&quot;This table shows Certificates service limits by
                resource for Pre-Paid Credit customers and Pay-as-You-Go customers&quot;&gt;&lt;caption&gt;&lt;/caption&gt;&lt;colgroup&gt;&lt;col /&gt;&lt;col /&gt;&lt;col /&gt;&lt;/colgroup&gt;&lt;thead class=&quot;thead&quot;&gt;
&lt;tr class=&quot;row&quot;&gt;
&lt;th class=&quot;entry align-center&quot; id=&quot;servicelimits_topic_Certificates_Limits__entry__1&quot;&gt;
&lt;p class=&quot;p&quot;&gt;Resource&lt;/p&gt;
&lt;/th&gt;
&lt;th class=&quot;entry align-center&quot; id=&quot;servicelimits_topic_Certificates_Limits__entry__2&quot;&gt;
&lt;p class=&quot;p&quot;&gt;Monthly or Annual Universal Credits&lt;/p&gt;
&lt;/th&gt;
&lt;th class=&quot;entry align-center&quot; id=&quot;servicelimits_topic_Certificates_Limits__entry__3&quot;&gt;
&lt;p class=&quot;p&quot;&gt;Pay-as-You-Go or Promo&lt;/p&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody class=&quot;tbody&quot;&gt;
&lt;tr class=&quot;row&quot;&gt;
&lt;th class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__1&quot; id=&quot;servicelimits_topic_Certificates_Limits__entry__4&quot; scope=&quot;row&quot;&gt;Certificate authorities in a tenancy&lt;/th&gt;
&lt;td class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__4 servicelimits_topic_Certificates_Limits__entry__2&quot;&gt;&lt;p class=&quot;p&quot;&gt;100&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__4 servicelimits_topic_Certificates_Limits__entry__3&quot;&gt;&lt;p class=&quot;p&quot;&gt;100&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row&quot;&gt;
&lt;th class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__1&quot; id=&quot;servicelimits_topic_Certificates_Limits__entry__7&quot; scope=&quot;row&quot;&gt;Certificates in a tenancy&lt;/th&gt;
&lt;td class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__7 servicelimits_topic_Certificates_Limits__entry__2&quot;&gt;
&lt;p class=&quot;p&quot;&gt;5000&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__7 servicelimits_topic_Certificates_Limits__entry__3&quot;&gt;
&lt;p class=&quot;p&quot;&gt;5000&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row&quot;&gt;
&lt;th class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__1&quot; id=&quot;servicelimits_topic_Certificates_Limits__entry__10&quot; scope=&quot;row&quot;&gt;CA bundles in a tenancy&lt;/th&gt;
&lt;td class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__10 servicelimits_topic_Certificates_Limits__entry__2&quot;&gt;
&lt;p class=&quot;p&quot;&gt;25&lt;/p&gt;
&lt;/td&gt;
&lt;td class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__10 servicelimits_topic_Certificates_Limits__entry__3&quot;&gt;
&lt;p class=&quot;p&quot;&gt;25&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row&quot;&gt;
&lt;th class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__1&quot; id=&quot;servicelimits_topic_Certificates_Limits__entry__13&quot; scope=&quot;row&quot;&gt;Certificate versions in a certificate&lt;/th&gt;
&lt;td class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__13 servicelimits_topic_Certificates_Limits__entry__2&quot;&gt;&lt;p class=&quot;p&quot;&gt;30&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__13 servicelimits_topic_Certificates_Limits__entry__3&quot;&gt;&lt;p class=&quot;p&quot;&gt;30&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row&quot;&gt;
&lt;th class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__1&quot; id=&quot;servicelimits_topic_Certificates_Limits__entry__16&quot; scope=&quot;row&quot;&gt;Certificate versions scheduled for deletion (for a given certificate)&lt;/th&gt;
&lt;td class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__16 servicelimits_topic_Certificates_Limits__entry__2&quot;&gt;&lt;p class=&quot;p&quot;&gt;30&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__16 servicelimits_topic_Certificates_Limits__entry__3&quot;&gt;&lt;p class=&quot;p&quot;&gt;30&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;row&quot;&gt;
&lt;th class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__1&quot; id=&quot;servicelimits_topic_Certificates_Limits__entry__19&quot; scope=&quot;row&quot;&gt;Associations for a given certificate&lt;/th&gt;
&lt;td class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__19 servicelimits_topic_Certificates_Limits__entry__2&quot;&gt;&lt;p class=&quot;p&quot;&gt;30&lt;/p&gt;&lt;/td&gt;
&lt;td class=&quot;entry align-center&quot; headers=&quot;servicelimits_topic_Certificates_Limits__entry__19 servicelimits_topic_Certificates_Limits__entry__3&quot;&gt;&lt;p class=&quot;p&quot;&gt;30&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h4 id=&quot;oci-인증서-서비스-비용&quot;&gt;OCI 인증서 서비스 비용&lt;/h4&gt;
&lt;p&gt;&lt;mark&gt;OCI 인증서 서비스는 무료로 제공됩니다.&lt;/mark&gt;&lt;/p&gt;

&lt;h4 id=&quot;타사-유사-서비스&quot;&gt;타사 유사 서비스&lt;/h4&gt;
&lt;table&gt;&lt;caption&gt;&lt;/caption&gt;&lt;colgroup&gt;&lt;col /&gt;&lt;col /&gt;&lt;col /&gt;&lt;col /&gt;&lt;/colgroup&gt;&lt;thead class=&quot;thead&quot;&gt;
&lt;tr&gt;
&lt;th id=&quot;h_oci&quot;&gt;&lt;p style=&quot;text-align: center&quot;&gt;OCI&lt;/p&gt;&lt;/th&gt;
&lt;th id=&quot;h_aws&quot;&gt;&lt;p style=&quot;text-align: center&quot;&gt;AWS&lt;/p&gt;&lt;/th&gt;
&lt;th id=&quot;h_azure&quot;&gt;&lt;p style=&quot;text-align: center&quot;&gt;Azure&lt;/p&gt;&lt;/th&gt;
&lt;th id=&quot;h_gcp&quot;&gt;&lt;p style=&quot;text-align: center&quot;&gt;GCP&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td headers=&quot;h_oci&quot;&gt;OCI Certificates&lt;/td&gt;
&lt;td headers=&quot;h_aws&quot;&gt;AWS Certificate Manager&lt;/td&gt;
&lt;td headers=&quot;h_azure&quot;&gt;App Service Certificates&lt;/td&gt;
&lt;td headers=&quot;h_gcp&quot;&gt;Google Cloud CA Service&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;인증서-서비스-컨셉-및-주요-용어-안내&quot;&gt;인증서 서비스 컨셉 및 주요 용어 안내&lt;/h3&gt;
&lt;h4 id=&quot;certificates-인증서&quot;&gt;CERTIFICATES (인증서)&lt;/h4&gt;
&lt;p&gt;인증서는 인증서의 공개 키 소유자임을 확인하는 디지털 문서입니다. 인증서는 최종 엔티티 또는 리프 인증서라고도 합니다. 최종 엔티티 인증서는 다른 인증서 서명에 사용할 수 없는 인증서입니다. 예를 들어, TLS/SSL 서버 및 클라이언트 인증서, 전자 메일 인증서, 코드 서명 인증서 및 자격 있는 인증서는 모두 최종 엔티티 인증서입니다.&lt;/p&gt;

&lt;h4 id=&quot;certificate-authorities-인증-기관&quot;&gt;CERTIFICATE AUTHORITIES (인증 기관)&lt;/h4&gt;
&lt;p&gt;CA(인증 기관)는 인증서 및 하위 CA를 발행합니다. CA는 지정된 인증서에서 공개 키의 소유권을 인증하기 위해 존재합니다. CA 인증서는 CA가 발행하는 인증서에서 CA 서명을 인증합니다. CA는 맨 위의 CA를 루트 CA라고 하며 계층 내에 있는 CA가 하위 CA.A CA 계층인 계층에 존재합니다. CA 계층은 각 엔티티가 체인에서 엔티티 아래에 서명하는 신뢰(또는 인증 경로) 체인을 설정합니다. 루트 CA는 자체 서명됩니다. 인증서를 신뢰할 수 있으려면 검증을 수행하는 끝점에 따라 루트 CA가 신뢰할 수 있는 루트 CA여야 합니다.&lt;/p&gt;

&lt;h4 id=&quot;ca-bundles-ca-번들&quot;&gt;CA BUNDLES (CA 번들)&lt;/h4&gt;
&lt;p&gt;번들에는 루트 및 중간 인증서(번들 내용이라고도 함), 인증서 속성(및 인증서 버전) 및 사용자가 제공한 인증서 컨텍스트 메타데이터가 포함됩니다. CA 번들에는 인증서 서비스에서 관리되지 않는 CA를 포함하여 단일 CA 또는 다중 CA가 포함될 수 있습니다. 인증서 서비스는 PEM 형식의 인증서 콘텐츠를 지원합니다.&lt;/p&gt;

&lt;h4 id=&quot;certificate-chains-인증체인&quot;&gt;CERTIFICATE CHAINS (인증체인)&lt;/h4&gt;
&lt;p&gt;인증서 체인은 최종 엔티티 인증서에서 루트 인증서로의 인증서 목록입니다. 이 서비스는 인증서가 다른 키 알고리즘 제품군을 사용하는 혼합 인증서 체인을 지원하지 않습니다(예: 일부 인증서의 RSA 키 및 다른 인증서의 ECDSA 키 사용). 키 알고리즘 계열마다 서로 다른 CA 체인을 사용하는 것이 좋습니다.&lt;/p&gt;

&lt;h4 id=&quot;certificate-revocation-lists-인증서-해지-목록&quot;&gt;CERTIFICATE REVOCATION LISTS (인증서 해지 목록)&lt;/h4&gt;
&lt;p&gt;CRL(인증서 해지 목록)은 CA에서 발행하며 발행 CA가 만료 날짜 이전에 해지한 모든 CA 및 인증서를 포함합니다. 취소하면 더 이상 신뢰할 수 없는 인증서가 무효화됩니다.&lt;/p&gt;

&lt;h3 id=&quot;참고-자료&quot;&gt;참고 자료&lt;/h3&gt;
&lt;h4 id=&quot;oracle-공식-문서&quot;&gt;Oracle 공식 문서&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.oracle.com/en-us/iaas/Content/certificates/home.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.oracle.com/en-us/iaas/Content/certificates/home.htm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.oracle.com/security/cloud-security/ssl-tls-certificates/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.oracle.com/security/cloud-security/ssl-tls-certificates/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.oracle.com/security/cloud-security/ssl-tls-certificates/faq/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.oracle.com/security/cloud-security/ssl-tls-certificates/faq/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;인증서-서비스관련-포스팅&quot;&gt;인증서 서비스관련 포스팅&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/cloudnative/oci-certificate-import-letsencrypt-cert/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Let’s Encrypt로 생성한 인증서를 OCI 인증서 서비스에 Import 하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;OCI 인증서를 Load Balancer에 적용하기&lt;/li&gt;
  &lt;li&gt;OCI 인증서를 API Gateway에 적용하기&lt;/li&gt;
  &lt;li&gt;OCI 인증서 서비스의 인증기관 생성 및 Load Balancer 적용하기&lt;/li&gt;
&lt;/ul&gt;
</content>

			
				<category term="cloudnative" />
			
			
				<category term="oci" />
			
				<category term="certificates" />
			
				<category term="CA" />
			

			<published>2022-12-01T00:00:00+09:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//cloudnative/oci-streaming-limitations/</id>
			<title>OCI Streaming Service 제약 사항</title>
			<link href="http://localhost:4000//cloudnative/oci-streaming-limitations/" rel="alternate" type="text/html" title="OCI Streaming Service 제약 사항" />
			<updated>2022-11-29T00:00:00+09:00</updated>

			
				
				<author>
					
						<name>DanKim</name>
					
					
					
						<uri>http://github.com/mangdan</uri>
					
				</author>
			
			<summary>OCI Streaming Service의 제약 사항에 대해서 알아봅니다.</summary>
			<content type="html" xml:base="http://localhost:4000//cloudnative/oci-streaming-limitations/">&lt;div class=&quot;panel radius&quot;&gt;
  &lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#oci-streaming-service&quot; id=&quot;markdown-toc-oci-streaming-service&quot;&gt;OCI Streaming Service&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#oci-streaming-service-제약-사항&quot; id=&quot;markdown-toc-oci-streaming-service-제약-사항&quot;&gt;OCI Streaming Service 제약 사항&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#참고&quot; id=&quot;markdown-toc-참고&quot;&gt;참고&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h3 id=&quot;oci-streaming-service&quot;&gt;OCI Streaming Service&lt;/h3&gt;
&lt;p&gt;OCI Streaming Service는 OCI에서 제공하는 관리형 Apache Kafka 호환 이벤트 스트리밍 서비스로 다음과 같은 장점을 제공합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;탄력적이고 확장성이 뛰어난 플랫폼으로 프로비저닝, 확장, 보안 패치를 포함하여 이벤트 스트리밍을 위한 모든 인프라 및 플랫폼을 OCI 환경에서 관리할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;내구성 및 내결함성이 보장된 견고한 구성으로 엔터프라이즈 수준의 높은 안정성을 제공합니다.&lt;/li&gt;
  &lt;li&gt;Kafka 호환 API를 제공하여 특정 벤더에 대한 종속성을 제거할 수 있습니다.&lt;/li&gt;
  &lt;li&gt;프로비저닝된 용량에 대한 비용은 무료이며, 사용한 만큼만 지불하는 간소화된 가격 정책을 제공합니다.&lt;/li&gt;
  &lt;li&gt;OCI 자체 서비스나 타사 솔루션과의 Out of box 통합을 지원합니다. (GoldenGate, Object Storage, JDBC, OIC, Splunk 등)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/cloudnative-security/2022/oci-streaming-limitations-1.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;oci-streaming-service-제약-사항&quot;&gt;OCI Streaming Service 제약 사항&lt;/h3&gt;
&lt;p&gt;OCI Streaming Service를 사용하기 위해서는 기본적인 제약 사항에 대해서 알고 있어야 합니다. 제약 사항에 대해서 자세히 알아 보도록 합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Stream내의 메시지 보관 기간은 최소 &lt;mark&gt;24시간&lt;/mark&gt;, 최대 &lt;mark&gt;7일&lt;/mark&gt;입니다. 지정된 보관 기간을 초과하면 메시지는 자동으로 삭제됩니다.
    &lt;ul&gt;
      &lt;li&gt;보관 기간은 Stream을 생성할 때 지정할 수 있으며 한번 생성된 Stream에 대한 보관 기간은 변경할 수 없습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Tenancy의 기본 Partition개수는 &lt;mark&gt;5개&lt;/mark&gt; 입니다. (Monthly Universal Credit인 경우이며 PAYG인 경우 제공되지 않습니다.)
    &lt;ul&gt;
      &lt;li&gt;제약이 있지만, Partition이 더 필요한 경우에는 OCI Console에서 Limit Increase 요청을 통해서 늘릴수 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Stream을 한번 생성한 후에는 Partition의 수를 조정할 수 없습니다.
    &lt;ul&gt;
      &lt;li&gt;Stream을 생성할 때 애플리케이션의 처리량 요구 사항을 미리 산정하여 Partition수를 지정하여야 합니다.&lt;/li&gt;
      &lt;li&gt;추가 용량이 필요한 경우에는 Stream Pool에 Stream을 추가하는 방법으로 확장하여야 합니다.&lt;/li&gt;
      &lt;li&gt;현재는 제공되지 않고 있지만, 동적으로 Partition이 스케일 되는 기능이 추후에 제공될 예정이라고 합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;각 Partition에 대한 데이터 쓰기 속도는 &lt;mark&gt;초당 1MB&lt;/mark&gt;까지 지원하며, PUT 요청 수는 &lt;mark&gt;초당 1000개&lt;/mark&gt; 까지 가능합니다.
    &lt;ul&gt;
      &lt;li&gt;Producer가 Stream에 게시할 수 있는 고유 메시지의 최대 크기는 1MB(Base64 디코딩된 후 키와 메시지 합계)입니다.&lt;/li&gt;
      &lt;li&gt;Partition의 수를 늘리게 되면 처리량도 증가합니다. 예를 들어, 10개의 Partition을 가지는 Stream인 경우라면 10MB/s의 쓰기 속도로 데이터를 전송할 수 있으며 초당 10,000개까지 쓸 수 있습니다.&lt;/li&gt;
      &lt;li&gt;만일 SDK를 사용하여 위 제한을 초과하는 요청이 전송되는 경우 다음과 같은 오류 메시지가 반환됩니다.&lt;br /&gt;
 &lt;mark&gt;exception is org.apache.kafka.common.errors.RecordBatchTooLargeException: The request included message batch larger than the configured segment size on the server.&lt;/mark&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;각 Partition은 &lt;mark&gt;초당 2MB&lt;/mark&gt;까지 읽기 속도를 지원합니다.
    &lt;ul&gt;
      &lt;li&gt;Partition의 수를 늘리게 되면 처리량도 증가합니다. 예를 들어, 10개의 Partition을 가지는 Stream인 경우라면 20MB/s의 읽기 속도를 지원합니다.&lt;/li&gt;
      &lt;li&gt;만일 SDK를 사용하여 위 제한을 초과하는 요청이 전송되는 경우 다음과 같은 오류 메시지가 반환됩니다.&lt;br /&gt;
 &lt;mark&gt;exception is org.apache.kafka.common.errors.RecordBatchTooLargeException: The request included message batch larger than the configured segment size on the server.&lt;/mark&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Stream에서 Partition Cursor (Consumer Group을 사용하지 않는 경우) 혹은 하나의 Consumer Group Cursor(Consumer Group을 사용하는 경우)에서는 &lt;mark&gt;초당 5개의 요청(GET)&lt;/mark&gt;까지 지원합니다.
    &lt;ul&gt;
      &lt;li&gt;일반적으로 Partition Cursor는 한번 만들면 계속 재사용 가능하지만, 메시지 소비가 5분이상 중지되면 커서를 다시 생성해야 합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Stream당 Consumer Group은 최대 &lt;mark&gt;50개&lt;/mark&gt;까지 생성할 수 있습니다.
    &lt;ul&gt;
      &lt;li&gt;Consumer Group을 50개 이상 생성하려고 하는 경우 다음과 같은 오류가 발생합니다.&lt;br /&gt;
 &lt;mark&gt;com.oracle.bmc.model.BmcException: (400, InvalidParameter, false) Too many groups created on stream.&lt;/mark&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Consumer Group을 사용하는 경우 하나의 Partition은 &lt;mark&gt;초당 최대 250개의 요청(GET)&lt;/mark&gt;을 지원합니다.
    &lt;ul&gt;
      &lt;li&gt;Consumer Group당 초당 5개의 요청(GET)이 가능하고, 하나의 Stream에서는 최대 50개의 Consumer Group을 지원합니다. 또한 각 Partition은 Consumer Group의 최대 하나의 멤버(인스턴스)가 할당(Partition당 50개의 멤버가 할당될 수 있음)될 수 있으므로 최대 250개까지 요청(GET)을 지원하게 됩니다.&lt;/li&gt;
      &lt;li&gt;Stream에서 지원하는 최대 요청(GET) 개수가 250개 이므로, Partition을 늘려도 요청(GET)수를 늘릴 수 없습니다. (Stream당 Consumer Group수는 50개로 제한이 걸려 있기 때문)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;하나의 요청(GET)은 기본적으로 가능한 많은 메시지를 반환하지만, &lt;mark&gt;최대 10,000&lt;/mark&gt;까지 메시지 수를 제한할 수 있습니다.
    &lt;ul&gt;
      &lt;li&gt;OCI Streaming SDK의 get 메소드(Java SDK의 경우 GetMessagesRequest Class의 getLimit 메소드)에 적용&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Consumer Group은 Stream에 구성된 보전 기간동안 사용하지 않으면 삭제되며, Consumer Group 멤버(인스턴스)가 &lt;mark&gt;30초&lt;/mark&gt; 이상 메시지 소비를 중지하면 Consumer Group에서 삭제됩니다.
    &lt;ul&gt;
      &lt;li&gt;삭제된 멤버(인스턴스)와 기존에 연결되어 있던 Partition의 경우 다른 인스턴스에 재할당 됩니다. 이것을 &lt;mark&gt;Rebalancing&lt;/mark&gt; 이라고 합니다.
  &lt;img src=&quot;/assets/img/cloudnative-security/2022/oci-streaming-limitations-2.png&quot; alt=&quot;&quot; title=&quot; &quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;참고&quot;&gt;참고&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.oracle.com/kr/cloud/cloud-native/streaming/faq/&quot;&gt;https://www.oracle.com/kr/cloud/cloud-native/streaming/faq/&lt;/a&gt;&lt;/p&gt;
</content>

			
				<category term="cloudnative" />
			
			
				<category term="oci" />
			
				<category term="streaming" />
			
				<category term="kafka" />
			

			<published>2022-11-29T00:00:00+09:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//cloudnative/oci-streaming-flink-integration/</id>
			<title>Streaming Cloud Service with Kafka and Flink</title>
			<link href="http://localhost:4000//cloudnative/oci-streaming-flink-integration/" rel="alternate" type="text/html" title="Streaming Cloud Service with Kafka and Flink" />
			<updated>2022-11-29T00:00:00+09:00</updated>

			
				
				<author>
					
						<name>DanKim</name>
					
					
					
						<uri>http://github.com/mangdan</uri>
					
				</author>
			
			<summary>OCI Streaming 서비스는 Apache Kafka API와 호환성을 제공하고 있습니다. 이번 글에서는 OCI Streaming Service와 함께 데이터 생산자(Producer)로 Kafka, 소비자(Consumer)로 Flink를 사용하는 방법을 정리하였습니다.</summary>
			<content type="html" xml:base="http://localhost:4000//cloudnative/oci-streaming-flink-integration/">&lt;div class=&quot;panel radius&quot;&gt;
  &lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#streamtopic-구성&quot; id=&quot;markdown-toc-streamtopic-구성&quot;&gt;Stream(Topic) 구성&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#streamtopic-생성&quot; id=&quot;markdown-toc-streamtopic-생성&quot;&gt;Stream(Topic) 생성&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#stream-pool-stream-group-및-kafka-접속-정보&quot; id=&quot;markdown-toc-stream-pool-stream-group-및-kafka-접속-정보&quot;&gt;Stream Pool (Stream Group) 및 Kafka 접속 정보&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#auth-token-생성&quot; id=&quot;markdown-toc-auth-token-생성&quot;&gt;Auth Token 생성&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#flink-환경-구성&quot; id=&quot;markdown-toc-flink-환경-구성&quot;&gt;Flink 환경 구성&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#flink-설치&quot; id=&quot;markdown-toc-flink-설치&quot;&gt;Flink 설치&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#flink-클러스터-실행&quot; id=&quot;markdown-toc-flink-클러스터-실행&quot;&gt;Flink 클러스터 실행&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#flink-소비자consumer&quot; id=&quot;markdown-toc-flink-소비자consumer&quot;&gt;Flink 소비자(Consumer)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#flink-소비자-코드-작성&quot; id=&quot;markdown-toc-flink-소비자-코드-작성&quot;&gt;Flink 소비자 코드 작성&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#빌드-및-잡job-실행&quot; id=&quot;markdown-toc-빌드-및-잡job-실행&quot;&gt;빌드 및 잡(Job) 실행&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#kafka-생산자-producer&quot; id=&quot;markdown-toc-kafka-생산자-producer&quot;&gt;Kafka 생산자 (Producer)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#kafka-생산자-코드-작성&quot; id=&quot;markdown-toc-kafka-생산자-코드-작성&quot;&gt;Kafka 생산자 코드 작성&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#빌드-및-생산자-실행&quot; id=&quot;markdown-toc-빌드-및-생산자-실행&quot;&gt;빌드 및 생산자 실행&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#flink-job-task-확인&quot; id=&quot;markdown-toc-flink-job-task-확인&quot;&gt;Flink Job Task 확인&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#소스-공유&quot; id=&quot;markdown-toc-소스-공유&quot;&gt;소스 공유&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#참고&quot; id=&quot;markdown-toc-참고&quot;&gt;참고&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h3 id=&quot;streamtopic-구성&quot;&gt;Stream(Topic) 구성&lt;/h3&gt;
&lt;p&gt;우선 OCI에서 Stream을 사용할 수 있도록 구성하고 Kafka 관련 접속 정보를 얻어야 합니다.&lt;/p&gt;

&lt;h4 id=&quot;streamtopic-생성&quot;&gt;Stream(Topic) 생성&lt;/h4&gt;
&lt;p&gt;OCI Streaming Service에서 Stream(Topic)을 생성하는 절차는 간단합니다. OCI 콘솔에 접속한 후 &lt;strong&gt;메뉴 &amp;gt;Analytics &amp;amp; AI &amp;gt; 스트리밍(Streaming) &amp;gt; 스트림 생성&lt;/strong&gt; 경로로 이동해서 생성할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://mangdan.github.io/assets/images/oci-create-streaming.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;stream-pool-stream-group-및-kafka-접속-정보&quot;&gt;Stream Pool (Stream Group) 및 Kafka 접속 정보&lt;/h4&gt;
&lt;p&gt;Stream Pool은 Stream의 Group을 의미합니다. 위에서 생성한 Stream에 별도의 Stream Pool을 지정하지 않은 경우 기본 Stream Pool (DefaultPool)에 포함됩니다. Stream Pool을 보면 Stream Pool에 접속을 위한 Kafka 설정을 포함하고 있습니다. 이 정보를 이용해서 Kafka 및 Flink 설정을 하게 됩니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;부트 스트랩 서버: cell-1.streaming.{Region-Code}.oci.oraclecloud.com:9092&lt;/li&gt;
  &lt;li&gt;SASL 접속 문자열: org.apache.kafka.common.security.plain.PlainLoginModule required username=”{테넌시명}/{OCI 계정}/{Stream Pool OCID}” * password=”{AUTH_TOKEN}”;&lt;/li&gt;
  &lt;li&gt;보안 프로토콜: SASL_SSL&lt;/li&gt;
  &lt;li&gt;보안 방식: PLAIN&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;auth-token-생성&quot;&gt;Auth Token 생성&lt;/h4&gt;
&lt;p&gt;Kafka 접속 정보에서 필요한 정보를 얻을 수 있지만, 자신의 계정과 연관된 AUTH_TOKEN은 생성해 줘야합니다. 다음 순서로 토큰을 생성합니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;우측 상단 프로파일 클릭 &amp;gt; 계정 선택 &amp;gt; 인증 토큰 &amp;gt; 토큰 생성 &amp;gt; 복사&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://mangdan.github.io/assets/images/oci-oss-create-token.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;flink-환경-구성&quot;&gt;Flink 환경 구성&lt;/h3&gt;
&lt;p&gt;Flink 환경을 구성하고 소비자(Consumer)를 작성하여 실행할 것입니다. 여기서는 로컬 클러스터 환경으로 구성하도록 하겠습니다.&lt;/p&gt;

&lt;h4 id=&quot;flink-설치&quot;&gt;Flink 설치&lt;/h4&gt;
&lt;p&gt;설치는 아래 링크를 참고합니다.&lt;br /&gt;
&lt;a href=&quot;https://ci.apache.org/projects/flink/flink-docs-release-1.9/getting-started/tutorials/local_setup.html&quot;&gt;https://ci.apache.org/projects/flink/flink-docs-release-1.9/getting-started/tutorials/local_setup.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MacOS의 경우 다음과 같이 HomeBrew를 활용하면 쉽게 설치할 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;apache-flink
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;flink &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;flink-클러스터-실행&quot;&gt;Flink 클러스터 실행&lt;/h4&gt;
&lt;p&gt;MacOS에서 HomeBrew로 설치한 경우 보통 /usr/local/Cellar/apache-flink/{버전}과 같은 위치에 설치됩니다. 정확한 경로 위치는 다음과 같이 brew info로 확인할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;brew info apache-flink
&lt;span class=&quot;go&quot;&gt;
apache-flink: stable 1.16.0, HEAD
Scalable batch and stream data processing
https://flink.apache.org/
/usr/local/Cellar/apache-flink/1.16.0 (174 files, 336MB) *
  Built from source on 2022-11-04 at 14:46:29
From: https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/apache-flink.rb
License: Apache-2.0
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;==&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;Requirements
&lt;span class=&quot;go&quot;&gt;Required: java = 1.8 ✔
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;==&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;Options
&lt;span class=&quot;go&quot;&gt;--HEAD
	Install HEAD version
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;==&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;Analytics
&lt;span class=&quot;go&quot;&gt;install: 713 (30 days), 2,253 (90 days), 13,079 (365 days)
install-on-request: 714 (30 days), 2,243 (90 days), 13,028 (365 days)
build-error: 0 (30 days)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음과 같이 이동하여 실행합니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd /usr/local/Cellar/apache-flink/1.16.0/libexec/bin

$ ./start-cluster.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이제 Flink에서 제공하는 관리 콘솔에 접속해 봅니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;http://localhost:8081&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://mangdan.github.io/assets/images/oci-oss-flink-dashboard.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;flink-소비자consumer&quot;&gt;Flink 소비자(Consumer)&lt;/h3&gt;
&lt;p&gt;Flink는 Java와 Scala를 통해 코드를 작성할 수 있습니다. 여기서는 메이븐 프로젝트와 Java를 활용하여 작성하였습니다.&lt;/p&gt;

&lt;h4 id=&quot;flink-소비자-코드-작성&quot;&gt;Flink 소비자 코드 작성&lt;/h4&gt;
&lt;p&gt;Flink는 최신 버전인 1.16.0 버전을 사용하였습니다. 아래와 같이 Dependency와 Maven Plugin 설정을 합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;pom.xml&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.example.app&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;oss-kafka-flink-consumer&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;packaging&amp;gt;&lt;/span&gt;jar&lt;span class=&quot;nt&quot;&gt;&amp;lt;/packaging&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;project.build.sourceEncoding&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project.build.sourceEncoding&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;project.reporting.outputEncoding&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project.reporting.outputEncoding&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;flink.version&amp;gt;&lt;/span&gt;1.16.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/flink.version&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.flink&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;flink-connector-kafka&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${flink.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.flink&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;flink-java&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${flink.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.flink&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;flink-streaming-java&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${flink.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-resources-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.2.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-shade-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.2.4&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Run shade goal on package phase --&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;package&lt;span class=&quot;nt&quot;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;
							&lt;span class=&quot;nt&quot;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;shade&lt;span class=&quot;nt&quot;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
							&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactSet&amp;gt;&lt;/span&gt;
								&lt;span class=&quot;nt&quot;&gt;&amp;lt;excludes&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- This list contains all dependencies of flink-dist
									Everything else will be packaged into the fat-jar
									--&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.flink:flink-shaded-*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.flink:flink-core&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.flink:flink-java&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.flink:flink-scala&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.flink:flink-runtime&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.flink:flink-optimizer&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.flink:flink-clients&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.flink:flink-avro&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.flink:flink-java-examples&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.flink:flink-scala-examples&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.flink:flink-streaming-examples&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.flink:flink-streaming-java&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;

									&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Also exclude very big transitive dependencies of Flink
									WARNING: You have to remove these excludes if your code relies on other
									versions of these dependencies.
									--&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.scala-lang:scala-library&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.scala-lang:scala-compiler&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.scala-lang:scala-reflect&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.amazonaws:aws-java-sdk&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.typesafe.akka:akka-actor_*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.typesafe.akka:akka-remote_*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.typesafe.akka:akka-slf4j_*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;io.netty:netty-all&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;io.netty:netty&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.eclipse.jetty:jetty-server&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.eclipse.jetty:jetty-continuation&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.eclipse.jetty:jetty-http&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.eclipse.jetty:jetty-io&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.eclipse.jetty:jetty-util&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.eclipse.jetty:jetty-security&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.eclipse.jetty:jetty-servlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;commons-fileupload:commons-fileupload&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.avro:avro&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;commons-collections:commons-collections&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.codehaus.jackson:jackson-core-asl&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.codehaus.jackson:jackson-mapper-asl&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.thoughtworks.paranamer:paranamer&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.xerial.snappy:snappy-java&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.commons:commons-compress&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.tukaani:xz&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.esotericsoftware.kryo:kryo&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.esotericsoftware.minlog:minlog&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.objenesis:objenesis&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.twitter:chill_*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.twitter:chill-java&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.twitter:chill-avro_*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.twitter:chill-bijection_*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.twitter:bijection-core_*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.twitter:bijection-avro_*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;commons-lang:commons-lang&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;junit:junit&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;de.javakaffee:kryo-serializers&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;joda-time:joda-time&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.commons:commons-lang3&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.slf4j:slf4j-api&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.slf4j:slf4j-log4j12&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;log4j:log4j&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.commons:commons-math&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.sling:org.apache.sling.commons.json&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;commons-logging:commons-logging&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.httpcomponents:httpclient&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.apache.httpcomponents:httpcore&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;commons-codec:commons-codec&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.fasterxml.jackson.core:jackson-core&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.fasterxml.jackson.core:jackson-databind&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.fasterxml.jackson.core:jackson-annotations&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.codehaus.jettison:jettison&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;stax:stax-api&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.typesafe:config&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.uncommons.maths:uncommons-maths&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;com.github.scopt:scopt_*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org.mortbay.jetty:servlet-api&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;commons-io:commons-io&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;commons-cli:commons-cli&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
								&lt;span class=&quot;nt&quot;&gt;&amp;lt;/excludes&amp;gt;&lt;/span&gt;
							&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactSet&amp;gt;&lt;/span&gt;
							&lt;span class=&quot;nt&quot;&gt;&amp;lt;filters&amp;gt;&lt;/span&gt;
								&lt;span class=&quot;nt&quot;&gt;&amp;lt;filter&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifact&amp;gt;&lt;/span&gt;org.apache.flink:*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifact&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;excludes&amp;gt;&lt;/span&gt;
										&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;org/apache/flink/shaded/**&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
										&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;web-docs/**&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;/excludes&amp;gt;&lt;/span&gt;
								&lt;span class=&quot;nt&quot;&gt;&amp;lt;/filter&amp;gt;&lt;/span&gt;
								&lt;span class=&quot;nt&quot;&gt;&amp;lt;filter&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Do not copy the signatures in the META-INF folder.
									Otherwise, this might cause SecurityExceptions when using the JAR. --&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifact&amp;gt;&lt;/span&gt;*:*&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifact&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;excludes&amp;gt;&lt;/span&gt;
										&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;META-INF/*.SF&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
										&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;META-INF/*.DSA&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
										&lt;span class=&quot;nt&quot;&gt;&amp;lt;exclude&amp;gt;&lt;/span&gt;META-INF/*.RSA&lt;span class=&quot;nt&quot;&gt;&amp;lt;/exclude&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;/excludes&amp;gt;&lt;/span&gt;
								&lt;span class=&quot;nt&quot;&gt;&amp;lt;/filter&amp;gt;&lt;/span&gt;
							&lt;span class=&quot;nt&quot;&gt;&amp;lt;/filters&amp;gt;&lt;/span&gt;
							&lt;span class=&quot;nt&quot;&gt;&amp;lt;transformers&amp;gt;&lt;/span&gt;
								&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- add Main-Class to manifest file --&amp;gt;&lt;/span&gt;
								&lt;span class=&quot;nt&quot;&gt;&amp;lt;transformer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;implementation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
									&lt;span class=&quot;nt&quot;&gt;&amp;lt;mainClass&amp;gt;&lt;/span&gt;com.example.app.FlinkTestConsumer&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mainClass&amp;gt;&lt;/span&gt;
								&lt;span class=&quot;nt&quot;&gt;&amp;lt;/transformer&amp;gt;&lt;/span&gt;
							&lt;span class=&quot;nt&quot;&gt;&amp;lt;/transformers&amp;gt;&lt;/span&gt;
							&lt;span class=&quot;nt&quot;&gt;&amp;lt;createDependencyReducedPom&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/createDependencyReducedPom&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;

			&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Configure the jar plugin to add the main class as a manifest entry --&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-jar-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.5&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;archive&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;manifestEntries&amp;gt;&lt;/span&gt;
							&lt;span class=&quot;nt&quot;&gt;&amp;lt;Main-Class&amp;gt;&lt;/span&gt;com.example.app.FlinkTestConsumer&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Main-Class&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;/manifestEntries&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;/archive&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;

			&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-compiler-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.8.1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;release&amp;gt;&lt;/span&gt;8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/release&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;profiles&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;profile&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- A profile that does everyting correctly:
			We set the Flink dependencies to provided --&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;build-jar&lt;span class=&quot;nt&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;activation&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;activeByDefault&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/activeByDefault&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/activation&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.flink&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;flink-java&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${flink.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;provided&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.flink&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;flink-streaming-java&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${flink.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;provided&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.flink&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;flink-clients&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${flink.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;provided&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/profile&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/profiles&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다음은 OCI Streaming Service 접속을 위한 설정 파일을 작성합니다. 여기서 Stream Pool에서 확인한 Kafka 접속 정보를 사용합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;consumer.config&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bootstrap.servers=cell-1.streaming.ap-seoul-1.oci.oraclecloud.com:9092
group.id=FlinkExampleConsumer
request.timeout.ms=60000
sasl.mechanism=PLAIN
security.protocol=SASL_SSL
sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username=\&quot;{테넌시명}/{사용자 계정}/{Stream Pool OCID}\&quot; password=\&quot;{AUTH_TOKEN}\&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Java로 작성된 코드이며, FlinkKafkaConsumer로 Stream(Topic)으로 메시지를 수신하여 출력만 하는 역할을 하는 간단한 코드입니다.&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@SuppressWarnings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;all&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FlinkTestConsumer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TOPIC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;flink-topic&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FILE_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;src/main/resources/consumer.config&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//Load properties from config file&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;Properties&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FileReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;FILE_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
            
            &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StreamExecutionEnvironment&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StreamExecutionEnvironment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getExecutionEnvironment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;DataStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addSource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FlinkKafkaConsumer011&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TOPIC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleStringSchema&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Testing flink consumer&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;FileNotFoundException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;FileNoteFoundException: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Failed with exception &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;빌드-및-잡job-실행&quot;&gt;빌드 및 잡(Job) 실행&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;빌드&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;mvn package
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;잡 실행&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;flink run &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;com.example.app.FlinkTestConsumer&quot;&lt;/span&gt; target/oss-kafka-flink-consumer-1.0-SNAPSHOT.jar 
&lt;span class=&quot;go&quot;&gt;
Job has been submitted with JobID fe7e3abba870a537cf4f5a7961ae924e
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;잡(Job) 실행 확인&lt;/strong&gt;
&lt;img src=&quot;https://mangdan.github.io/assets/images/oci-oss-flink-running-jobs.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;kafka-생산자-producer&quot;&gt;Kafka 생산자 (Producer)&lt;/h3&gt;
&lt;p&gt;Kafka 생산자는 Java로 작성하였습니다.&lt;/p&gt;

&lt;h4 id=&quot;kafka-생산자-코드-작성&quot;&gt;Kafka 생산자 코드 작성&lt;/h4&gt;
&lt;p&gt;Kafka Dependency 설정과 함께 Jar 실행 시 Kafka 관련 Library추가를 위한 Maven Plugin 구성을 합니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;pom.xml&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.example.app&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;oss-kafka-producer&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;packaging&amp;gt;&lt;/span&gt;jar&lt;span class=&quot;nt&quot;&gt;&amp;lt;/packaging&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;project.build.sourceEncoding&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project.build.sourceEncoding&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;project.reporting.outputEncoding&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project.reporting.outputEncoding&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;kafka.version&amp;gt;&lt;/span&gt;3.3.1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/kafka.version&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.kafka&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;kafka-clients&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${kafka.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.slf4j&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;slf4j-api&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.0.5&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;ch.qos.logback&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;logback-classic&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.4.5&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
		  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.slf4j&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;slf4j-log4j12&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.0.5&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.fasterxml.jackson.core&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jackson-databind&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.14.1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt; 
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;defaultGoal&amp;gt;&lt;/span&gt;install&lt;span class=&quot;nt&quot;&gt;&amp;lt;/defaultGoal&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-compiler-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.8.1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;release&amp;gt;&lt;/span&gt;8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/release&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-resources-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.2.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;encoding&amp;gt;&lt;/span&gt;UTF-8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/encoding&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-dependency-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.1.2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;executions&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;execution&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;copy-dependencies&lt;span class=&quot;nt&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;phase&amp;gt;&lt;/span&gt;package&lt;span class=&quot;nt&quot;&gt;&amp;lt;/phase&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;goals&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;goal&amp;gt;&lt;/span&gt;copy-dependencies&lt;span class=&quot;nt&quot;&gt;&amp;lt;/goal&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/goals&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;outputDirectory&amp;gt;&lt;/span&gt;${project.build.directory}/libs&lt;span class=&quot;nt&quot;&gt;&amp;lt;/outputDirectory&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;overWriteReleases&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/overWriteReleases&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;overWriteSnapshots&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/overWriteSnapshots&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;overWriteIfNewer&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/overWriteIfNewer&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;nt&quot;&gt;&amp;lt;includeScope&amp;gt;&lt;/span&gt;runtime&lt;span class=&quot;nt&quot;&gt;&amp;lt;/includeScope&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/execution&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;/executions&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-jar-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;2.5&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;archive&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;manifest&amp;gt;&lt;/span&gt;
							&lt;span class=&quot;nt&quot;&gt;&amp;lt;addClasspath&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/addClasspath&amp;gt;&lt;/span&gt;
							&lt;span class=&quot;nt&quot;&gt;&amp;lt;addExtensions&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/addExtensions&amp;gt;&lt;/span&gt; 
							&lt;span class=&quot;nt&quot;&gt;&amp;lt;mainClass&amp;gt;&lt;/span&gt;com.example.app.KafkaProducerExample&lt;span class=&quot;nt&quot;&gt;&amp;lt;/mainClass&amp;gt;&lt;/span&gt;
							&lt;span class=&quot;nt&quot;&gt;&amp;lt;classpathPrefix&amp;gt;&lt;/span&gt;libs/&lt;span class=&quot;nt&quot;&gt;&amp;lt;/classpathPrefix&amp;gt;&lt;/span&gt;                            
						&lt;span class=&quot;nt&quot;&gt;&amp;lt;/manifest&amp;gt;&lt;/span&gt;
						&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- &amp;lt;manifestEntries&amp;gt;
							&amp;lt;Class-Path&amp;gt;libs/kafka-clients-2.6.0.jar&amp;lt;/Class-Path&amp;gt;
						&amp;lt;/manifestEntries&amp;gt; --&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;/archive&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;profiles&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;profile&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- A profile that does everyting correctly:
			We set the Flink dependencies to provided --&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;build-jar&lt;span class=&quot;nt&quot;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;activation&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;activeByDefault&amp;gt;&lt;/span&gt;false&lt;span class=&quot;nt&quot;&gt;&amp;lt;/activeByDefault&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/activation&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.kafka&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;kafka-clients&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${kafka.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;provided&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/profile&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/profiles&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;실행 시 5건의 텍스트 메시지를 OCI Streaming Service로 전송하도록 다음과 같이 코드를 작성하였습니다.&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@SuppressWarnings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;all&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CompatibleProducer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;produce&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;authToken&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{AUTH_TOKEN}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tenancyName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{테넌시명}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{사용자 계정}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;streamPoolId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{Stream Pool OCID}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;topicName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;{Stream Name/Topic Name}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;nc&quot;&gt;Properties&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ProducerConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;BOOTSTRAP_SERVERS_CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cell-1.streaming.ap-seoul-1.oci.oraclecloud.com:9092&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ProducerConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;KEY_SERIALIZER_CLASS_CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StringSerializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ProducerConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VALUE_SERIALIZER_CLASS_CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StringSerializer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ProducerConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TRANSACTION_TIMEOUT_CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ProducerConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DELIVERY_TIMEOUT_MS_CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ProducerConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;REQUEST_TIMEOUT_MS_CONFIG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sasl.mechanism&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;PLAIN&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;security.protocol&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;SASL_SSL&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sasl.jaas.config&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;s&quot;&gt;&quot;org.apache.kafka.common.security.plain.PlainLoginModule required username=\&quot;&quot;&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tenancyName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;streamPoolId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;\&quot; &quot;&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;password=\&quot;&quot;&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;authToken&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;\&quot;;&quot;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;retries&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// retries on transient errors and load balancing disconnection&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;max.request.size&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// limit request size to 1MB&lt;/span&gt;

        &lt;span class=&quot;nc&quot;&gt;KafkaProducer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;KafkaProducer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nc&quot;&gt;ProducerRecord&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;record&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProducerRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topicName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;randomUUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Test record #&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            
            &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;record&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
                            &lt;span class=&quot;s&quot;&gt;&quot;Sent msg to &quot;&lt;/span&gt;
                                    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;md&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;partition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                                    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; with offset &quot;&lt;/span&gt;
                                    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;md&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                                    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; at &quot;&lt;/span&gt;
                                    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;md&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;produced 5 messages&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;빌드-및-생산자-실행&quot;&gt;빌드 및 생산자 실행&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;빌드&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mvn package
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;실행&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ java -jar target/oss-kafka-producer-1.0-SNAPSHOT.jar

00:11 INFO  o.a.k.c.s.a.AbstractLogin - Successfully logged in.
00:11 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.6.0
00:11 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 62abe01bee039651
00:11 INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1601824282658
00:11 INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: OSS
Sent msg to 0 with offset 15 at 1601824286584
Sent msg to 0 with offset 16 at 1601824286584
Sent msg to 0 with offset 17 at 1601824286584
Sent msg to 0 with offset 18 at 1601824286584
Sent msg to 0 with offset 19 at 1601824286584
00:11 INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 9223372036854775807 ms.
produced 5 messages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;게시된 메시지를 OCI Streaming Service에서 확인&lt;/strong&gt;
&lt;img src=&quot;https://mangdan.github.io/assets/images/oci-oss-recent-messages.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;flink-job-task-확인&quot;&gt;Flink Job Task 확인&lt;/h3&gt;
&lt;p&gt;Flink Console에서 Task Managers &amp;gt; Stdout으로 이동하여 소비한 메시지를 확인할 수 있습니다.
&lt;img src=&quot;https://mangdan.github.io/assets/images/oci-oss-flink-stdout.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;소스-공유&quot;&gt;소스 공유&lt;/h3&gt;
&lt;p&gt;소스는 다음 &lt;a href=&quot;https://github.com/MangDan/oci-streaming-examples&quot;&gt;깃헙 저장소&lt;/a&gt;에서 확인할 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;참고&quot;&gt;참고&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blogs.oracle.com/developers/oracle-streaming-service-producer-consumer&quot;&gt;https://blogs.oracle.com/developers/oracle-streaming-service-producer-consumer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/igfasouza/OSS_examples&quot;&gt;https://github.com/igfasouza/OSS_examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>

			
				<category term="cloudnative" />
			
			
				<category term="oci" />
			
				<category term="streaming" />
			
				<category term="kafka" />
			
				<category term="flink" />
			

			<published>2022-11-29T00:00:00+09:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//release-notes-2022-infrastructure/infrastructure-release-notes-202210/</id>
			<title>10월 OCI Infrastructure 업데이트 소식</title>
			<link href="http://localhost:4000//release-notes-2022-infrastructure/infrastructure-release-notes-202210/" rel="alternate" type="text/html" title="10월 OCI Infrastructure 업데이트 소식" />
			<updated>2022-10-30T00:00:00+09:00</updated>

			
				
				<author>
					
						<name>ks.kim</name>
					
					
					
				</author>
			
			<summary>2022년 10월 OCI Infrastructure 업데이트 소식입니다.</summary>
			<content type="html" xml:base="http://localhost:4000//release-notes-2022-infrastructure/infrastructure-release-notes-202210/">&lt;div class=&quot;panel radius&quot;&gt;
  &lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#full-stack-disaster-recovery-is-now-available&quot; id=&quot;markdown-toc-full-stack-disaster-recovery-is-now-available&quot;&gt;Full Stack Disaster Recovery is now available&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#기능-소개&quot; id=&quot;markdown-toc-기능-소개&quot;&gt;기능 소개&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#x9-based-intel-and-e4-based-amd-gpu-shapes-for-compute-instances&quot; id=&quot;markdown-toc-x9-based-intel-and-e4-based-amd-gpu-shapes-for-compute-instances&quot;&gt;X9-based (Intel) and E4-based (AMD) GPU shapes for Compute instances&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#기능-소개-1&quot; id=&quot;markdown-toc-기능-소개-1&quot;&gt;기능 소개&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h2 id=&quot;full-stack-disaster-recovery-is-now-available&quot;&gt;Full Stack Disaster Recovery is now available&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Services:&lt;/strong&gt; Full Stack Disaster Recovery, Oracle Cloud Infrastructure&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Release Date:&lt;/strong&gt; Oct. 25, 2022&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; &lt;a href=&quot;https://docs.oracle.com/iaas/releasenotes/changes/ec2eaf1e-e2f8-4e62-95fb-348e0cf7fa86/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.oracle.com/iaas/releasenotes/changes/ec2eaf1e-e2f8-4e62-95fb-348e0cf7fa86/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기능-소개&quot;&gt;기능 소개&lt;/h3&gt;
&lt;p&gt;한 번의 클릭으로 전체 애플리케이션 스택에 대한 포괄적인 재해 복구 관리를 제공하는 OCI를 위한 최초의 진정한 DRaaS(Disaster Recovery-as-a-Service) 솔루션입니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;사용 가능한 리전은 아래와 같습니다.
    &lt;ol&gt;
      &lt;li&gt;Amsterdam&lt;/li&gt;
      &lt;li&gt;Ashburn&lt;/li&gt;
      &lt;li&gt;Frankfurt&lt;/li&gt;
      &lt;li&gt;London&lt;/li&gt;
      &lt;li&gt;Phoenix&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;다음 OCI 리소스 유형에 대한 재해 복구를 지원합니다.
    &lt;ol&gt;
      &lt;li&gt;컴퓨팅 인스턴스&lt;/li&gt;
      &lt;li&gt;부트 및 블록 볼륨(볼륨 그룹)&lt;/li&gt;
      &lt;li&gt;Oracle Exadata 데이터베이스 서비스&lt;/li&gt;
      &lt;li&gt;오라클 엔터프라이즈 데이터베이스 서비스&lt;/li&gt;
      &lt;li&gt;Shared Exadata 인프라의 Oracle Autonomous Database&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/infrastructure/2022/10/SCR-20221124-evi.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;x9-based-intel-and-e4-based-amd-gpu-shapes-for-compute-instances&quot;&gt;X9-based (Intel) and E4-based (AMD) GPU shapes for Compute instances&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Services:&lt;/strong&gt; Compute&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Release Date:&lt;/strong&gt; Oct. 27, 2022&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; &lt;a href=&quot;https://docs.oracle.com/iaas/releasenotes/changes/e6a5078c-bc69-45be-8553-eef9d1ddc5a2/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.oracle.com/iaas/releasenotes/changes/e6a5078c-bc69-45be-8553-eef9d1ddc5a2/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;기능-소개-1&quot;&gt;기능 소개&lt;/h3&gt;
&lt;p&gt;베어 메탈 인스턴스에 두 가지 새로운 GPU 형태를 사용할 수 있습니다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;BM.GPU.GU1: X9-based GPU compute.&lt;/li&gt;
  &lt;li&gt;BM.GPU.GM4: E4-based GPU compute.
    &lt;ul&gt;
      &lt;li&gt;두 형태 모두 로컬로 연결된 NVMe 기반 SSD 스토리지를 포함합니다.  BM.GPU.GM4.8 모양은 클러스터 네트워크를 지원합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</content>

			
				<category term="release-notes-2022-infrastructure" />
			
			
				<category term="oci-release-notes-2022" />
			
				<category term="Oct-2022" />
			
				<category term="Infrastructure" />
			

			<published>2022-10-30T00:00:00+09:00</published>
		</entry>
	
		<entry>
			<id>http://localhost:4000//release-notes-2022-dataplatform/oracle-dataplatform-release-notes-202210/</id>
			<title>10월 OCI Oracle Data Platform 관련 업데이트 소식</title>
			<link href="http://localhost:4000//release-notes-2022-dataplatform/oracle-dataplatform-release-notes-202210/" rel="alternate" type="text/html" title="10월 OCI Oracle Data Platform 관련 업데이트 소식" />
			<updated>2022-10-30T00:00:00+09:00</updated>

			
				
				<author>
					
						<name>Phillsoo Lim</name>
					
					
					
				</author>
			
			<summary>2022년 10월 OCI Oracle Data Platform 관련 업데이트 소식입니다.</summary>
			<content type="html" xml:base="http://localhost:4000//release-notes-2022-dataplatform/oracle-dataplatform-release-notes-202210/">&lt;div class=&quot;panel radius&quot;&gt;
  &lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#oci-egress-is-now-chargeable-for-media-streams&quot; id=&quot;markdown-toc-oci-egress-is-now-chargeable-for-media-streams&quot;&gt;OCI Egress is now chargeable for Media Streams&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#서비스-소개&quot; id=&quot;markdown-toc-서비스-소개&quot;&gt;서비스 소개&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#key-capabilities&quot; id=&quot;markdown-toc-key-capabilities&quot;&gt;Key Capabilities&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#신규-변경-사항&quot; id=&quot;markdown-toc-신규-변경-사항&quot;&gt;신규 변경 사항&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#solaris--windows-platform-support-and-improved-host-top-process-identification&quot; id=&quot;markdown-toc-solaris--windows-platform-support-and-improved-host-top-process-identification&quot;&gt;Solaris &amp;amp; Windows platform support and improved host top process identification&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#서비스-소개-1&quot; id=&quot;markdown-toc-서비스-소개-1&quot;&gt;서비스 소개&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#신규-변경-사항-1&quot; id=&quot;markdown-toc-신규-변경-사항-1&quot;&gt;신규 변경 사항&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#new-release-for-data-integration-revised&quot; id=&quot;markdown-toc-new-release-for-data-integration-revised&quot;&gt;New Release for Data Integration (revised)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#서비스-소개-2&quot; id=&quot;markdown-toc-서비스-소개-2&quot;&gt;서비스 소개&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#신규-변경-사항-2&quot; id=&quot;markdown-toc-신규-변경-사항-2&quot;&gt;신규 변경 사항&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#new-goldengate-deployment-types-and-connections-now-available&quot; id=&quot;markdown-toc-new-goldengate-deployment-types-and-connections-now-available&quot;&gt;New GoldenGate deployment types and connections now available&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#서비스-소개-3&quot; id=&quot;markdown-toc-서비스-소개-3&quot;&gt;서비스 소개&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#신규-변경-사항-3&quot; id=&quot;markdown-toc-신규-변경-사항-3&quot;&gt;신규 변경 사항&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;h2 id=&quot;oci-egress-is-now-chargeable-for-media-streams&quot;&gt;OCI Egress is now chargeable for Media Streams&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Services:&lt;/strong&gt;  Media Streams&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Release Date:&lt;/strong&gt; Oct. 4, 2022&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt;
&lt;a href=&quot;https://docs.oracle.com/en-us/iaas/Content/dms-mediastream/home.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.oracle.com/en-us/iaas/Content/dms-mediastream/home.htm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;서비스-소개&quot;&gt;서비스 소개&lt;/h3&gt;
&lt;p&gt;OCI Media Streams는 HTTP 라이브 스트리밍(HLS)과 같은 형식으로 패키징된 디지털 비디오를 시청자에게 전달할 수 있는 기능을 제공합니다. 사전 패키징된 HLS 패키지를 수집하거나 OCI Media Flow를 사용하여 소스 비디오를 스트리밍에 적합한 형식으로 트랜스코딩 및 패키징할 수 있습니다. Media Streams는 CDN(Content Delivery Network)을 통한 비디오 배포의 원본 서비스 역할을 하도록 구성할 수 있습니다.&lt;/p&gt;

&lt;p&gt;다음 다이어그램은 OCI Media Flow 와 OCI Media Streams 가 어떻게 통합되는지를 나타내는 그림입니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2022/07/01_architecturediagram_medserv_1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;key-capabilities&quot;&gt;Key Capabilities&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Media Services에는 ABR (Adaptive Bit Rate) 스트림에 대한 대상 형식 변환, 암호화 및 비디오 분할을 위한 패키징 기능이 포함되어 있습니다. 또한 선도적인 CDN(Content Delivery Network) 파트너 생성 통합 또는 직접 서비스 에지 서비스를 사용하여 패키지된 ABR 콘텐츠의 안전하고 확장 가능한 배포를 제공합니다. Media Streams는 소스 콘텐츠에서 스트리밍 형식의 배포 및 패키징 프로세스를 단순화하고 복잡한 비디오 패키징 인프라의 원활한 관리를 가능하게 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;신규-변경-사항&quot;&gt;신규 변경 사항&lt;/h3&gt;

&lt;p&gt;Media Streams에 대한 OCI Egress(Outbound Data Transfer) 면제 기간이 종료되었습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;solaris--windows-platform-support-and-improved-host-top-process-identification&quot;&gt;Solaris &amp;amp; Windows platform support and improved host top process identification&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Services:&lt;/strong&gt;  Operations Insights&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Release Date:&lt;/strong&gt; Oct. 4, 2022&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt;
&lt;a href=&quot;https://docs.oracle.com/en-us/iaas/operations-insights/doc/analyze-host-resources.html#OOPSI-GUID-513D7C7B-1D4B-44A9-A01F-772DBD995F4D&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.oracle.com/en-us/iaas/operations-insights/doc/analyze-host-resources.html#OOPSI-GUID-513D7C7B-1D4B-44A9-A01F-772DBD995F4D&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;서비스-소개-1&quot;&gt;서비스 소개&lt;/h3&gt;
&lt;p&gt;Operations Insights를 사용하면 개별 호스트와 여러 호스트에 대한 현재 및 예상 CPU 사용량을 볼 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;신규-변경-사항-1&quot;&gt;신규 변경 사항&lt;/h3&gt;
&lt;p&gt;Operations Insights는 이제 Solaris 및 Windows 호스트 플랫폼 유형을 모두 지원합니다. 호스트 상위 프로세스는 이제 호스트 프로세스 문제의 표시 및 분석을 개선하기 위해 개별 프로세스 세부 정보에 액세스할 수 있는 표 (tabular) 형식으로 나타납니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;지원 플랫폼 타입
    &lt;ul&gt;
      &lt;li&gt;Linux&lt;/li&gt;
      &lt;li&gt;Solaris&lt;/li&gt;
      &lt;li&gt;zLinux&lt;/li&gt;
      &lt;li&gt;Windows&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2022/09/06_operation_insights_host.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;new-release-for-data-integration-revised&quot;&gt;New Release for Data Integration (revised)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Services:&lt;/strong&gt;  Data Integration, Oracle Cloud Infrastructure&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Release Date:&lt;/strong&gt; Oct. 5, 2022&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt;
&lt;a href=&quot;https://docs.oracle.com/en-us/iaas/releasenotes/changes/8daf8df9-032f-4587-aa8c-62b756840bbf/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.oracle.com/en-us/iaas/releasenotes/changes/8daf8df9-032f-4587-aa8c-62b756840bbf/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;서비스-소개-2&quot;&gt;서비스 소개&lt;/h3&gt;
&lt;p&gt;신규 버전의 Data Integration 이 출시가 되었습니다.&lt;/p&gt;

&lt;h3 id=&quot;신규-변경-사항-2&quot;&gt;신규 변경 사항&lt;/h3&gt;
&lt;p&gt;신규 버전의 Data Integration 에 반영된 사항은 아래와 같습니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Public 또는 Private REST API 에 대한 Endpoint 의 기본 URL을 사용하여 데이터 소스에 연결하고 데이터를 추출&lt;/li&gt;
  &lt;li&gt;Data Flow (DI) 또는 Data Loader task에서 Object Storage, S3 또는 HDFS 소스를 구성할 때 Excel 파일 유형을 사용&lt;/li&gt;
  &lt;li&gt;Data Flow (DI) 에서 JSON, Avro 및 Parquet 파일의 계층 배열 데이터를 관계형 형식으로 비정규화하기 위해 flatten operator (평면화 연산자)를 사용&lt;/li&gt;
  &lt;li&gt;Pipeline 에서 Decision Operator 를 사용하여 Boolean 값으로 평가되는 조건식을 기반으로 분기 흐름을 지정&lt;/li&gt;
  &lt;li&gt;Data Flow(DI) 또는 Data Loader task 에서 BICC Fusion 애플리케이션 소스를 구성할때 target attribute 으로 포함할 column 유형을 선택&lt;/li&gt;
  &lt;li&gt;Data Loader task 에서 BICC Fusion 애플리케이션 소스로 작업할 때 여러 데이터 엔터티 로드 유형을 사용&lt;/li&gt;
  &lt;li&gt;Logical entity qualifier 와 함께 Data Loader task 에서 파일 패턴을 사용하여 여러 Object Storage, S3 또는 HDFS 소스 데이터 엔티티를 선택하고 런타임 시 일치하는 파일을 논리적 엔티티로 통합&lt;/li&gt;
  &lt;li&gt;REST task 에서 polling 을 구성할 때 json_path 함수와 함께 CAST 식에서 JSON_TEXT 유형을 사용&lt;/li&gt;
  &lt;li&gt;Pipeline REST task 에서 JSON 데이터 유형 응답 출력 SYS.RESPONSE_PAYLOAD_JSON 및 SYS.RESPONSE_HEADERS_JSON을 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;new-goldengate-deployment-types-and-connections-now-available&quot;&gt;New GoldenGate deployment types and connections now available&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Services:&lt;/strong&gt;  Data Integration, Oracle Cloud Infrastructure&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Release Date:&lt;/strong&gt; Oct. 7, 2022&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt;
&lt;a href=&quot;https://docs.oracle.com/en-us/iaas/releasenotes/changes/8daf8df9-032f-4587-aa8c-62b756840bbf/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.oracle.com/en-us/iaas/releasenotes/changes/8daf8df9-032f-4587-aa8c-62b756840bbf/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;서비스-소개-3&quot;&gt;서비스 소개&lt;/h3&gt;
&lt;p&gt;신규 버전의 GoldenGate 서비스가 Release 되었습니다. 새로운 GoldenGate Release 에는 Oracle 데이터베이스, MySQL 및 Bigdata Deployment 유형과 이러한 Deployment 를 지원하는 다양한 DB Connection 유형이 추가되었습니다.
추가된 Deployment Type 인 MySQL 과 BigData 도 GoldenGate 구성이 가능해졌습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/database/2022/10/01_New-GoldenGate.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;신규-변경-사항-3&quot;&gt;신규 변경 사항&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Deployment Types
    &lt;ul&gt;
      &lt;li&gt;Oracle Database&lt;/li&gt;
      &lt;li&gt;MySQL&lt;/li&gt;
      &lt;li&gt;Big Data&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Supported Connectoins
    &lt;ul&gt;
      &lt;li&gt;Oracle Databases (Oracle Database 11.2.0.4, 12.1.0.2, and higher, ExaCS, Autonomous DB, AWS RDS)&lt;/li&gt;
      &lt;li&gt;MySQL (MySQL Database Server 5.7, 8.0
OCI MySQL Database Service 8.0
Amazon Aurora MySQL 5.7
Amazon RDS for MariaDB 10.4, 10.5
Amazon RDS for MySQL 5.7, 8.0
Azure Database for MySQL 5.7, 8.0
MariaDB 10.4, 10.5)&lt;/li&gt;
      &lt;li&gt;Big Data (Apache Kafka 2.4, 2.5, 2.6, 2.7, 2.8
OCI Streaming
OCI Object Storage (target only))&lt;/li&gt;
      &lt;li&gt;GoldenGate microservices deployments&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</content>

			
				<category term="release-notes-2022-dataplatform" />
			
			
				<category term="oci-release-notes-2022" />
			
				<category term="October-2022" />
			
				<category term="DATABASE" />
			

			<published>2022-10-30T00:00:00+09:00</published>
		</entry>
	
</feed>